Question ID,Question,Option A,Option B,Option C,Option D,Answer,Explanation,Subtopic,Topic,Difficulty (b)
1,A train traveling at 41 km/h takes 18 hours to reach its destination. Find the distance.,738,744,734,748,738,The correct answer is 738. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-3
2,"Find the next number in the series: 32, 11, 37, ?",36,43,44,37,37,The correct answer is 37. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-3
3,"Find the next number in the series: 22, 1, 4, ?",13,4,-2,13,4,The correct answer is 4. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-3
4,"Find the next number in the series: 19, 18, 6, ?",5,14,6,15,6,The correct answer is 6. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-2.9
5,"A person can complete a task in 41 days, and another in 12 days. How long will it take if they work together?",45,36,51,44,44,The correct answer is 44. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-2.9
6,In how many ways can 19 books be arranged on a shelf if 3 are identical?,28,38,41,33,33,The correct answer is 33. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-2.9
7,"Find the next number in the series: 23, 25, 14, ?",14,17,13,20,14,The correct answer is 14. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-2.9
8,"The average of 5, 8, and 41 is:",48,36,41,55,41,The correct answer is 41. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2.9
9,A train traveling at 29 km/h takes 22 hours to reach its destination. Find the distance.,638,644,635,651,638,The correct answer is 638. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-2.8
10,A shopkeeper earns 16% profit on an item sold for $15. Find the cost price.,24,16,23,34,23,The correct answer is 23. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-2.8
11,"The average of 7, 41, and 40 is:",35,40,42,47,40,The correct answer is 40. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2.8
12,"The average of 16, 24, and 35 is:",35,43,38,34,35,The correct answer is 35. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2.8
13,A bag contains 47 red and 4 blue balls. What is the probability of drawing a red ball?,29,22,35,12,22,The correct answer is 22. The calculation follows standard principles of Probability.,Probability,Quantitative,-2.8
14,"A person can complete a task in 3 days, and another in 12 days. How long will it take if they work together?",8,15,27,17,15,The correct answer is 15. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-2.7
15,A shopkeeper earns 26% profit on an item sold for $49. Find the cost price.,44,53,39,57,44,The correct answer is 44. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-2.7
16,What is the value of x in the equation 35x + 1 = 2?,2,12,17,0,2,The correct answer is 2. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.7
17,"A person can complete a task in 25 days, and another in 27 days. How long will it take if they work together?",24,19,20,30,20,The correct answer is 20. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-2.7
18,In how many ways can 49 books be arranged on a shelf if 22 are identical?,12,11,1,18,11,The correct answer is 11. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-2.7
19,A graph shows sales over 43 months. What is the average monthly sale?,34,19,24,25,24,The correct answer is 24. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2.6
20,What is the value of x in the equation 32x + 30 = 17?,13,17,32,25,17,The correct answer is 17. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.6
21,"A triangle has sides 6, 1, and 4. What is its perimeter?",13,7,3,16,7,The correct answer is 7. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-2.6
22,"A person can complete a task in 5 days, and another in 50 days. How long will it take if they work together?",14,12,13,22,13,The correct answer is 13. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-2.6
23,"A triangle has sides 26, 38, and 40. What is its perimeter?",64,67,63,70,64,The correct answer is 64. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-2.6
24,A graph shows sales over 21 months. What is the average monthly sale?,10,21,8,15,10,The correct answer is 10. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2.5
25,"Find the next number in the series: 32, 18, 12, ?",5,16,12,20,12,The correct answer is 12. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-2.5
26,A graph shows sales over 18 months. What is the average monthly sale?,15,6,1,13,6,The correct answer is 6. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2.5
27,"The average of 10, 5, and 2 is:",14,5,2,-1,2,The correct answer is 2. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2.5
28,A bag contains 25 red and 23 blue balls. What is the probability of drawing a red ball?,10,3,-1,8,3,The correct answer is 3. The calculation follows standard principles of Probability.,Probability,Quantitative,-2.5
29,What is the value of x in the equation 31x + 31 = 12?,4,22,12,23,12,The correct answer is 12. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.4
30,What is the value of x in the equation 22x + 7 = 6?,6,-4,9,11,6,The correct answer is 6. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.4
31,What is the value of x in the equation 1x + 4 = 19?,20,14,19,27,19,The correct answer is 19. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.4
32,In how many ways can 14 books be arranged on a shelf if 33 are identical?,18,17,20,27,18,The correct answer is 18. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-2.4
33,A graph shows sales over 48 months. What is the average monthly sale?,55,52,34,43,43,The correct answer is 43. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2.4
34,A shopkeeper earns 30% profit on an item sold for $17. Find the cost price.,24,23,37,34,24,The correct answer is 24. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-2.3
35,What is the value of x in the equation 25x + 6 = 33?,33,37,43,26,33,The correct answer is 33. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.3
36,"The average of 15, 29, and 45 is:",53,45,51,37,45,The correct answer is 45. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2.3
37,"Find the next number in the series: 27, 47, 14, ?",29,14,11,19,14,The correct answer is 14. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-2.3
38,What is the value of x in the equation 26x + 27 = 11?,11,16,21,8,11,The correct answer is 11. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.3
39,A bag contains 37 red and 22 blue balls. What is the probability of drawing a red ball?,24,30,28,38,28,The correct answer is 28. The calculation follows standard principles of Probability.,Probability,Quantitative,-2.2
40,A bag contains 40 red and 10 blue balls. What is the probability of drawing a red ball?,35,28,42,30,30,The correct answer is 30. The calculation follows standard principles of Probability.,Probability,Quantitative,-2.2
41,What is the value of x in the equation 8x + 36 = 3?,18,-1,3,8,3,The correct answer is 3. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-2.2
42,"A triangle has sides 31, 39, and 1. What is its perimeter?",70,62,82,71,70,The correct answer is 70. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-2.2
43,"The average of 45, 5, and 41 is:",38,44,41,47,41,The correct answer is 41. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2.2
44,A graph shows sales over 15 months. What is the average monthly sale?,52,49,64,45,49,The correct answer is 49. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2.1
45,A train traveling at 42 km/h takes 7 hours to reach its destination. Find the distance.,301,294,290,304,294,The correct answer is 294. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-2.1
46,"A person can complete a task in 16 days, and another in 9 days. How long will it take if they work together?",12,27,19,29,19,The correct answer is 19. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-2.1
47,A graph shows sales over 6 months. What is the average monthly sale?,43,37,36,31,36,The correct answer is 36. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2.1
48,A shopkeeper earns 38% profit on an item sold for $27. Find the cost price.,23,11,9,10,10,The correct answer is 10. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-2.1
49,"Find the next number in the series: 5, 7, 50, ?",49,61,50,51,50,The correct answer is 50. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-2
50,"A person can complete a task in 22 days, and another in 30 days. How long will it take if they work together?",45,58,42,50,45,The correct answer is 45. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-2
51,A graph shows sales over 26 months. What is the average monthly sale?,36,34,28,41,34,The correct answer is 34. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-2
52,"The average of 9, 22, and 28 is:",28,19,38,37,28,The correct answer is 28. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2
53,"The average of 39, 28, and 16 is:",16,8,27,19,16,The correct answer is 16. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-2
54,A train traveling at 23 km/h takes 8 hours to reach its destination. Find the distance.,199,184,185,180,184,The correct answer is 184. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-1.9
55,"A person can complete a task in 40 days, and another in 13 days. How long will it take if they work together?",-6,2,8,9,2,The correct answer is 2. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-1.9
56,"Find the next number in the series: 20, 47, 28, ?",31,28,27,39,28,The correct answer is 28. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-1.9
57,"A triangle has sides 41, 32, and 31. What is its perimeter?",87,70,76,73,73,The correct answer is 73. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-1.9
58,"The average of 11, 8, and 1 is:",1,11,8,-3,1,The correct answer is 1. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-1.9
59,"The average of 28, 17, and 17 is:",26,14,17,29,17,The correct answer is 17. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-1.8
60,"Find the next number in the series: 37, 38, 14, ?",24,14,8,19,14,The correct answer is 14. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-1.8
61,A graph shows sales over 3 months. What is the average monthly sale?,12,22,23,5,12,The correct answer is 12. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1.8
62,A shopkeeper earns 30% profit on an item sold for $29. Find the cost price.,16,9,2,5,5,The correct answer is 5. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-1.8
63,A graph shows sales over 39 months. What is the average monthly sale?,28,22,20,32,22,The correct answer is 22. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1.8
64,"A person can complete a task in 21 days, and another in 44 days. How long will it take if they work together?",33,48,37,40,37,The correct answer is 37. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-1.7
65,"A person can complete a task in 18 days, and another in 35 days. How long will it take if they work together?",26,21,11,26,21,The correct answer is 21. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-1.7
66,A bag contains 39 red and 42 blue balls. What is the probability of drawing a red ball?,-4,6,21,11,6,The correct answer is 6. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.7
67,"A triangle has sides 13, 6, and 23. What is its perimeter?",15,19,26,27,19,The correct answer is 19. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-1.7
68,In how many ways can 41 books be arranged on a shelf if 35 are identical?,37,41,32,23,32,The correct answer is 32. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1.7
69,"A triangle has sides 22, 2, and 24. What is its perimeter?",24,31,19,36,24,The correct answer is 24. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-1.6
70,A graph shows sales over 35 months. What is the average monthly sale?,44,49,59,47,47,The correct answer is 47. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1.6
71,"The average of 47, 8, and 7 is:",7,1,15,12,7,The correct answer is 7. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-1.6
72,A shopkeeper earns 49% profit on an item sold for $47. Find the cost price.,29,40,35,26,29,The correct answer is 29. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-1.6
73,A graph shows sales over 8 months. What is the average monthly sale?,-4,4,9,10,4,The correct answer is 4. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1.6
74,What is the value of x in the equation 21x + 20 = 4?,4,-4,6,13,4,The correct answer is 4. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-1.5
75,In how many ways can 21 books be arranged on a shelf if 29 are identical?,25,21,15,14,15,The correct answer is 15. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1.5
76,In how many ways can 48 books be arranged on a shelf if 6 are identical?,28,20,33,27,27,The correct answer is 27. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1.5
77,A train traveling at 31 km/h takes 32 hours to reach its destination. Find the distance.,1001,992,990,1002,992,The correct answer is 992. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-1.5
78,A bag contains 19 red and 44 blue balls. What is the probability of drawing a red ball?,-1,11,6,10,6,The correct answer is 6. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.5
79,A bag contains 39 red and 35 blue balls. What is the probability of drawing a red ball?,43,37,38,44,38,The correct answer is 38. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.4
80,A bag contains 42 red and 13 blue balls. What is the probability of drawing a red ball?,13,10,20,18,13,The correct answer is 13. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.4
81,What is the value of x in the equation 10x + 7 = 47?,40,53,52,47,47,The correct answer is 47. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-1.4
82,"The average of 45, 4, and 50 is:",51,50,62,46,50,The correct answer is 50. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-1.4
83,"Find the next number in the series: 23, 34, 18, ?",19,18,23,13,18,The correct answer is 18. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-1.4
84,In how many ways can 49 books be arranged on a shelf if 10 are identical?,17,1,7,21,7,The correct answer is 7. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1.3
85,"The average of 14, 24, and 38 is:",45,38,32,49,38,The correct answer is 38. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-1.3
86,What is the value of x in the equation 17x + 19 = 16?,21,28,16,15,16,The correct answer is 16. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-1.3
87,"Find the next number in the series: 6, 50, 46, ?",44,46,53,58,46,The correct answer is 46. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-1.3
88,"A person can complete a task in 23 days, and another in 32 days. How long will it take if they work together?",9,15,21,2,9,The correct answer is 9. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-1.3
89,A bag contains 24 red and 32 blue balls. What is the probability of drawing a red ball?,34,42,46,41,41,The correct answer is 41. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.2
90,"A person can complete a task in 36 days, and another in 17 days. How long will it take if they work together?",53,45,50,41,45,The correct answer is 45. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-1.2
91,In how many ways can 4 books be arranged on a shelf if 38 are identical?,35,41,33,46,35,The correct answer is 35. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1.2
92,A graph shows sales over 45 months. What is the average monthly sale?,8,10,9,24,9,The correct answer is 9. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1.2
93,In how many ways can 16 books be arranged on a shelf if 40 are identical?,59,50,43,47,47,The correct answer is 47. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1.2
94,What is the value of x in the equation 41x + 41 = 22?,29,17,22,33,22,The correct answer is 22. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-1.1
95,A bag contains 50 red and 48 blue balls. What is the probability of drawing a red ball?,33,20,24,11,20,The correct answer is 20. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.1
96,A graph shows sales over 39 months. What is the average monthly sale?,32,14,21,26,21,The correct answer is 21. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1.1
97,A bag contains 42 red and 29 blue balls. What is the probability of drawing a red ball?,15,13,29,24,15,The correct answer is 15. The calculation follows standard principles of Probability.,Probability,Quantitative,-1.1
98,A shopkeeper earns 5% profit on an item sold for $11. Find the cost price.,20,9,3,11,9,The correct answer is 9. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-1.1
99,"The average of 25, 11, and 11 is:",25,5,11,19,11,The correct answer is 11. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-1
100,A graph shows sales over 8 months. What is the average monthly sale?,-3,5,15,15,5,The correct answer is 5. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1
101,In how many ways can 21 books be arranged on a shelf if 50 are identical?,14,19,4,3,4,The correct answer is 4. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-1
102,A bag contains 12 red and 28 blue balls. What is the probability of drawing a red ball?,5,6,1,10,5,The correct answer is 5. The calculation follows standard principles of Probability.,Probability,Quantitative,-1
103,A graph shows sales over 5 months. What is the average monthly sale?,50,50,44,39,44,The correct answer is 44. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-1
104,"The average of 40, 29, and 5 is:",12,5,1,12,5,The correct answer is 5. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-0.9
105,A graph shows sales over 3 months. What is the average monthly sale?,1,4,8,-7,1,The correct answer is 1. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-0.9
106,In how many ways can 42 books be arranged on a shelf if 50 are identical?,50,44,59,59,50,The correct answer is 50. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-0.9
107,A train traveling at 24 km/h takes 8 hours to reach its destination. Find the distance.,192,185,206,197,192,The correct answer is 192. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.9
108,"A person can complete a task in 34 days, and another in 50 days. How long will it take if they work together?",40,41,32,29,32,The correct answer is 32. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-0.9
109,A train traveling at 48 km/h takes 14 hours to reach its destination. Find the distance.,672,686,673,667,672,The correct answer is 672. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.8
110,A graph shows sales over 1 months. What is the average monthly sale?,19,6,25,12,12,The correct answer is 12. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-0.8
111,"A triangle has sides 10, 9, and 29. What is its perimeter?",19,26,25,18,19,The correct answer is 19. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-0.8
112,"A triangle has sides 16, 9, and 23. What is its perimeter?",30,25,18,29,25,The correct answer is 25. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-0.8
113,"The average of 40, 12, and 31 is:",38,23,39,31,31,The correct answer is 31. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-0.8
114,"Find the next number in the series: 45, 36, 13, ?",18,13,6,22,13,The correct answer is 13. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-0.7
115,In how many ways can 15 books be arranged on a shelf if 46 are identical?,7,4,2,12,4,The correct answer is 4. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-0.7
116,In how many ways can 36 books be arranged on a shelf if 45 are identical?,30,37,42,25,30,The correct answer is 30. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,-0.7
117,"A triangle has sides 19, 5, and 7. What is its perimeter?",32,24,18,31,24,The correct answer is 24. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-0.7
118,A train traveling at 1 km/h takes 49 hours to reach its destination. Find the distance.,63,49,56,40,49,The correct answer is 49. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.7
119,What is the value of x in the equation 33x + 19 = 34?,45,29,41,34,34,The correct answer is 34. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.6
120,A graph shows sales over 31 months. What is the average monthly sale?,15,25,5,27,15,The correct answer is 15. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-0.6
121,"The average of 15, 49, and 42 is:",42,55,50,35,42,The correct answer is 42. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-0.6
122,A shopkeeper earns 29% profit on an item sold for $22. Find the cost price.,38,26,23,24,24,The correct answer is 24. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-0.6
123,"A person can complete a task in 21 days, and another in 9 days. How long will it take if they work together?",3,16,-9,1,1,The correct answer is 1. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-0.6
124,A shopkeeper earns 35% profit on an item sold for $24. Find the cost price.,42,41,51,34,41,The correct answer is 41. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-0.5
125,A train traveling at 5 km/h takes 16 hours to reach its destination. Find the distance.,83,80,89,76,80,The correct answer is 80. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.5
126,What is the value of x in the equation 50x + 18 = 50?,61,50,44,56,50,The correct answer is 50. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.5
127,What is the value of x in the equation 32x + 26 = 40?,35,40,53,42,40,The correct answer is 40. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.5
128,A graph shows sales over 18 months. What is the average monthly sale?,51,37,48,41,41,The correct answer is 41. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-0.5
129,A bag contains 19 red and 45 blue balls. What is the probability of drawing a red ball?,31,41,52,44,41,The correct answer is 41. The calculation follows standard principles of Probability.,Probability,Quantitative,-0.4
130,"Find the next number in the series: 20, 49, 42, ?",42,50,54,35,42,The correct answer is 42. The calculation follows standard principles of Number Series.,Number Series,Quantitative,-0.4
131,A shopkeeper earns 20% profit on an item sold for $11. Find the cost price.,22,10,12,18,12,The correct answer is 12. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-0.4
132,"A triangle has sides 40, 3, and 27. What is its perimeter?",43,50,33,45,43,The correct answer is 43. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-0.4
133,A train traveling at 18 km/h takes 49 hours to reach its destination. Find the distance.,873,882,893,887,882,The correct answer is 882. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.4
134,A bag contains 45 red and 45 blue balls. What is the probability of drawing a red ball?,28,19,36,30,28,The correct answer is 28. The calculation follows standard principles of Probability.,Probability,Quantitative,-0.3
135,What is the value of x in the equation 46x + 26 = 34?,36,26,41,34,34,The correct answer is 34. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.3
136,A train traveling at 16 km/h takes 20 hours to reach its destination. Find the distance.,320,329,326,317,320,The correct answer is 320. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.3
137,A shopkeeper earns 33% profit on an item sold for $32. Find the cost price.,-1,11,11,3,3,The correct answer is 3. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-0.3
138,"A triangle has sides 14, 36, and 20. What is its perimeter?",40,51,50,60,50,The correct answer is 50. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-0.3
139,"A triangle has sides 19, 34, and 46. What is its perimeter?",53,49,56,63,53,The correct answer is 53. The calculation follows standard principles of Geometry.,Geometry,Quantitative,-0.2
140,A shopkeeper earns 21% profit on an item sold for $10. Find the cost price.,6,1,-1,9,1,The correct answer is 1. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-0.2
141,A graph shows sales over 29 months. What is the average monthly sale?,24,31,38,33,31,The correct answer is 31. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,-0.2
142,A shopkeeper earns 23% profit on an item sold for $47. Find the cost price.,35,20,25,22,22,The correct answer is 22. The calculation follows standard principles of Percentages.,Percentages,Quantitative,-0.2
143,What is the value of x in the equation 6x + 34 = 26?,38,31,22,26,26,The correct answer is 26. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.2
144,A train traveling at 22 km/h takes 15 hours to reach its destination. Find the distance.,340,345,330,325,330,The correct answer is 330. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,-0.1
145,"The average of 40, 17, and 35 is:",25,37,35,45,35,The correct answer is 35. The calculation follows standard principles of Statistics.,Statistics,Quantitative,-0.1
146,"A person can complete a task in 9 days, and another in 15 days. How long will it take if they work together?",58,40,54,46,46,The correct answer is 46. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,-0.1
147,What is the value of x in the equation 3x + 13 = 15?,20,17,15,6,15,The correct answer is 15. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.1
148,What is the value of x in the equation 21x + 25 = 18?,18,26,11,21,18,The correct answer is 18. The calculation follows standard principles of Algebra.,Algebra,Quantitative,-0.1
149,What is the value of x in the equation 44x + 39 = 11?,17,24,11,5,11,The correct answer is 11. The calculation follows standard principles of Algebra.,Algebra,Quantitative,0
150,What is the value of x in the equation 47x + 17 = 39?,51,29,39,45,39,The correct answer is 39. The calculation follows standard principles of Algebra.,Algebra,Quantitative,0
151,A shopkeeper earns 18% profit on an item sold for $20. Find the cost price.,4,23,11,15,11,The correct answer is 11. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0
152,What is the value of x in the equation 47x + 6 = 41?,53,48,34,41,41,The correct answer is 41. The calculation follows standard principles of Algebra.,Algebra,Quantitative,0
153,"A triangle has sides 12, 6, and 28. What is its perimeter?",18,8,24,28,18,The correct answer is 18. The calculation follows standard principles of Geometry.,Geometry,Quantitative,0.1
154,"The average of 35, 1, and 7 is:",20,-2,7,14,7,The correct answer is 7. The calculation follows standard principles of Statistics.,Statistics,Quantitative,0.1
155,"A person can complete a task in 7 days, and another in 10 days. How long will it take if they work together?",13,20,29,30,20,The correct answer is 20. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.1
156,"Find the next number in the series: 44, 25, 17, ?",23,17,25,10,17,The correct answer is 17. The calculation follows standard principles of Number Series.,Number Series,Quantitative,0.1
157,A shopkeeper earns 29% profit on an item sold for $49. Find the cost price.,36,42,48,41,41,The correct answer is 41. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0.1
158,A train traveling at 37 km/h takes 45 hours to reach its destination. Find the distance.,1665,1671,1661,1680,1665,The correct answer is 1665. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,0.2
159,"A person can complete a task in 1 days, and another in 24 days. How long will it take if they work together?",-1,23,12,8,8,The correct answer is 8. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.2
160,"The average of 49, 37, and 40 is:",50,40,33,41,40,The correct answer is 40. The calculation follows standard principles of Statistics.,Statistics,Quantitative,0.2
161,"A person can complete a task in 28 days, and another in 44 days. How long will it take if they work together?",39,33,44,30,33,The correct answer is 33. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.2
162,A bag contains 12 red and 23 blue balls. What is the probability of drawing a red ball?,34,28,41,26,28,The correct answer is 28. The calculation follows standard principles of Probability.,Probability,Quantitative,0.2
163,A graph shows sales over 9 months. What is the average monthly sale?,29,23,35,37,29,The correct answer is 29. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.3
164,In how many ways can 23 books be arranged on a shelf if 20 are identical?,41,38,32,25,32,The correct answer is 32. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,0.3
165,A shopkeeper earns 21% profit on an item sold for $11. Find the cost price.,21,35,28,38,28,The correct answer is 28. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0.3
166,"A person can complete a task in 35 days, and another in 1 days. How long will it take if they work together?",48,39,29,48,39,The correct answer is 39. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.3
167,A train traveling at 4 km/h takes 47 hours to reach its destination. Find the distance.,179,188,195,197,188,The correct answer is 188. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,0.3
168,What is the value of x in the equation 37x + 18 = 43?,43,55,49,41,43,The correct answer is 43. The calculation follows standard principles of Algebra.,Algebra,Quantitative,0.4
169,A graph shows sales over 16 months. What is the average monthly sale?,29,10,15,17,15,The correct answer is 15. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.4
170,"A person can complete a task in 5 days, and another in 12 days. How long will it take if they work together?",30,17,23,29,23,The correct answer is 23. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.4
171,A graph shows sales over 34 months. What is the average monthly sale?,16,26,24,12,16,The correct answer is 16. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.4
172,A shopkeeper earns 48% profit on an item sold for $17. Find the cost price.,50,47,61,49,49,The correct answer is 49. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0.4
173,In how many ways can 39 books be arranged on a shelf if 40 are identical?,48,34,43,35,35,The correct answer is 35. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,0.5
174,"The average of 11, 5, and 33 is:",43,39,30,33,33,The correct answer is 33. The calculation follows standard principles of Statistics.,Statistics,Quantitative,0.5
175,A train traveling at 35 km/h takes 10 hours to reach its destination. Find the distance.,346,350,359,364,350,The correct answer is 350. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,0.5
176,A shopkeeper earns 46% profit on an item sold for $4. Find the cost price.,55,51,44,42,44,The correct answer is 44. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0.5
177,A graph shows sales over 12 months. What is the average monthly sale?,42,32,47,31,32,The correct answer is 32. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.5
178,A graph shows sales over 33 months. What is the average monthly sale?,14,16,25,22,16,The correct answer is 16. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.6
179,"The average of 11, 45, and 30 is:",24,36,39,30,30,The correct answer is 30. The calculation follows standard principles of Statistics.,Statistics,Quantitative,0.6
180,"A person can complete a task in 3 days, and another in 35 days. How long will it take if they work together?",-3,7,1,9,1,The correct answer is 1. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.6
181,"A triangle has sides 28, 30, and 45. What is its perimeter?",73,65,58,48,58,The correct answer is 58. The calculation follows standard principles of Geometry.,Geometry,Quantitative,0.6
182,"A person can complete a task in 11 days, and another in 36 days. How long will it take if they work together?",33,28,19,21,21,The correct answer is 21. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,0.6
183,"The average of 2, 21, and 18 is:",24,24,10,18,18,The correct answer is 18. The calculation follows standard principles of Statistics.,Statistics,Quantitative,0.7
184,A train traveling at 4 km/h takes 22 hours to reach its destination. Find the distance.,94,93,80,88,88,The correct answer is 88. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,0.7
185,A bag contains 37 red and 15 blue balls. What is the probability of drawing a red ball?,28,28,23,22,23,The correct answer is 23. The calculation follows standard principles of Probability.,Probability,Quantitative,0.7
186,In how many ways can 38 books be arranged on a shelf if 47 are identical?,15,9,10,16,10,The correct answer is 10. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,0.7
187,In how many ways can 10 books be arranged on a shelf if 46 are identical?,11,28,27,18,18,The correct answer is 18. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,0.7
188,"Find the next number in the series: 28, 18, 44, ?",49,43,44,51,44,The correct answer is 44. The calculation follows standard principles of Number Series.,Number Series,Quantitative,0.8
189,A bag contains 16 red and 10 blue balls. What is the probability of drawing a red ball?,21,41,31,33,31,The correct answer is 31. The calculation follows standard principles of Probability.,Probability,Quantitative,0.8
190,"Find the next number in the series: 8, 44, 22, ?",36,22,15,25,22,The correct answer is 22. The calculation follows standard principles of Number Series.,Number Series,Quantitative,0.8
191,A train traveling at 14 km/h takes 50 hours to reach its destination. Find the distance.,709,700,692,708,700,The correct answer is 700. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,0.8
192,"Find the next number in the series: 42, 35, 40, ?",40,50,49,32,40,The correct answer is 40. The calculation follows standard principles of Number Series.,Number Series,Quantitative,0.8
193,A shopkeeper earns 47% profit on an item sold for $4. Find the cost price.,43,40,46,51,43,The correct answer is 43. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0.9
194,A graph shows sales over 27 months. What is the average monthly sale?,52,40,51,46,46,The correct answer is 46. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.9
195,A shopkeeper earns 19% profit on an item sold for $31. Find the cost price.,58,59,50,48,50,The correct answer is 50. The calculation follows standard principles of Percentages.,Percentages,Quantitative,0.9
196,A graph shows sales over 8 months. What is the average monthly sale?,43,39,29,34,34,The correct answer is 34. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,0.9
197,A train traveling at 1 km/h takes 25 hours to reach its destination. Find the distance.,30,17,25,39,25,The correct answer is 25. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,0.9
198,"The average of 43, 4, and 22 is:",29,32,22,12,22,The correct answer is 22. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1
199,"A person can complete a task in 13 days, and another in 1 days. How long will it take if they work together?",18,10,15,1,10,The correct answer is 10. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1
200,In how many ways can 16 books be arranged on a shelf if 36 are identical?,39,36,51,29,36,The correct answer is 36. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,1
201,A graph shows sales over 1 months. What is the average monthly sale?,18,9,11,18,11,The correct answer is 11. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,1
202,A graph shows sales over 30 months. What is the average monthly sale?,23,27,30,21,23,The correct answer is 23. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,1
203,A graph shows sales over 26 months. What is the average monthly sale?,32,24,29,20,24,The correct answer is 24. The calculation follows standard principles of Data Interpretation.,Data Interpretation,Quantitative,1.1
204,"The average of 42, 34, and 9 is:",16,14,9,0,9,The correct answer is 9. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1.1
205,"The average of 46, 25, and 20 is:",33,19,20,27,20,The correct answer is 20. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1.1
206,"The average of 43, 17, and 11 is:",18,11,18,8,11,The correct answer is 11. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1.1
207,"The average of 12, 40, and 21 is:",14,31,35,21,21,The correct answer is 21. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1.1
208,"The average of 4, 18, and 16 is:",24,9,31,16,16,The correct answer is 16. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1.2
209,"The average of 33, 5, and 18 is:",28,18,23,10,18,The correct answer is 18. The calculation follows standard principles of Statistics.,Statistics,Quantitative,1.2
210,Solve for x: 38x + 37 = 24,24,20,31,29,24,The correct answer is 24. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.2
211,Solve for x: 30x + 38 = 49,64,44,49,53,49,The correct answer is 49. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.2
212,Solve for x: 36x + 12 = 43,43,56,33,52,43,The correct answer is 43. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.2
213,Solve for x: 22x + 40 = 30,30,20,36,38,30,The correct answer is 30. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.3
214,Solve for x: 19x + 36 = 2,3,11,1,2,2,The correct answer is 2. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.3
215,Solve for x: 5x + 25 = 7,-3,17,7,12,7,The correct answer is 7. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.3
216,Solve for x: 49x + 17 = 32,27,41,32,40,32,The correct answer is 32. The calculation follows standard principles of Algebra.,Algebra,Quantitative,1.3
217,"A person can complete a task in 28 days, and another in 13 days. How long will it take if they work together?",43,47,50,41,43,The correct answer is 43. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.3
218,"A person can complete a task in 27 days, and another in 37 days. How long will it take if they work together?",9,18,4,0,4,The correct answer is 4. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.4
219,"A person can complete a task in 41 days, and another in 2 days. How long will it take if they work together?",19,28,39,32,28,The correct answer is 28. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.4
220,"A person can complete a task in 3 days, and another in 23 days. How long will it take if they work together?",47,42,28,37,37,The correct answer is 37. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.4
221,"A person can complete a task in 38 days, and another in 23 days. How long will it take if they work together?",15,10,25,20,15,The correct answer is 15. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.4
222,"A person can complete a task in 42 days, and another in 45 days. How long will it take if they work together?",50,58,55,47,50,The correct answer is 50. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.4
223,"A person can complete a task in 26 days, and another in 33 days. How long will it take if they work together?",3,8,7,-1,3,The correct answer is 3. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.5
224,"A person can complete a task in 14 days, and another in 34 days. How long will it take if they work together?",35,30,43,43,35,The correct answer is 35. The calculation follows standard principles of Time & Work.,Time & Work,Quantitative,1.5
225,A shopkeeper earns 36% profit on an item sold for $6. Find the cost price.,35,25,22,35,25,The correct answer is 25. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.5
226,A shopkeeper earns 12% profit on an item sold for $2. Find the cost price.,44,48,35,39,39,The correct answer is 39. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.5
227,A shopkeeper earns 37% profit on an item sold for $1. Find the cost price.,6,4,19,-5,4,The correct answer is 4. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.5
228,A shopkeeper earns 40% profit on an item sold for $12. Find the cost price.,27,32,40,40,32,The correct answer is 32. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.6
229,A shopkeeper earns 27% profit on an item sold for $33. Find the cost price.,20,31,16,24,20,The correct answer is 20. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.6
230,A shopkeeper earns 16% profit on an item sold for $37. Find the cost price.,31,43,28,25,28,The correct answer is 28. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.6
231,A shopkeeper earns 16% profit on an item sold for $15. Find the cost price.,10,2,-2,13,2,The correct answer is 2. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.6
232,A shopkeeper earns 17% profit on an item sold for $41. Find the cost price.,12,8,24,19,12,The correct answer is 12. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.6
233,A shopkeeper earns 19% profit on an item sold for $33. Find the cost price.,26,42,29,38,29,The correct answer is 29. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.7
234,A shopkeeper earns 10% profit on an item sold for $26. Find the cost price.,30,22,44,32,30,The correct answer is 30. The calculation follows standard principles of Percentages.,Percentages,Quantitative,1.7
235,A train traveling at 45 km/h takes 26 hours to reach its destination. Find the distance.,1167,1170,1180,1178,1170,The correct answer is 1170. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.7
236,A train traveling at 19 km/h takes 15 hours to reach its destination. Find the distance.,285,279,291,297,285,The correct answer is 285. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.7
237,A train traveling at 22 km/h takes 38 hours to reach its destination. Find the distance.,844,830,836,846,836,The correct answer is 836. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.7
238,A train traveling at 4 km/h takes 42 hours to reach its destination. Find the distance.,162,182,168,172,168,The correct answer is 168. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.8
239,A train traveling at 18 km/h takes 37 hours to reach its destination. Find the distance.,666,665,672,667,666,The correct answer is 666. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.8
240,A train traveling at 16 km/h takes 28 hours to reach its destination. Find the distance.,447,455,448,455,448,The correct answer is 448. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.8
241,A train traveling at 30 km/h takes 42 hours to reach its destination. Find the distance.,1275,1265,1255,1260,1260,The correct answer is 1260. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.8
242,A train traveling at 29 km/h takes 11 hours to reach its destination. Find the distance.,324,315,319,327,319,The correct answer is 319. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.8
243,A train traveling at 26 km/h takes 49 hours to reach its destination. Find the distance.,1286,1274,1280,1267,1274,The correct answer is 1274. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.9
244,A train traveling at 30 km/h takes 2 hours to reach its destination. Find the distance.,64,68,60,50,60,The correct answer is 60. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.9
245,A train traveling at 25 km/h takes 7 hours to reach its destination. Find the distance.,181,188,169,175,175,The correct answer is 175. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.9
246,A train traveling at 35 km/h takes 42 hours to reach its destination. Find the distance.,1470,1480,1462,1476,1470,The correct answer is 1470. The calculation follows standard principles of Speed & Distance.,Speed & Distance,Quantitative,1.9
247,In how many ways can 1 books be arranged on a shelf if 32 are identical?,20,29,15,25,20,The correct answer is 20. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,1.9
248,In how many ways can 46 books be arranged on a shelf if 34 are identical?,6,20,1,10,6,The correct answer is 6. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2
249,In how many ways can 25 books be arranged on a shelf if 44 are identical?,16,9,17,22,16,The correct answer is 16. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2
250,In how many ways can 46 books be arranged on a shelf if 43 are identical?,13,8,23,19,13,The correct answer is 13. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2
251,In how many ways can 9 books be arranged on a shelf if 8 are identical?,20,10,29,24,20,The correct answer is 20. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2
252,In how many ways can 25 books be arranged on a shelf if 5 are identical?,51,33,50,43,43,The correct answer is 43. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2
253,In how many ways can 25 books be arranged on a shelf if 25 are identical?,15,7,15,-2,7,The correct answer is 7. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2.1
254,In how many ways can 7 books be arranged on a shelf if 27 are identical?,48,50,38,41,41,The correct answer is 41. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2.1
255,In how many ways can 46 books be arranged on a shelf if 17 are identical?,38,28,46,53,38,The correct answer is 38. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2.1
256,In how many ways can 13 books be arranged on a shelf if 8 are identical?,15,23,30,25,23,The correct answer is 23. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2.1
257,In how many ways can 8 books be arranged on a shelf if 17 are identical?,24,34,46,31,31,The correct answer is 31. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2.1
258,In how many ways can 7 books be arranged on a shelf if 7 are identical?,33,43,26,34,33,The correct answer is 33. The calculation follows standard principles of Permutation & Combination.,Permutation & Combination,Quantitative,2.2
259,"Find the next number in the series: 34, 3, 48, ?",48,58,56,40,48,The correct answer is 48. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.2
260,"Find the next number in the series: 36, 49, 8, ?",8,18,14,5,8,The correct answer is 8. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.2
261,"Find the next number in the series: 17, 30, 44, ?",51,41,44,53,44,The correct answer is 44. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.2
262,"Find the next number in the series: 11, 21, 48, ?",48,52,42,63,48,The correct answer is 48. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.2
263,"Find the next number in the series: 33, 41, 14, ?",23,14,11,16,14,The correct answer is 14. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.3
264,"Find the next number in the series: 14, 8, 24, ?",26,38,22,24,24,The correct answer is 24. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.3
265,"Find the next number in the series: 39, 7, 10, ?",10,6,17,21,10,The correct answer is 10. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.3
266,"Find the next number in the series: 6, 26, 23, ?",33,33,23,21,23,The correct answer is 23. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.3
267,"Find the next number in the series: 46, 10, 2, ?",9,2,-8,7,2,The correct answer is 2. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.3
268,"Find the next number in the series: 34, 37, 37, ?",47,37,43,30,37,The correct answer is 37. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.4
269,"Find the next number in the series: 32, 24, 4, ?",17,8,-4,4,4,The correct answer is 4. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.4
270,"Find the next number in the series: 38, 12, 38, ?",38,50,29,43,38,The correct answer is 38. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.4
271,"Find the next number in the series: 21, 3, 50, ?",50,42,54,59,50,The correct answer is 50. The calculation follows standard principles of Number Series.,Number Series,Quantitative,2.4
272,A bag contains 29 red and 44 blue balls. What is the probability of drawing a red ball?,46,42,31,36,36,The correct answer is 36. The calculation follows standard principles of Probability.,Probability,Quantitative,2.4
273,A bag contains 47 red and 28 blue balls. What is the probability of drawing a red ball?,55,43,50,60,50,The correct answer is 50. The calculation follows standard principles of Probability.,Probability,Quantitative,2.5
274,A bag contains 14 red and 25 blue balls. What is the probability of drawing a red ball?,31,26,35,24,26,The correct answer is 26. The calculation follows standard principles of Probability.,Probability,Quantitative,2.5
275,A bag contains 12 red and 8 blue balls. What is the probability of drawing a red ball?,59,49,54,45,49,The correct answer is 49. The calculation follows standard principles of Probability.,Probability,Quantitative,2.5
276,A bag contains 18 red and 44 blue balls. What is the probability of drawing a red ball?,21,29,15,8,15,The correct answer is 15. The calculation follows standard principles of Probability.,Probability,Quantitative,2.5
277,A bag contains 39 red and 21 blue balls. What is the probability of drawing a red ball?,43,33,40,24,33,The correct answer is 33. The calculation follows standard principles of Probability.,Probability,Quantitative,2.5
278,A bag contains 18 red and 29 blue balls. What is the probability of drawing a red ball?,5,13,1,13,5,The correct answer is 5. The calculation follows standard principles of Probability.,Probability,Quantitative,2.6
279,A bag contains 31 red and 43 blue balls. What is the probability of drawing a red ball?,45,50,36,34,36,The correct answer is 36. The calculation follows standard principles of Probability.,Probability,Quantitative,2.6
280,A bag contains 50 red and 7 blue balls. What is the probability of drawing a red ball?,42,28,35,37,35,The correct answer is 35. The calculation follows standard principles of Probability.,Probability,Quantitative,2.6
281,A bag contains 48 red and 8 blue balls. What is the probability of drawing a red ball?,50,58,41,60,50,The correct answer is 50. The calculation follows standard principles of Probability.,Probability,Quantitative,2.6
282,A bag contains 8 red and 22 blue balls. What is the probability of drawing a red ball?,16,27,39,24,24,The correct answer is 24. The calculation follows standard principles of Probability.,Probability,Quantitative,2.6
283,A bag contains 38 red and 29 blue balls. What is the probability of drawing a red ball?,28,36,29,37,29,The correct answer is 29. The calculation follows standard principles of Probability.,Probability,Quantitative,2.7
284,A bag contains 17 red and 27 blue balls. What is the probability of drawing a red ball?,35,23,33,29,29,The correct answer is 29. The calculation follows standard principles of Probability.,Probability,Quantitative,2.7
285,"A triangle has sides 8, 24, and 2. What is its perimeter?",39,31,32,36,32,The correct answer is 32. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.7
286,"A triangle has sides 2, 6, and 7. What is its perimeter?",8,10,15,-2,8,The correct answer is 8. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.7
287,"A triangle has sides 34, 29, and 7. What is its perimeter?",70,63,53,75,63,The correct answer is 63. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.7
288,"A triangle has sides 44, 17, and 48. What is its perimeter?",61,52,62,67,61,The correct answer is 61. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.8
289,"A triangle has sides 13, 29, and 1. What is its perimeter?",42,54,48,34,42,The correct answer is 42. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.8
290,"A triangle has sides 14, 4, and 35. What is its perimeter?",25,18,21,11,18,The correct answer is 18. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.8
291,"A triangle has sides 36, 6, and 42. What is its perimeter?",38,43,53,42,42,The correct answer is 42. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.8
292,"A triangle has sides 14, 18, and 2. What is its perimeter?",40,32,29,33,32,The correct answer is 32. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.8
293,"A triangle has sides 14, 50, and 16. What is its perimeter?",69,64,72,60,64,The correct answer is 64. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.9
294,"A triangle has sides 4, 17, and 32. What is its perimeter?",21,19,33,27,21,The correct answer is 21. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.9
295,"A triangle has sides 33, 41, and 29. What is its perimeter?",86,74,70,81,74,The correct answer is 74. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.9
296,"A triangle has sides 48, 49, and 49. What is its perimeter?",107,97,93,101,97,The correct answer is 97. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.9
297,"A triangle has sides 7, 5, and 22. What is its perimeter?",21,16,5,12,12,The correct answer is 12. The calculation follows standard principles of Geometry.,Geometry,Quantitative,2.9
298,"A triangle has sides 15, 30, and 27. What is its perimeter?",45,43,53,55,45,The correct answer is 45. The calculation follows standard principles of Geometry.,Geometry,Quantitative,3
299,"A triangle has sides 3, 27, and 23. What is its perimeter?",28,30,40,38,30,The correct answer is 30. The calculation follows standard principles of Geometry.,Geometry,Quantitative,3
300,"A triangle has sides 25, 41, and 28. What is its perimeter?",72,60,66,76,66,The correct answer is 66. The calculation follows standard principles of Geometry.,Geometry,Quantitative,3
301,Which of the following statements should be used to obtain a remainder after dividing 3.14 by 2.1 ?,rem = 3.14 % 2.1;,"rem = modf(3.14, 2.1);","rem = fmod(3.14, 2.1);",Remainder cannot be obtain in floating point division.,"rem = fmod(3.14, 2.1);","fmod(x,y)
- Calculates x modulo y, the remainder of x/y.
This function is the same as the modulus operator. But
fmod()
performs floating point divisions.
Example
:
#include <stdio.h>
#include <math.h>
int main ()
{
printf (""fmod of 3.14/2.1 is %lf\n"", fmod (3.14,2.1) );
return 0;
}
Output
:
fmod of 3.14/2.1 is 1.040000",Declarations and Initializations,C Programming,-1.7
302,What are the types of linkages?,Internal and External,"External, Internal and None",External and None,Internal,"External, Internal and None","External Linkage-> means global, non-static variables and functions.
Internal Linkage-> means static variables and functions with file scope.
None Linkage-> means Local variables.",Declarations and Initializations,C Programming,-1.6
303,Which of the following special symbol allowed in a variable name?,* (asterisk),| (pipeline),#NAME?,_ (underscore),_ (underscore),"Variable names in C are made up of letters (upper and lower case) and digits. The underscore character (""_"") is also permitted. Names must not begin with a digit.
Examples
of valid (but not very descriptive) C variable names:
=> foo
=> Bar
=> BAZ
=> foo_bar
=> _foo42
=> _
=> QuUx",Declarations and Initializations,C Programming,-1.9
304,"Is there any difference between following declarations?
1 : extern int fun();
2 : int fun();",Both are identical,"No difference, except extern int fun(); is probably in another file",int fun(); is overrided with extern int fun();,None of these,"No difference, except extern int fun(); is probably in another file","extern int fun();
declaration in C is to indicate the existence of a global function and it is defined externally to the current module or in another file.
int fun();
declaration in C is to indicate the existence of a function inside the current module or in the same file.",Declarations and Initializations,C Programming,0.7
305,How would you round off a value from 1.66 to 2.0?,ceil(1.66),floor(1.66),roundup(1.66),roundto(1.66),ceil(1.66),"/* Example for ceil() and floor() functions: */
#
include
<stdio.h>
#
include
<math.h>
int
main
(
)
{
printf
(
""\n Result : %f""
,
ceil
(
1.44
)
)
;
printf
(
""\n Result : %f""
,
ceil
(
1.66
)
)
;
printf
(
""\n Result : %f""
,
floor
(
1.44
)
)
;
printf
(
""\n Result : %f""
,
floor
(
1.66
)
)
;
return
0
;
}
// Output:
// Result : 2.000000
// Result : 2.000000
// Result : 1.000000
// Result : 1.000000",Declarations and Initializations,C Programming,2.8
306,By default a real number is treated as a,float,double,long double,far double,double,"In computing, 'real number' often refers to non-complex floating-point numbers. It include both rational numbers, such as 42 and 3/4, and irrational numbers such as pi = 3.14159265...
When the accuracy of the floating point number is insufficient, we can use the
double
to define the number. The
double
is same as
float
but with longer precision and takes double space (8 bytes) than
float
.
To extend the precision further we can use
long double
which occupies 10 bytes of memory space.",Declarations and Initializations,C Programming,2.7
307,"Which of the following is not user defined data type?
1 :
struct book
{
    char name[10];
    float price;
    int pages;
};
2 :
long int l = 2.35;
3 :
enum day {Sun, Mon, Tue, Wed};",1,2,3,Both 1 and 2,2,"C data types classification are
Primary data types
int
char
float
double
void
Secondary data types (or) User-defined data type
Array
Pointer
Structure
Union
Enum
So, clearly
long int l = 2.35;
is not User-defined data type.
(i.e.
long int l = 2.35;
is the answer.)",Declarations and Initializations,C Programming,-1.9
308,"Is the following statement a declaration or definition?
extern int i;",Declaration,Definition,Function,Error,Declaration,"Declaring is the way a programmer tells the compiler to expect a particular type, be it a variable, class/struct/union type, a function type (prototype) or a particular object instance. (ie.
extern int i
)
Declaration never reserves any space for the variable or instance in the program's memory; it simply a ""hint"" to the compiler that a use of the variable or  instance is expected in the program. This hinting is technically called ""forward reference"".",Declarations and Initializations,C Programming,2.1
309,"Identify which of the following are declarations
1 : extern int x;
2 : float square ( float x ) { ... }
3 : double pow(double, double);",1,2,1 and 3,3,1 and 3,"extern int x; - is an external variable declaration.
double pow(double, double); - is a function prototype declaration.
Therefore, 1 and 3 are declarations. 2 is definition.",Declarations and Initializations,C Programming,-1.3
310,"In the following program where is the variable a getting defined and where it is getting declared?
#include<stdio.h>
int main()
{
    extern int a;
    printf(""%d\n"", a);
    return 0;
}
int a=20;","extern int a is declaration, int a = 20 is the definition","int a = 20 is declaration, extern int a is the definition","int a = 20 is definition, a is not defined","a is declared, a is not defined","extern int a is declaration, int a = 20 is the definition",#NAME?,Declarations and Initializations,C Programming,2.3
311,When we mention the prototype of a function?,Defining,Declaring,Prototyping,Calling,Declaring,"A function prototype in C or C++ is a declaration of a function that omits the function body but does specify the function's name, argument types and return type.
While a function definition specifies what a function does, a function prototype can be thought of as specifying its interface.",Declarations and Initializations,C Programming,2.1
312,"What is the output of the program given below ?
#include<stdio.h>
int main()
{
    enum status { pass, fail, atkt};
    enum status stud1, stud2, stud3;
    stud1 = pass;
    stud2 = atkt;
    stud3 = fail;
    printf(""%d, %d, %d\n"", stud1, stud2, stud3);
    return 0;
}","0, 1, 2","1, 2, 3","0, 2, 1","1, 3, 2","0, 2, 1","enum
takes the format like {0,1,2..) so
pass
=0,
fail
=1,
atkt
=2
stud1 = pass
(value is 0)
stud2 = atkt
(value is 2)
stud3 = fail
(value is 1)
Hence it prints 0, 2, 1",Declarations and Initializations,C Programming,1.9
313,"What will be the output of the program in 16 bit platform (Turbo C under DOS)?
#include<stdio.h>
int main()
{
    extern int i;
    i = 20;
    printf(""%d\n"", sizeof(i));
    return 0;
}",2,4,vary from compiler,Linker Error : Undefined symbol 'i',Linker Error : Undefined symbol 'i',"Linker Error : Undefined symbol
'i'
The statement
extern int i
specifies to the compiler that the memory for
'i'
is allocated in some other program and that address will be given to the current program at the time of linking. But linker finds that no other variable of name
'i'
is available in any other program with memory space allocated for it. Hence a linker error has occurred.",Declarations and Initializations,C Programming,1.7
314,"What is the output of the program?
#include<stdio.h>
int main()
{
    extern int a;
    printf(""%d\n"", a);
    return 0;
}
int a=20;",20,0,Garbage Value,Error,20,"extern int a;
indicates that the variable
a
is defined elsewhere, usually in a separate source code module.
printf(""%d\n"", a);
it prints the value of local variable
int a = 20
. Because, whenever there is a conflict between local variable and global variable, local variable gets the highest priority. So it prints 20.",Declarations and Initializations,C Programming,2.1
315,"What is the output of the program in Turbo C (in DOS 16-bit OS)?
#include<stdio.h>
int main()
{
    char *s1;
    char far *s2;
    char huge *s3;
    printf(""%d, %d, %d\n"", sizeof(s1), sizeof(s2), sizeof(s3));
    return 0;
}","2, 4, 6","4, 4, 2","2, 4, 4","2, 2, 2","2, 4, 4","Any pointer size is 2 bytes. (only 16-bit offset)
So,
char *s1
= 2 bytes.
So,
char far *s2;
= 4 bytes.
So,
char huge *s3;
= 4 bytes.
A far, huge pointer has two parts: a 16-bit segment value and a 16-bit offset value.
Since C is a compiler dependent language, it may give different output in other platforms. The above program works fine in Windows (TurboC), but error in Linux (GCC Compiler).",Declarations and Initializations,C Programming,2
316,"What is the output of the program
#include<stdio.h>
int main()
{
    struct emp
    {
        char name[20];
        int age;
        float sal;
    };
    struct emp e = {""Tiger""};
    printf(""%d, %f\n"", e.age, e.sal);
    return 0;
}","0, 0.000000",Garbage values,Error,None of above,"0, 0.000000",When an automatic structure is partially initialized remaining elements are initialized to 0(zero).,Declarations and Initializations,C Programming,1.9
317,"What will be the output of the program?
#include<stdio.h>
int X=40;
int main()
{
    int X=20;
    printf(""%d\n"", X);
    return 0;
}",20,40,Error,No Output,20,"Whenever there is conflict between a local variable and global variable, the local variable gets priority.",Declarations and Initializations,C Programming,2.2
318,"What is the output of the program
#include<stdio.h>
int main()
{
    int x = 10, y = 20, z = 5, i;
    i = x < y < z;
    printf(""%d\n"", i);
    return 0;
}",0,1,Error,None of these,1,"Since
x < y
turns to be TRUE it is replaced by 1. Then
1 < z
is compared and to be
TRUE
. The 1 is assigned to
i
.",Declarations and Initializations,C Programming,2
319,"What is the output of the program
#include<stdio.h>
int main()
{
    extern int fun(float);
    int a;
    a = fun(3.14);
    printf(""%d\n"", a);
    return 0;
}
int fun(int aa)
{
 return (int)++aa;
}",3,3.14,0,4,Compile Error,Compile Error,Declarations and Initializations,C Programming,2
320,"What is the output of the program
#include<stdio.h>
int main()
{
    int a[5] = {2, 3};
    printf(""%d, %d, %d\n"", a[2], a[3], a[4]);
    return 0;
}",Garbage Values,"2, 3, 3","3, 2, 2","0, 0, 0","0, 0, 0","When an automatic array is partially initialized, the remaining elements are initialized to 0.",Declarations and Initializations,C Programming,1.1
321,"What is the output of the program?
#include<stdio.h>
int main()
{
    union a
    {
        int i;
        char ch[2];
    };
    union a u;
    u.ch[0] = 3;
    u.ch[1] = 2;
    printf(""%d, %d, %d\n"", u.ch[0], u.ch[1], u.i);
    return 0;
}","3, 2, 515","515, 2, 3","3, 2, 5",None of these,"3, 2, 515","printf(""%d, %d, %d\n"", u.ch[0], u.ch[1], u.i);
It prints the value of
u.ch[0] = 3, u.ch[1] = 2
and it prints the value of
u.i
means the value of entire union size.
So the output is 3, 2, 515.",Declarations and Initializations,C Programming,1.2
322,"In the following program how long will the for loop get executed?
#include<stdio.h>
int main()
{
    int i=5;
    for(;scanf(""%s"", &i); printf(""%d\n"", i));
    return 0;
}",The for loop would not get executed at all,The for loop would get executed only once,The for loop would get executed 5 times,The for loop would get executed infinite times,The for loop would get executed infinite times,"During the
for
loop execution
scanf()
ask input and then
printf()
prints that given input. This process will be continued repeatedly because,
scanf()
returns the number of input given, the condition is always true(user gives a input means it reurns '1').
Hence this
for
loop would get executed infinite times.",Declarations and Initializations,C Programming,2.4
323,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int X=40;
    {
        int X=20;
        printf(""%d "", X);
    }
    printf(""%d\n"", X);
    return 0;
}",40 40,20 40,20,Error,20 40,"In case of a conflict between a local variable and global variable, the local variable gets priority.",Declarations and Initializations,C Programming,2
324,"Point out the error in the following program (if it is compiled with Turbo C compiler).
#include<stdio.h>
int main()
{
    display();
    return 0;
}
void display()
{
    printf(""IndiaBIX.com"");
}",No error,display() doesn't get invoked,display() is called before it is defined,None of these,display() is called before it is defined,"In this program the compiler will not know that the function
display()
exists. So, the compiler will generate ""Type mismatch in redeclaration of function
display()
"".
To over come this error, we have to add function prototype of function
display()
.
Another way to overcome this error is to define the function
display()
before the
int main();
function.
#
include
<stdio.h>
void
display
(
)
;
/* function prototype */
int
main
(
)
{
display
(
)
;
return
0
;
}
void
display
(
)
{
printf
(
""IndiaBIX.com""
)
;
}
Output
: IndiaBIX.com
Note: This problem will not occur in modern compilers (this problem occurs in TurboC but not in GCC).",Declarations and Initializations,C Programming,2.4
325,"Point out the error in the following program.
#include<stdio.h>
int main()
{
    void v = 0;

    printf(""%d"", v);

    return 0;
}",Error: Declaration syntax error 'v' (or) Size of v is unknown or zero.,Program terminates abnormally.,No error.,None of these.,Error: Declaration syntax error 'v' (or) Size of v is unknown or zero.,"No answer description is available.
Let's discuss.",Declarations and Initializations,C Programming,2.8
326,"Point out the error in the following program.
#include<stdio.h>
struct emp
{
    char name[20];
    int age;
};
int main()
{
    emp int xx;
    int a;
    printf(""%d\n"", &a);
    return 0;
}",Error: in printf,Error: in emp int xx;,No error.,None of these.,Error: in emp int xx;,"There is an error in the line
emp int xx;
To overcome this error, remove the
int
and add the
struct
at the begining of
emp int xx;
#
include
<stdio.h>
struct
emp
{
char
name
[
20
]
;
int
age
;
}
;
int
main
(
)
{
struct
emp
xx
;
int
a
;
printf
(
""%d\n""
,
&
a
)
;
return
0
;
}",Declarations and Initializations,C Programming,2.2
327,"Which of the following is correct about err used in the declaration given below?
 typedef enum error { warning, test, exception } err;",It is a typedef for enum error.,It is a variable of type enum error.,The statement is erroneous.,It is a structure.,It is a typedef for enum error.,"A
typedef
gives a new name to an existing data type.
So
err
is a new name for
enum error
.",Declarations and Initializations,C Programming,-1.8
328,"Point out the error in the following program.
#include<stdio.h>
int main()
{
    int (*p)() = fun;
    (*p)();
    return 0;
}
int fun()
{
    printf(""IndiaBix.com\n"");
    return 0;
}",Error: in int(*p)() = fun;,Error: fun() prototype not defined,No error,None of these,Error: fun() prototype not defined,"The compiler will not know that the function
int fun()
exists. So we have to define the function prototype of
int fun();
To overcome this error, see the below program
#
include
<stdio.h>
int
fun
(
)
;
/* function prototype */
int
main
(
)
{
int
(
*
p
)
(
)
=
fun
;
(
*
p
)
(
)
;
return
0
;
}
int
fun
(
)
{
printf
(
""IndiaBix.com\n""
)
;
return
0
;
}",Declarations and Initializations,C Programming,2.9
329,Which of the declaration is correct?,int length;,char int;,int long;,float double;,int length;,"int length;
denotes that variable
length
is
int
(integer) data type.
char int;
here
int
is a keyword cannot be used a variable name.
int long;
here
long
is a keyword cannot be used a variable name.
float double;
here
double
is a keyword cannot be used a variable name.
So, the answer is
int length;
(Option A).",Declarations and Initializations,C Programming,2.2
330,Which of the following operations are INCORRECT?,int i = 35; i = i%5;,short int j = 255; j = j;,long int k = 365L; k = k;,float a = 3.14; a = a%3;,float a = 3.14; a = a%3;,"float a = 3.14; a = a%3;
gives ""Illegal use of floating point"" error.
The modulus (%) operator can only be used on integer types. We have to use
fmod()
function in math.h for float values.",Declarations and Initializations,C Programming,-1.1
331,Which of the following correctly represents a long double constant?,6.68,6.68L,6.68f,6.68LF,6.68L,"6.68
is
double
.
6.68L
is
long double
constant.
6.68f
is
float
constant.
6.68LF
is not allowed in c.",Declarations and Initializations,C Programming,-1.1
332,"Which of the structure is incorrcet?
1 :
struct aa
{
    int a;
    float b;
};
2 :
struct aa
{
    int a;
    float b;
    struct aa var;
};
3 :
struct aa
{
    int a;
    float b;
    struct aa *var;
};",1,2,3,"1, 2, 3",2,"Option B gives ""Undefined structure in 'aa'"" error.",Declarations and Initializations,C Programming,1.2
333,"Which of the structure is correct?
1 :
struct book
{
    char name[10];
    float price;
    int pages;
};
2 :
struct aa
{
    char name[10];
    float price;
    int pages;
}
3 :
struct aa
{
    char name[10];
    float price;
    int pages;
}",1,2,3,All of above,1,In 2 and 3 semicolon are missing in structure element.,Declarations and Initializations,C Programming,1.7
334,"1 : typedef long a;
extern int a c;
2 : typedef long a;
extern a int c;
3 : typedef long a;
extern a c;",1 correct,2 correct,3 correct,"1, 2, 3 are correct",3 correct,"typedef long a;
extern int a c;
while compiling this statement becomes
extern int long c;
. This will result in to ""Declaration syntax error"".
typedef long a;
extern a int c;
while compiling this statement becomes
extern long int c;
. This will result in to ""Too many types in declaration error"".
typedef long a;
extern a c;
while compiling this statement becomes
extern long c;
. This is a valid c declaration statement. It says variable
c
is
long
data type and defined in some other file or module.
So,
Option C
is the correct answer.",Declarations and Initializations,C Programming,2.6
335,A long double can be used if range of a double is not enough to accommodate a real number.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, we can use
long double
; if
double
range is not enough.
double
= 8 bytes.
long double
= 10 bytes.",Declarations and Initializations,C Programming,2.9
336,"A float is 4 bytes wide, whereas a double is 8 bytes wide.",TRUE,FALSE,Not Available,Not Available,TRUE,"True,
float
= 4 bytes.
double
= 8 bytes.",Declarations and Initializations,C Programming,1.4
337,"If the definition of the external variable occurs in the source file before its use in a particular function, then there is no need for an extern declaration in the function.",TRUE,FALSE,Not Available,Not Available,TRUE,"True, When a function is declared inside the source file, that function(local function) get a priority than the
extern
function. So there is no need to declare a function as
extern
inside the same source file.",Declarations and Initializations,C Programming,-2.6
338,Size of short integer and long integer can be verified using the sizeof() operator.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, we can find the size of
short integer
and
long integer
using the
sizeof()
operator.
Example
:
#
include
<stdio.h>
int
main
(
)
{
short
int
i
=
10
;
long
int
j
=
10
;
printf
(
""short int is %d bytes.,\nlong int is %d bytes.""
,
sizeof
(
i
)
,
sizeof
(
j
)
)
;
return
0
;
}
Output
:
short int is 2 bytes.
long int is 4 bytes.",Declarations and Initializations,C Programming,1.5
339,Range of double is -1.7e-38 to 1.7e+38 (in 16 bit platform - Turbo C under DOS),TRUE,FALSE,Not Available,Not Available,FALSE,"False, The range of
double
is -1.7e+308 to 1.7e+308.",Declarations and Initializations,C Programming,2.5
340,Size of short integer and long integer would vary from one platform to another.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, Depending on the operating system/compiler/system architecture you are working on, the range of data types can vary.",Declarations and Initializations,C Programming,1.9
341,Range of float id -2.25e+308 to 2.25e+308,TRUE,FALSE,Not Available,Not Available,FALSE,"False, The range of
float
is -3.4e+38 to 3.4e+38.",Declarations and Initializations,C Programming,1.8
342,"Is there any difference in the following declarations?
int myfun(int arr[]);
int myfun(arr[20]);",Yes,No,Not Available,Not Available,Yes,"Yes, we have to specify the data type of the parameter when declaring a function.",Declarations and Initializations,C Programming,2.3
343,"Suppose a program is divided into three files f1, f2 and f3, and a variable is defined in the file f1 but used in files f2 and f3. In such a case would we need the extern declaration for the variables in the files f2 and f3?",Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Declarations and Initializations,C Programming,2.4
344,Global variable are available to all functions. Does there exist a mechanism by way of which it available to some and not to others.,Yes,No,Not Available,Not Available,No,"The only way this can be achieved is to define the variable locally in
main()
instead of defining it globally and then passing it to the functions which need it.",Declarations and Initializations,C Programming,1.5
345,"Is it true that a global variable may have several declarations, but only one definition?",Yes,No,Not Available,Not Available,Yes,"Yes, In all the global variable declarations, you need to use the keyword
extern
.",Declarations and Initializations,C Programming,1
346,"Is it true that a function may have several declarations, but only one definition?",Yes,No,Not Available,Not Available,Yes,"Yes, but the function declarations must be identical.
Example:
#
include
<stdio.h>
void
Display
(
)
;
void
Display
(
)
;
void
Display
(
)
;
void
Display
(
)
{
printf
(
""Weclome to IndiaBIX.com..!""
)
;
}
int
main
(
)
{
Display
(
)
;
return
0
;
}
//Output:
Weclome to IndiaBIX
.
com
.
.
!",Declarations and Initializations,C Programming,1.9
347,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=-3, j=2, k=0, m;
    m = ++i && ++j && ++k;
    printf(""%d, %d, %d, %d\n"", i, j, k, m);
    return 0;
}","-2, 3, 1, 1","2, 3, 1, 2","1, 2, 3, 1","3, 3, 1, 2","-2, 3, 1, 1","Step 1
:
int i=-3, j=2, k=0, m;
here variable
i, j, k, m
are declared as an integer type and variable
i, j, k
are initialized to -3, 2, 0 respectively.
Step 2
:
m = ++i && ++j && ++k;
becomes
m = -2 && 3 && 1;
becomes
m = TRUE && TRUE;
Hence this statement becomes TRUE. So it returns '1'(one). Hence m=1.
Step 3
:
printf(""%d, %d, %d, %d\n"", i, j, k, m);
In the previous step the value of i,j,k are increemented by '1'(one).
Hence the output is ""-2, 3, 1, 1"".",Expressions,C Programming,1.4
348,"Assuming, integer is 2 byte, What will be the output of the program?
#include<stdio.h>

int main()
{
    printf(""%x\n"", -2<<2);
    return 0;
}",ffff,0,fff8,Error,fff8,"The integer value 2 is represented as 00000000 00000010 in binary system.
Negative numbers are represented in 2's complement method.
1's complement of 00000000 00000010 is 11111111 11111101 (Change all 0s to 1 and 1s to 0).
2's complement of 00000000 00000010 is 11111111 11111110 (Add 1 to 1's complement to obtain the 2's complement value).
Therefore, in binary we represent -2 as: 11111111 11111110.
After left shifting it by 2 bits we obtain: 11111111 11111000, and it is equal to ""fff8"" in hexadecimal system.",Expressions,C Programming,1.4
349,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=-3, j=2, k=0, m;
    m = ++i || ++j && ++k;
    printf(""%d, %d, %d, %d\n"", i, j, k, m);
    return 0;
}","2, 2, 0, 1","1, 2, 1, 0","-2, 2, 0, 0","-2, 2, 0, 1","-2, 2, 0, 1","Step 1
:
int i=-3, j=2, k=0, m;
here variable
i, j, k, m
are declared as an integer type and variable
i, j, k
are initialized to -3, 2, 0 respectively.
Step 2
:
m = ++i || ++j && ++k;
here (++j && ++k;) this code will not get executed because ++i has non-zero value.
becomes
m = -2 || ++j && ++k;
becomes
m = TRUE || ++j && ++k;
Hence this statement becomes TRUE. So it returns '1'(one). Hence m=1.
Step 3
:
printf(""%d, %d, %d, %d\n"", i, j, k, m);
In the previous step the value of variable
'i'
only increemented by '1'(one). The variable
j,k
are not increemented.
Hence the output is ""-2, 2, 0, 1"".",Expressions,C Programming,2.9
350,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x=12, y=7, z;
    z = x!=4 || y == 2;
    printf(""z=%d\n"", z);
    return 0;
}",z=0,z=1,z=4,z=2,z=1,"Step 1
:
int x=12, y=7, z;
here variable
x, y
and
z
are declared as an integer and variable
x
and
y
are initialized to 12, 7 respectively.
Step 2
:
z = x!=4 || y == 2;
becomes
z = 12!=4 || 7 == 2;
then
z = (condition true) || (condition false);
Hence it returns 1. So the value of
z=1
.
Step 3
:
printf(""z=%d\n"", z);
Hence the output of the program is ""z=1"".",Expressions,C Programming,1.8
351,"What will be the output of the program?
#include<stdio.h>
int main()
{
    static int a[20];
    int i = 0;
    a[i] = i  ;
    printf(""%d, %d, %d\n"", a[0], a[1], i);
    return 0;
}","1, 0, 1","1, 1, 1","0, 0, 0","0, 1, 0","0, 0, 0","Step 1
:
static int a[20];
here variable
a
is declared as an integer type and
static
. If a variable is declared as
static
and it will be automatically initialized to value '0'(zero).
Step 2
:
int i = 0;
here vaiable
i
is declared as an integer type and initialized to '0'(zero).
Step 3
:
a[i] = i ;
becomes
a[0] = 0;
Step 4
:
printf(""%d, %d, %d\n"", a[0], a[1], i);
Here a[0] = 0, a[1] = 0(because all staic variables are initialized to '0') and i = 0.
Step 4
: Hence the output is ""0, 0, 0"".",Expressions,C Programming,1.6
352,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=4, j=-1, k=0, w, x, y, z;
    w = i || j || k;
    x = i && j && k;
    y = i || j &&k;
    z = i && j || k;
    printf(""%d, %d, %d, %d\n"", w, x, y, z);
    return 0;
}","1, 1, 1, 1","1, 1, 0, 1","1, 0, 0, 1","1, 0, 1, 1","1, 0, 1, 1","Step 1
:
int i=4, j=-1, k=0, w, x, y, z;
here variable
i, j, k, w, x, y, z
are declared as an integer type and the variable
i, j, k
are initialized to 4, -1, 0 respectively.
Step 2
:
w = i || j || k;
becomes
w = 4 || -1 || 0;
.  Hence it returns TRUE. So, w=1
Step 3
:
x = i && j && k;
becomes
x = 4 && -1 && 0;
Hence it returns FALSE. So, x=0
Step 4
:
y = i || j &&k;
becomes
y = 4 || -1 && 0;
Hence it returns TRUE. So, y=1
Step 5
:
z = i && j || k;
becomes
z = 4 && -1 || 0;
Hence it returns TRUE. So, z=1.
Step 6
:
printf(""%d, %d, %d, %d\n"", w, x, y, z);
Hence the output is ""1, 0, 1, 1"".",Expressions,C Programming,2.1
353,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=-3, j=2, k=0, m;
    m = ++i && ++j || ++k;
    printf(""%d, %d, %d, %d\n"", i, j, k, m);
    return 0;
}","1, 2, 0, 1","-3, 2, 0, 1","-2, 3, 0, 1","2, 3, 1, 1","-2, 3, 0, 1","Step 1
:
int i=-3, j=2, k=0, m;
here variable
i, j, k, m
are declared as an integer type and variable
i, j, k
are initialized to -3, 2, 0 respectively.
Step 2
:
m = ++i && ++j || ++k;
becomes
m = (-2 && 3) || ++k;
becomes
m = TRUE || ++k;
.
(++k) is not executed because (-2 && 3) alone return TRUE.
Hence this statement becomes TRUE. So it returns '1'(one). Hence m=1.
Step 3
:
printf(""%d, %d, %d, %d\n"", i, j, k, m);
In the previous step the value of i,j are increemented by '1'(one).
Hence the output is ""-2, 3, 0, 1"".",Expressions,C Programming,1.5
354,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x=4, y, z;
    y = --x;
    z = x--;
    printf(""%d, %d, %d\n"", x, y, z);
    return 0;
}","4, 3, 3","4, 3, 2","3, 3, 2","2, 3, 3","2, 3, 3","Step 1
:
int x=4, y, z;
here variable
x
,
y
,
z
are declared as an integer type and variable x is initialized to 4.
Step 2
:
y = --x;
becomes
y = 3;
because (--x) is pre-decrement operator.
Step 3
:
z = x--;
becomes
z = 3;
. In the next step variable
x
becomes 2, because (x--) is post-decrement operator.
Step 4
:
printf(""%d, %d, %d\n"", x, y, z);
Hence it prints ""2, 3, 3"".",Expressions,C Programming,2.1
355,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=3;
    i = i++;
    printf(""%d\n"", i);
    return 0;
}",3,4,5,6,4,"No answer description is available.
Let's discuss.",Expressions,C Programming,1.4
356,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int a=100, b=200, c;
    c = (a == 100 || b > 200);
    printf(""c=%d\n"", c);
    return 0;
}",c=100,c=200,c=1,c=300,c=1,"Step 1
:
int a=100, b=200, c;
Step 2
:
c = (a == 100 || b > 200);
becomes
c = (100 == 100 || 200 > 200);
becomes
c = (TRUE || FALSE);
becomes
c = (TRUE);
(ie. c = 1)
Step 3
:
printf(""c=%d\n"", c);
It prints the value of variable
i=1
Hence the output of the program is '1'(one).",Expressions,C Programming,1.2
357,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x=55;
    printf(""%d, %d, %d\n"", x<=55, x=40, x>=10);
    return 0;
}","1, 40, 1","1, 55, 1","1, 55, 0","1, 1, 1","1, 40, 1","Step 1
:
int x=55;
here variable
x
is declared as an integer type and initialized to '55'.
Step 2
:
printf(""%d, %d, %d\n"", x<=55, x=40, x>=10);
In printf the execution of expressions is from Right to Left.
here
x>=10
returns TRUE hence it prints '1'.
x=40
here
x
is assigned to 40 Hence it prints '40'.
x<=55
returns TRUE. hence it prints '1'.
Step 3:
Hence the output is ""1, 40, 1"".",Expressions,C Programming,1.2
358,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=2;
    printf(""%d, %d\n"", ++i, ++i);
    return 0;
}","3, 4","4, 3","4, 4",Output may vary from compiler to compiler,Output may vary from compiler to compiler,"The order of evaluation of arguments passed to a function call is unspecified.
Anyhow, we consider
++i, ++i
are Right-to-Left associativity. The output of the program is 4, 3.
In TurboC, the output will be 4, 3.
In GCC, the output will be 4, 4.",Expressions,C Programming,1.1
359,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int k, num=30;
    k = (num>5 ? (num <=10 ? 100 : 200): 500);
    printf(""%d\n"", num);
    return 0;
}",200,30,100,500,30,"Step 1
:
int k, num=30;
here variable
k
and
num
are declared as an integer type and variable
num
is initialized to '30'.
Step 2
:
k = (num>5 ? (num <=10 ? 100 : 200): 500);
This statement does not affect the output of the program. Because we are going to print the variable
num
in the next statement. So, we skip this statement.
Step 3
:
printf(""%d\n"", num);
It prints the value of variable
num
'30'
Step 3
: Hence the output of the program is '30'",Expressions,C Programming,3
360,"What will be the output of the program?
#include<stdio.h>
int main()
{
    char ch;
    ch = 'A';
    printf(""The letter is"");
    printf(""%c"", ch >= 'A' && ch <= 'Z' ? ch + 'a' - 'A':ch);
    printf(""Now the letter is"");
    printf(""%c\n"", ch >= 'A' && ch <= 'Z' ? ch : ch + 'a' - 'A');
    return 0;
}","The letter is a
Now the letter is A","The letter is A
Now the letter is a",Error,None of above,"The letter is a
Now the letter is A","Step 1
:
char ch; ch = 'A';
here variable
ch
is declared as an character type an initialized to 'A'.
Step 2
:
printf(""The letter is"");
It prints ""The letter is"".
Step 3
:
printf(""%c"", ch >= 'A' && ch <= 'Z' ? ch + 'a' - 'A':ch);
The ASCII value of 'A' is 65 and 'a' is 97.
Here
=> ('A' >= 'A' && 'A' <= 'Z') ? (A + 'a' - 'A'):('A')
=> (TRUE && TRUE) ? (65 + 97 - 65) : ('A')
=> (TRUE) ? (97): ('A')
In printf the format specifier is '%c'. Hence prints 97 as 'a'.
Step 4
:
printf(""Now the letter is"");
It prints ""Now the letter is"".
Step 5
:
printf(""%c\n"", ch >= 'A' && ch <= 'Z' ? ch : ch + 'a' - 'A');
Here => ('A' >= 'A' && 'A' <= 'Z') ? ('A') : (A + 'a' - 'A')
=> (TRUE && TRUE) ? ('A') :(65 + 97 - 65)
=> (TRUE) ? ('A') : (97)
It prints 'A'
Hence the output is
The letter is a
Now the letter is A",Expressions,C Programming,2
361,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=2;
    int j = i + (1, 2, 3, 4, 5);
    printf(""%d\n"", j);
    return 0;
}",4,7,6,5,7,"Because, comma operator used in the expression
i (1, 2, 3, 4, 5)
. The comma operator has left-right associativity. The left operand is always evaluated first, and the result of evaluation is discarded before the right operand is evaluated. In this expression 5 is the right most operand, hence after evaluating expression (1, 2, 3, 4, 5) the result is 5, which on adding to i results into 7.",Expressions,C Programming,1.2
362,Associativity has no role to play unless the precedence of operator is same.,TRUE,FALSE,Not Available,Not Available,TRUE,"Associativity is only needed when the operators in an expression have the same precedence. Usually
+
and
-
have the same precedence.
Consider the expression
7 - 4 + 2
. The result could be either
(7 - 4) + 2 = 5
or
7 - (4 + 2) = 1
. The former result corresponds to the case when
+
and
-
are left-associative, the latter to when
+
and
-
are right-associative.
Usually the addition, subtraction, multiplication, and division operators are left-associative, while the exponentiation, assignment and conditional operators are right-associative. To prevent cases where operands would be associated with two operators, or no operator at all, operators with the same precedence must have the same associativity.",Expressions,C Programming,2.4
363,The expression of the right hand side of || operators doesn't get evaluated if the left hand side determines the outcome.,TRUE,FALSE,Not Available,Not Available,TRUE,"Because, if a is non-zero then b will not be evaluated in the expression
(a || b)",Expressions,C Programming,-0.3
364,In the expression a=b=5 the order of Assignment is NOT decided by Associativity of operators,TRUE,FALSE,Not Available,Not Available,FALSE,"The equal to
=
operator has Right-to-Left Associativity. So it assigns
b=5
then
a=b
.",Expressions,C Programming,2.5
365,Associativity of an operator is either Left to Right or Right to Left.,TRUE,FALSE,Not Available,Not Available,TRUE,"Yes, the associativity of an operator is either Left to Right or Right to Left.",Expressions,C Programming,1.4
366,"Are the following two statement same?
1. a <= 20 ? (b = 30): (c = 30);
2. (a <=20) ? b : (c = 30);",Yes,No,Not Available,Not Available,No,"No, the expressions 1 and 2 are not same.
1.
a <= 20 ? (b = 30) : (c = 30);
This statement can be rewritten as,
if
(
a
<=
20
)
{
b
=
30
;
}
else
{
c
=
30
;
}
2.
(a <=20) ? b : (c = 30);
This statement can be rewritten as,
if
(
a
<=
20
)
{
//Nothing here
}
else
{
c
=
30
;
}",Expressions,C Programming,1.4
367,Two different operators would always have different Associativity.,Yes,No,Not Available,Not Available,No,"No, Two different operators may have same associativity.
Example
:
Arithmetic operators like
++
,
--
having Right-to-Left associativity.
Relational operators like
>
,
>=
also have Left-to-Right associativity.",Expressions,C Programming,2.5
368,Will the expression *p = p be disallowed by the compiler?,Yes,No,Not Available,Not Available,No,"Because, here even though the value of p is accessed twice it is used to modify two different objects p and *p",Expressions,C Programming,2.3
369,Every operator has an Associativity,Yes,No,Not Available,Not Available,Yes,"Yes, Each and every operator has an associativity.
The associativity (or fixity) of an operator is a property that determines how operators of the same precedence are grouped in the absence of parentheses. Operators may be left-associative, right-associative or non-associative.",Expressions,C Programming,1.2
370,"Which of the following is the correct order of evaluation for the below expression?
z = x + y * z / 4 % 2 - 1",* / % + - =,= * / % + -,/ * % - + =,* % / - + =,* / % + - =,C uses left associativity for evaluating expressions to break a tie between two operators having same precedence.,Expressions,C Programming,-1.3
371,Which of the following correctly shows the hierarchy of arithmetic operations in C?,/ + * -,* - / +,+ - / *,/ * + -,/ * + -,"Simply called as BODMAS (Bracket of Division, Multiplication, Addition and Subtraction).
How Do I Remember ? BODMAS !
B
- Brackets first
O
- Orders (ie Powers and Square Roots, etc.)
DM
- Division and Multiplication (left-to-right)
AS
- Addition and Subtraction (left-to-right)",Expressions,C Programming,-2
372,Which of the following is the correct usage of conditional operators used in C?,a>b ? c=30 : c=40;,a>b ? c=30;,max = a>b ? a>c?a:c:b>c?b:c,return (a>b)?(a:b),max = a>b ? a>c?a:c:b>c?b:c,"Option A: assignment statements are always return in paranthesis in the case of conditional operator. It should be a>b? (c=30):(c=40);
Option B: it is syntatically wrong.
Option D: syntatically wrong, it should be return(a>b ? a:b);
Option C: it uses nested conditional operator, this is logic for finding greatest number out of three numbers.",Expressions,C Programming,-1.4
373,"Which of the following is the correct order if calling functions in the below code?
a = f1(23, 14) * f2(12/4) + f3();","f1, f2, f3","f3, f2, f1",Order may vary from compiler to compiler,None of above,Order may vary from compiler to compiler,"Here, Multiplication will happen before the addition, but in which order the functions would be called is undefined. In an arithmetic expression the parenthesis tell the compiler which operands go with which operators but do not force the compiler to evaluate everything within the parenthesis first.",Expressions,C Programming,-2.6
374,"Which of the following are unary operators in C?
1. !
2. sizeof
3. ~
4. &&","1, 2","1, 3","2, 4","1, 2, 3","1, 2, 3","An operation with only one operand is called unary operation.
Unary operators
:
!
Logical NOT operator.
~
bitwise NOT operator.
sizeof
Size-of operator.
&&
Logical AND is a logical operator.
Therefore, 1, 2, 3 are unary operators.",Expressions,C Programming,-1.6
375,"In which order do the following gets evaluated
1. Relational
2. Arithmetic
3. Logical
4. Assignment",2134,1234,4321,3214,2134,"2. Arithmetic operators:
*, /, %, +, -
1. Relational operators:
>, <, >=, <=, ==, !=
3. Logical operators   :
!, &&, ||
4. Assignment operators:
=",Expressions,C Programming,-1
376,The keyword used to transfer control from a function back to the calling function is,switch,goto,go back,return,return,"The keyword
return
is used to transfer control from a function back to the calling function.
Example
:
#
include
<stdio.h>
int
add
(
int
,
int
)
;
/* Function prototype */
int
main
(
)
{
int
a
=
4
,
b
=
3
,
c
;
c
=
add
(
a
,
b
)
;
printf
(
""c = %d\n""
,
c
)
;
return
0
;
}
int
add
(
int
a
,
int
b
)
{
/* returns the value and control back to main() function */
return
(
a
+
b
)
;
}
Output
:
c = 7",Functions,C Programming,2.6
377,"What will be the output of the program in 16 bit platform (Turbo C under DOS)?
#include<stdio.h>

int main()
{
    int fun();
    int i;
    i = fun();
    printf(""%d\n"", i);
    return 0;
}
int fun()
{
    _AX = 1990;
}",Garbage value,0 (Zero),1990,No output,1990,"Turbo C (Windows): The return value of the function is taken from the Accumulator
_AX=1990
.
But it may not work as expected in GCC compiler (Linux).",Functions,C Programming,3
378,"What will be the output of the program?
#include<stdio.h>
void fun(int*, int*);
int main()
{
    int i=5, j=2;
    fun(&i, &j);
    printf(""%d, %d"", i, j);
    return 0;
}
void fun(int *i, int *j)
{
    *i = *i**i;
    *j = *j**j;
}","5, 2","10, 4","2, 5","25, 4","25, 4","Step 1
:
int i=5, j=2;
Here variable
i
and
j
are declared as an integer type and initialized to 5 and 2 respectively.
Step 2
:
fun(&i, &j);
Here the function
fun()
is called with two parameters
&i
and
&j
(The & denotes
call by reference
. So the address of the variable
i
and
j
are passed. )
Step 3
:
void fun(int *i, int *j)
This function is called by reference, so we have to use
*
before the parameters.
Step 4
:
*i = *i**i;
Here
*i
denotes the value of the variable
i
. We are multiplying
5*5
and storing the result
25
in same variable
i
.
Step 5
:
*j = *j**j;
Here
*j
denotes the value of the variable
j
. We are multiplying
2*2
and storing the result
4
in same variable
j
.
Step 6
: Then the function
void fun(int *i, int *j)
return back the control back to
main()
function.
Step 7
:
printf(""%d, %d"", i, j);
It prints the value of variable
i
and
j
.
Hence the output is 25, 4.",Functions,C Programming,1.1
379,"What will be the output of the program?
#include<stdio.h>
int i;
int fun();

int main()
{
    while(i)
    {
        fun();
        main();
    }
    printf(""Hello\n"");
    return 0;
}
int fun()
{
    printf(""Hi"");
}",Hello,Hi Hello,No output,Infinite loop,Hello,"Step 1:
int i;
The variable
i
is declared as an integer type.
Step 1:
int fun();
This prototype tells the compiler that the function
fun()
does not accept any arguments and it returns an integer value.
Step 1:
while(i)
The value of
i
is not initialized so this while condition is failed. So, it does not execute the
while
block.
Step 1:
printf(""Hello\n"");
It prints ""Hello"".
Hence the output of the program is ""Hello"".",Functions,C Programming,1.6
380,"What will be the output of the program?
#include<stdio.h>
int reverse(int);

int main()
{
    int no=5;
    reverse(no);
    return 0;
}
int reverse(int no)
{
    if(no == 0)
        return 0;
    else
        printf(""%d,"", no);
    reverse (no--);
}","Print 5, 4, 3, 2, 1","Print 1, 2, 3, 4, 5","Print 5, 4, 3, 2, 1, 0",Infinite loop,Infinite loop,"Step 1
:
int no=5;
The variable
no
is declared as integer type and initialized to 5.
Step 2
:
reverse(no);
becomes
reverse(5);
It calls the function
reverse()
with '5' as parameter.
The function reverse accept an integer number 5 and it returns '0'(zero) if(5 == 0) if the given number is '0'(zero) or else
printf(""%d,"", no);
it prints that number 5  and calls the function
reverse(5);
.
The function runs infinetely because the there is a post-decrement operator is used. It will not decrease the value of 'n' before calling the reverse() function.  So, it calls
reverse(5)
infinitely.
Note: If we use pre-decrement operator like
reverse(--n)
, then the output will be 5, 4, 3, 2, 1. Because before calling the function, it decrements the value of 'n'.",Functions,C Programming,2.1
381,"What will be the output of the program?
#include<stdio.h>
void fun(int);
typedef int (*pf) (int, int);
int proc(pf, int, int);

int main()
{
    int a=3;
    fun(a);
    return 0;
}
void fun(int n)
{
    if(n > 0)
    {
        fun(--n);
        printf(""%d,"", n);
        fun(--n);
    }
}","0, 2, 1, 0,","1, 1, 2, 0,","0, 1, 0, 2,","0, 1, 2, 0,","0, 1, 2, 0,","No answer description is available.
Let's discuss.",Functions,C Programming,1.1
382,"What will be the output of the program?
#include<stdio.h>
int sumdig(int);
int main()
{
    int a, b;
    a = sumdig(123);
    b = sumdig(123);
    printf(""%d, %d\n"", a, b);
    return 0;
}
int sumdig(int n)
{
    int s, d;
    if(n!=0)
    {
        d = n%10;
        n = n/10;
        s = d+sumdig(n);
    }
    else
        return 0;
    return s;
}","4, 4","3, 3","6, 6","12, 12","6, 6","No answer description is available.
Let's discuss.",Functions,C Programming,2.5
383,"What will be the output of the program?
#include<stdio.h>

int main()
{
    void fun(char*);
    char a[100];
    a[0] = 'A'; a[1] = 'B';
    a[2] = 'C'; a[3] = 'D';
    fun(&a[0]);
    return 0;
}
void fun(char *a)
{
    a++;
    printf(""%c"", *a);
    a++;
    printf(""%c"", *a);
}",AB,BC,CD,No output,BC,"No answer description is available.
Let's discuss.",Functions,C Programming,2.8
384,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int fun(int);
    int i = fun(10);
    printf(""%d\n"", --i);
    return 0;
}
int fun(int i)
{
   return (i++);
}",9,10,11,8,9,"Step 1
:
int fun(int);
Here we declare the prototype of the function
fun()
.
Step 2
:
int i = fun(10);
The variable
i
is declared as an integer type and the result of the
fun(10)
will be stored in the variable
i
.
Step 3
:
int fun(int i){ return (i++); }
Inside the
fun()
we are returning a value return(i++). It returns 10. because
i++
is the post-increement operator.
Step 4
: Then the control back to the
main
function and the value 10 is assigned to variable
i
.
Step 5
:
printf(""%d\n"", --i);
Here
--i
denoted pre-increement. Hence it prints the value 9.",Functions,C Programming,2.8
385,"What will be the output of the program?
#include<stdio.h>
int check (int, int);

int main()
{
    int c;
    c = check(10, 20);
    printf(""c=%d\n"", c);
    return 0;
}
int check(int i, int j)
{
    int *p, *q;
    p=&i;
    q=&j;
    i>=45 ? return(*p): return(*q);
}",Print 10,Print 20,Print 1,Compile error,Compile error,"There is an error in this line
i>=45 ? return(*p): return(*q);
. We cannot use
return
keyword in the terenary operators.",Functions,C Programming,2.9
386,"What will be the output of the program?
#include<stdio.h>
int fun(int, int);
typedef int (*pf) (int, int);
int proc(pf, int, int);

int main()
{
    printf(""%d\n"", proc(fun, 6, 6));
    return 0;
}
int fun(int a, int b)
{
   return (a==b);
}
int proc(pf p, int a, int b)
{
   return ((*p)(a, b));
}",6,1,0,-1,1,"No answer description is available.
Let's discuss.",Functions,C Programming,2.5
387,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int i=1;
    if(!i)
        printf(""IndiaBIX,"");
    else
    {
        i=0;
        printf(""C-Program"");
        main();
    }
    return 0;
}","prints ""IndiaBIX, C-Program"" infinitely","prints ""C-Program"" infinetly","prints ""C-Program, IndiaBIX"" infinitely",Error: main() should not inside else statement,"prints ""C-Program"" infinetly","Step 1
:
int i=1;
The variable
i
is declared as an integer type and initialized to 1(one).
Step 2
:
if(!i)
Here the
!
(NOT) operator reverts the
i
value 1 to 0. Hence the
if(0)
condition fails. So it goes to else part.
Step 3
:
else { i=0;
In the else part variable
i
is assigned to value 0(zero).
Step 4
:
printf(""C-Program"");
It prints the ""C-program"".
Step 5
:
main();
Here we are calling the
main()
function.
After calling the function, the program repeats from
step 1
to
step 5
infinitely.
Hence it prints ""C-Program"" infinitely.",Functions,C Programming,1.4
388,"What will be the output of the program?
#include<stdio.h>

int addmult(int ii, int jj)
{
    int kk, ll;
    kk = ii + jj;
    ll = ii * jj;
    return (kk, ll);
}

int main()
{
    int i=3, j=4, k, l;
    k = addmult(i, j);
    l = addmult(i, j);
    printf(""%d %d\n"", k, l);
    return 0;
}",12 12,"No error, No output",Error: Compile error,None of above,12 12,"No answer description is available.
Let's discuss.",Functions,C Programming,1.7
389,"What will be the output of the program?
#include<stdio.h>
int i;
int fun1(int);
int fun2(int);

int main()
{
    extern int j;
    int i=3;
    fun1(i);
    printf(""%d,"", i);
    fun2(i);
    printf(""%d"", i);
    return 0;
}
int fun1(int j)
{
    printf(""%d,"", ++j);
    return 0;
}
int fun2(int i)
{
    printf(""%d,"", ++i);
    return 0;
}
int j=1;","3, 4, 4, 3","4, 3, 4, 3","3, 3, 4, 4","3, 4, 3, 4","4, 3, 4, 3","Step 1
:
int i;
The variable i is  declared as an global and integer type.
Step 2
:
int fun1(int);
This prototype tells the compiler that the
fun1()
accepts the one integer parameter and returns the integer value.
Step 3
:
int fun2(int);
This prototype tells the compiler that the
fun2()
accepts the one integer parameter and returns the integer value.
Step 4
:
extern int j;
Inside the main function, the
extern
variable
j
is declared and defined in another source file.
Step 5
:
int i=3;
The local variable
i
is defines as an integer type and initialized to 3.
Step 6
:
fun1(i);
The
fun1(i)
increements the given value of variable
i
prints it. Here
fun1(i)
becomes
fun1(3)
hence it prints '4' then the control is given back to the
main
function.
Step 7
:
printf(""%d,"", i);
It prints the value of local variable
i
. So, it prints '3'.
Step 8
:
fun2(i);
The
fun2(i)
increements the given value of variable
i
prints it. Here
fun2(i)
becomes
fun2(3)
hence it prints '4' then the control is given back to the
main
function.
Step 9
:
printf(""%d,"", i);
It prints the value of local variable
i
. So, it prints '3'.
Hence the output is ""4 3 4 3"".",Functions,C Programming,1.7
390,"What will be the output of the program?
#include<stdio.h>
int func1(int);

int main()
{
    int k=35;
    k = func1(k=func1(k=func1(k)));
    printf(""k=%d\n"", k);
    return 0;
}
int func1(int k)
{
    k++;
    return k;
}",k=35,k=36,k=37,k=38,k=38,"Step 1
:
int k=35;
The variable
k is declared as an integer type and initialized to 35.
Step 2
:
k = func1(k=func1(k=func1(k)));
The
func1(k)
increement the value of
k
by 1 and return it. Here the
func1(k)
is called 3 times. Hence it increements value of
k
= 35 to 38. The result is stored in the variable
k
= 38.
Step 3
:
printf(""k=%d\n"", k);
It prints the value of variable
k
""38"".",Functions,C Programming,1.5
391,"What will be the output of the program?
#include<stdio.h>

int addmult(int ii, int jj)
{
    int kk, ll;
    kk = ii + jj;
    ll = ii * jj;
    return (kk, ll);
}

int main()
{
    int i=3, j=4, k, l;
    k = addmult(i, j);
    l = addmult(i, j);
    printf(""%d, %d\n"", k, l);
    return 0;
}","12, 12","7, 7","7, 12","12, 7","12, 12","Step 1
:
int i=3, j=4, k, l;
The variables
i, j, k, l
are declared as an integer type and variable
i
,
j
are initialized to 3, 4 respectively.
The function addmult(i, j); accept 2 integer parameters.
Step 2
:
k = addmult(i, j);
becomes
k = addmult(3, 4)
In the function
addmult()
. The variable
kk, ll
are declared as an integer type
int kk, ll;
kk = ii + jj;
becomes
kk = 3 + 4
Now the
kk
value is '7'.
ll = ii * jj;
becomes
ll = 3 * 4
Now the
ll
value is '12'.
return (kk, ll);
It returns the value of variable
ll
only.
The value 12 is stored in variable
'k'
.
Step 3
:
l = addmult(i, j);
becomes
l = addmult(3, 4)
kk = ii + jj;
becomes
kk = 3 + 4
Now the
kk
value is '7'.
ll = ii * jj;
becomes
ll = 3 * 4
Now the
ll
value is '12'.
return (kk, ll);
It returns the value of variable
ll
only.
The value 12 is stored in variable
'l'
.
Step 4
:
printf(""%d, %d\n"", k, l);
It prints the value of
k
and
l
Hence the output is ""12, 12"".",Functions,C Programming,3
392,"What will be the output of the program?
#include<stdio.h>
int check(int);
int main()
{
    int i=45, c;
    c = check(i);
    printf(""%d\n"", c);
    return 0;
}
int check(int ch)
{
    if(ch >= 45)
        return 100;
    else
        return 10;
}",100,10,1,0,100,"Step 1
:
int check(int);
This prototype tells the compiler that the function
check()
accepts one integer parameter and returns an integer value.
Step 2
:
int l=45, c;
The variable
i
and
c
are declared as an integer type and
i
is initialized to 45.
The function
check(i)
return 100 if the given value of variable
i
is >=(greater than or equal to) 45, else it will return 10.
Step 3
:
c = check(i);
becomes
c = check(45);
The function
check()
return 100 and it get stored in the variable
c
.(c = 100)
Step 4
:
printf(""%d\n"", c);
It prints the value of variable
c
.
Hence the output of the program is '100'.",Functions,C Programming,2.7
393,"If int is 2 bytes wide.What will be the output of the program?
#include <stdio.h>
void fun(char**);

int main()
{
    char *argv[] = {""ab"", ""cd"", ""ef"", ""gh""};
    fun(argv);
    return 0;
}
void fun(char **p)
{
    char *t;
    t = (p+= sizeof(int))[-1];
    printf(""%s\n"", t);
}",ab,cd,ef,gh,cd,"Since C is a machine dependent language
sizeof(int)
may return different values.
The output for the above program will be
cd
in Windows (Turbo C) and
gh
in Linux (GCC).
To understand it better, compile and execute the above program in Windows (with Turbo C compiler) and in Linux (GCC compiler).",Functions,C Programming,1.5
394,"What will be the output of the program?
#include<stdio.h>
int fun(int(*)());

int main()
{
    fun(main);
    printf(""Hi\n"");
    return 0;
}
int fun(int (*p)())
{
    printf(""Hello "");
    return 0;
}",Infinite loop,Hi,Hello Hi,Error,Hello Hi,"No answer description is available.
Let's discuss.",Functions,C Programming,2.3
395,"What will be the output of the program?
#include<stdio.h>

int fun(int i)
{
    i++;
    return i;
}

int main()
{
    int fun(int);
    int i=3;
    fun(i=fun(fun(i)));
    printf(""%d\n"", i);
    return 0;
}",5,4,Error,Garbage value,5,"Step 1
:
int fun(int);
This is prototype of function
fun()
. It tells the compiler that the function
fun()
accept one integer parameter and returns an integer value.
Step 2
:
int i=3;
The variable
i
is declared as an integer type and initialized to value 3.
Step 3
:
fun(i=fun(fun(i)));
. The function
fun(i)
increements the value of
i
by 1(one) and return it.
Lets go step by step,
=>
fun(i)
becomes
fun(3)
is called and it returns 4.
=>
i = fun(fun(i))
becomes
i = fun(4)
is called and it returns 5 and stored in variable
i
.(i=5)
=>
fun(i=fun(fun(i)));
becomes
fun(5);
is called and it return 6 and nowhere the return value is stored.
Step 4
:
printf(""%d\n"", i);
It prints the value of variable i.(5)
Hence the output is '5'.",Functions,C Programming,2.7
396,"What will be the output of the program?
#include<stdio.h>
int fun(int);
int main()
{
    float k=3;
    fun(k=fun(fun(k)));
    printf(""%f\n"", k);
    return 0;
}
int fun(int i)
{
    i++;
    return i;
}",5,3,Garbage value,4,5,"No answer description is available.
Let's discuss.",Functions,C Programming,2.1
397,"What will be the output of the program?
#include<stdio.h>
#include<stdlib.h>

int main()
{
    int i=0;
    i++;
    if(i<=5)
    {
        printf(""IndiaBIX"");
        exit(1);
        main();
    }
    return 0;
}","Prints ""IndiaBIX"" 5 times",Function main() doesn't calls itself,Infinite loop,"Prints ""IndiaBIx""","Prints ""IndiaBIx""","Step 1
:
int i=0;
The variable
i
is declared as in integer type and initialized to '0'(zero).
Step 2
:
i++;
Here variable
i
is increemented by 1. Hence
i
becomes '1'(one).
Step 3
:
if(i<=5)
becomes
if(1 <=5)
. Hence the
if
condition is satisfied and it enter into
if
block statements.
Step 4
:
printf(""IndiaBIX"");
It prints ""IndiaBIX"".
Step 5
:
exit(1);
This
exit
statement  terminates the program execution.
Hence the output is ""IndiaBIx"".",Functions,C Programming,1.6
398,"Point out the error in the program
f(int a, int b)
{
    int a;
    a = 20;
    return a;
}",Missing parenthesis in return statement,"The function should be defined as int f(int a, int b)",Redeclaration of a,None of above,Redeclaration of a,"f(int a, int b)
The variable
a
is declared in the function argument statement.
int a;
Here again we are declaring the variable
a
. Hence it shows the error ""Redeclaration of a""",Functions,C Programming,1.7
399,"Point out the error in the program
#include<stdio.h>
int f(int a)
{
  a > 20? return(10): return(20);
}
int main()
{
    int f(int);
    int b;
    b = f(20);
    printf(""%d\n"", b);
    return 0;
}",Error: Prototype declaration,No error,Error: return statement cannot be used with conditional operators,None of above,Error: return statement cannot be used with conditional operators,"In a ternary operator, we cannot use the return statement. The ternary operator requires expressions but not code.",Functions,C Programming,2.6
400,"Point out the error in the program
#include<stdio.h>

int main()
{
    int a=10;
    void f();
    a = f();
    printf(""%d\n"", a);
    return 0;
}
void f()
{
    printf(""Hi"");
}",Error: Not allowed assignment,Error: Doesn't print anything,No error,None of above,Error: Not allowed assignment,"The function
void f()
is not visible to the compiler while going through main() function. So we have to declare this prototype
void f();
before to main() function. This kind of error will not occur in modern compilers.",Functions,C Programming,2.3
401,"Which of the following statements are correct about the program?
#include<stdio.h>

int main()
{
    printf(""%p\n"", main());
    return 0;
}",It prints garbage values infinitely,Runs infinitely without printing anything,Error: main() cannot be called inside printf(),No Error and print nothing,Runs infinitely without printing anything,"In
printf(""%p\n"", main());
it calls the main() function and then it repeats infinetly, untill stack overflow.",Functions,C Programming,-2.6
402,"There is a error in the below program. Which statement will you add to remove it?
#include<stdio.h>

int main()
{
    int a;
    a = f(10, 3.14);
    printf(""%d\n"", a);
    return 0;
}
float f(int aa, float bb)
{
    return ((float)aa + bb);
}","Add prototype: float f(aa, bb)","Add prototype: float f(int, float)","Add prototype: float f(float, int)","Add prototype: float f(bb, aa)","Add prototype: float f(int, float)","The correct form of function
f
prototype is
float f(int, float);",Functions,C Programming,2.2
403,"Which of the following statements are correct about the function?
long fun(int num)
{
    int i;
    long f=1;
    for(i=1; i<=num; i++)
        f = f * i;
    return f;
}",The function calculates the value of 1 raised to power num.,The function calculates the square root of an integer,The function calculates the factorial value of an integer,None of above,The function calculates the factorial value of an integer,"Yes, this function calculates and return the factorial value of an given integer
num
.",Functions,C Programming,-1.6
404,A function cannot be defined inside another function,TRUE,FALSE,Not Available,Not Available,TRUE,"A function cannot be defined inside the another function, but a function can be called inside a another function.",Functions,C Programming,1
405,Functions cannot return more than one value at a time,TRUE,FALSE,Not Available,Not Available,TRUE,"True, A function cannot return more than one value at a time. because after returning a value the control is given back to calling function.",Functions,C Programming,2.4
406,"If return type for a function is not specified, it defaults to int",TRUE,FALSE,Not Available,Not Available,TRUE,"True, The default
return
type for a function is
int
.",Functions,C Programming,1.2
407,In C all functions except main() can be called recursively.,TRUE,FALSE,Not Available,Not Available,FALSE,"Any function including
main()
can be called recursively.",Functions,C Programming,2.2
408,Functions can be called either by value or reference,TRUE,FALSE,Not Available,Not Available,TRUE,"True, A function can be called either call by value or call by reference.
Example
:
Call by value means
c = sub(a, b);
here value of
a
and
b
are passed.
Call by reference means
c = sub(&a, &b);
here address of
a
and
b
are passed.",Functions,C Programming,1.9
409,A function may have any number of return statements each returning different values.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, A function may have any number of
return
statements each returning different values and each
return
statements will not occur successively.",Functions,C Programming,1.3
410,Names of functions in two different files linked together must be unique,TRUE,FALSE,Not Available,Not Available,TRUE,"True, If two function are declared in a same name, it gives ""Error: Multiple declaration of function_name())"".",Functions,C Programming,2
411,Functions cannot return a floating point number,Yes,No,Not Available,Not Available,No,"A function can return floating point value.
Example
:
#
include
<stdio.h>
float
sub
(
float
,
float
)
;
/* Function prototype */
int
main
(
)
{
float
a
=
4.5
,
b
=
3.2
,
c
;
c
=
sub
(
a
,
b
)
;
printf
(
""c = %f\n""
,
c
)
;
return
0
;
}
float
sub
(
float
a
,
float
b
)
{
return
(
a
-
b
)
;
}
Output
:
c = 1.300000",Functions,C Programming,1.6
412,Every function must return a value,Yes,No,Not Available,Not Available,No,"No, If a function return type is declared as
void
it cannot return any value.",Functions,C Programming,2.6
413,"If a function contains two return statements successively, the compiler will generate warnings. Yes/No ?",Yes,No,Not Available,Not Available,Yes,"Yes. If a function contains two
return
statements  successively, the compiler will generate ""Unreachable code"" warnings.
Example
:
#
include
<stdio.h>
int
mul
(
int
,
int
)
;
/* Function prototype */
int
main
(
)
{
int
a
=
4
,
b
=
3
,
c
;
c
=
mul
(
a
,
b
)
;
printf
(
""c = %d\n""
,
c
)
;
return
0
;
}
int
mul
(
int
a
,
int
b
)
{
return
(
a
*
b
)
;
return
(
a
-
b
)
;
/* Warning: Unreachable code */
}
Output
:
c = 12",Functions,C Programming,1.4
414,Maximum number of arguments that a function can take is 12,Yes,No,Not Available,Not Available,No,"No, C can accept upto 127 maximum number of arguments in a function.",Functions,C Programming,1.3
415,"Will the following functions work?
int f1(int a, int b)
{
    return ( f2(20) );
}
int f2(int a)
{
    return (a*a);
}",Yes,No,Not Available,Not Available,Yes,"Yes, It will return the value 20*20 = 400
Example
:
#
include
<stdio.h>
int
f1
(
int
,
int
)
;
/* Function prototype */
int
f2
(
int
)
;
/* Function prototype */
int
main
(
)
{
int
a
=
2
,
b
=
3
,
c
;
c
=
f1
(
a
,
b
)
;
printf
(
""c = %d\n""
,
c
)
;
return
0
;
}
int
f1
(
int
a
,
int
b
)
{
return
(
f2
(
20
)
)
;
}
int
f2
(
int
a
)
{
return
(
a
*
a
)
;
}
Output
:
c = 400",Functions,C Programming,1.9
416,Usually recursion works slower than loops.,Yes,No,Not Available,Not Available,Yes,"When a recursive call is made, the function/process clones itself and then process that funtion. This leads to time and space constrains.
In a loop, there is no recursive call involved that saves a lot of time and space too.",Functions,C Programming,2.9
417,Is it true that too many recursive calls may result into stack overflow?,Yes,No,Not Available,Not Available,Yes,"Yes, too many recursive calls may result into
stack overflow
. because when a function is called its return address is stored in stack.
After sometime the stack memory will be filled completely. Hence
stack overflow
error will occur.",Functions,C Programming,1.3
418,In a function two return statements should never occur.,Yes,No,Not Available,Not Available,No,"No, In a function two
return
statements can occur but not successively.
Example
:
#
include
<stdio.h>
int
mul
(
int
,
int
)
;
/* Function prototype */
int
main
(
)
{
int
a
=
0
,
b
=
3
,
c
;
c
=
mul
(
a
,
b
)
;
printf
(
""c = %d\n""
,
c
)
;
return
0
;
}
/* Two return statements in the mul() function */
int
mul
(
int
a
,
int
b
)
{
if
(
a
==
0
||
b
==
0
)
{
return
0
;
}
else
{
return
(
a
*
b
)
;
}
}
Output
:
c = 0",Functions,C Programming,2.9
419,"What is the notation for following functions?
1.  int f(int a, float b)
    {
        /* Some code */
    }

2.  int f(a, b)
    int a; float b;
    {
        /* Some code */
    }","1. KR Notation
2. ANSI Notation","1. Pre ANSI C Notation
2. KR Notation","1. ANSI Notation
2. KR Notation","1. ANSI Notation
2. Pre ANSI Notation","1. ANSI Notation
2. KR Notation",KR Notation means Kernighan and Ritche Notation.,Functions,C Programming,1.5
420,"How many times the program will print ""IndiaBIX"" ?
#include<stdio.h>

int main()
{
    printf(""IndiaBIX"");
    main();
    return 0;
}",Infinite times,32767 times,65535 times,Till stack overflows,Till stack overflows,"A
call stack
or
function stack
is used for several related purposes, but the main reason for having one is to keep track of the point to which each active subroutine should return control when it finishes executing.
A
stack overflow
occurs when too much memory is used on the call stack.
Here function
main()
is called repeatedly and its return address is stored in the stack. After stack memory is full. It shows stack overflow error.",Functions,C Programming,1.2
421,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    static char *s[] = {""black"", ""white"", ""pink"", ""violet""};
    char **ptr[] = {s+3, s+2, s+1, s}, ***p;
    p = ptr;
    ++p;
    printf(""%s"", **p+1);
    return 0;
}",ink,ack,ite,let,ink,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.1
422,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int i=3, *j, k;
    j = &i;
    printf(""%d\n"", i**j*i+*j);
    return 0;
}",30,27,9,3,30,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.1
423,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int x=30, *y, *z;
    y=&x; /* Assume address of x is 500 and integer is 4 byte size */
    z=y;
    *y++=*z++;
    x++;
    printf(""x=%d, y=%d, z=%d\n"", x, y, z);
    return 0;
}","x=31, y=502, z=502","x=31, y=500, z=500","x=31, y=498, z=498","x=31, y=504, z=504","x=31, y=504, z=504","No answer description is available.
Let's discuss.",Pointers,C Programming,1.4
424,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str[20] = ""Hello"";
    char *const p=str;
    *p='M';
    printf(""%s\n"", str);
    return 0;
}",Mello,Hello,HMello,MHello,Mello,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.8
425,"What will be the output of the program If the integer is 4bytes long?
#include<stdio.h>

int main()
{
    int ***r, **q, *p, i=8;
    p = &i;
    q = &p;
    r = &q;
    printf(""%d, %d, %d\n"", *p, **q, ***r);
    return 0;
}","8, 8, 8","4000, 4002, 4004","4000, 4004, 4008","4000, 4008, 4016","8, 8, 8","No answer description is available.
Let's discuss.",Pointers,C Programming,1.6
426,"What will be the output of the program ?
#include<stdio.h>

void fun(void *p);
int i;

int main()
{
    void *vptr;
    vptr = &i;
    fun(vptr);
    return 0;
}
void fun(void *p)
{
    int **q;
    q = (int**)&p;
    printf(""%d\n"", **q);
}",Error: cannot convert from void** to int**,Garbage value,0,No output,0,"No answer description is available.
Let's discuss.",Pointers,C Programming,3
427,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char *str;
    str = ""%s"";
    printf(str, ""K\n"");
    return 0;
}",Error,No output,K,%s,K,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.1
428,"What will be the output of the program ?
#include<stdio.h>
int *check(static int, static int);

int main()
{
    int *c;
    c = check(10, 20);
    printf(""%d\n"", c);
    return 0;
}
int *check(static int i, static int j)
{
    int *p, *q;
    p = &i;
    q = &j;
    if(i >= 45)
        return (p);
    else
        return (q);
}",10,20,Error: Non portable pointer conversion,Error: cannot use static for function parameters,Error: cannot use static for function parameters,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.2
429,"What will be the output of the program if the size of pointer is 4-bytes?
#include<stdio.h>

int main()
{
    printf(""%d, %d\n"", sizeof(NULL), sizeof(""""));
    return 0;
}","2, 1","2, 2","4, 1","4, 2","4, 1","In TurboC, the output will be 2, 1 because the size of the pointer is 2 bytes in 16-bit platform.
But in Linux, the output will be 4, 1 because the size of the pointer is 4 bytes.
This difference is due to the platform dependency of C compiler.",Pointers,C Programming,3
430,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    void *vp;
    char ch=74, *cp=""JACK"";
    int j=65;
    vp=&ch;
    printf(""%c"", *(char*)vp);
    vp=&j;
    printf(""%c"", *(int*)vp);
    vp=cp;
    printf(""%s"", (char*)vp+2);
    return 0;
}",JCK,J65K,JAK,JACK,JACK,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.7
431,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int arr[2][2][2] = {10, 2, 3, 4, 5, 6, 7, 8};
    int *p, *q;
    p = &arr[1][1][1];
    q = (int*) arr;
    printf(""%d, %d\n"", *p, *q);
    return 0;
}","8, 10","10, 2","8, 1",Garbage values,"8, 10","No answer description is available.
Let's discuss.",Pointers,C Programming,1.6
432,"What will be the output of the program assuming that the array begins at the location 1002 and size of an integer is 4 bytes?
#include<stdio.h>

int main()
{
    int a[3][4] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
    printf(""%u, %u, %u\n"", a[0]+1, *(a[0]+1), *(*(a+0)+1));
    return 0;
}","448, 4, 4","520, 2, 2","1006, 2, 2",Error,"1006, 2, 2","No answer description is available.
Let's discuss.",Pointers,C Programming,1.1
433,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int arr[3] = {2, 3, 4};
    char *p;
    p = arr;
    p = (char*)((int*)(p));
    printf(""%d, "", *p);
    p = (int*)(p+1);
    printf(""%d"", *p);
    return 0;
}","2, 3","2, 0","2, Garbage value","0, 0","2, 0","No answer description is available.
Let's discuss.",Pointers,C Programming,2
434,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char *str;
    str = ""%d\n"";
    str++;
    str++;
    printf(str-2, 300);
    return 0;
}",No output,30,3,300,300,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.8
435,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    printf(""%c\n"", 7[""IndiaBIX""]);
    return 0;
}",Error: in printf,Nothing will print,"print ""X"" of IndiaBIX","print ""7""","print ""X"" of IndiaBIX","No answer description is available.
Let's discuss.",Pointers,C Programming,1.1
436,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str[] = ""peace"";
    char *s = str;
    printf(""%s\n"", s++ +3);
    return 0;
}",peace,eace,ace,ce,ce,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.9
437,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char *p;
    p=""hello"";
    printf(""%s\n"", *&*&p);
    return 0;
}",llo,hello,ello,h,hello,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.8
438,"What will be the output of the program assuming that the array begins at location 1002?
#include<stdio.h>

int main()
{
    int a[2][3][4] = { {1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 1, 2}, 
                       {2, 1, 4, 7, 6, 7, 8, 9, 0, 0, 0, 0} };
    printf(""%u, %u, %u, %d\n"", a, *a, **a, ***a);
    return 0;
}","1002, 2004, 4008, 2","2004, 4008, 8016, 1","1002, 1002, 1002, 1",Error,"1002, 1002, 1002, 1","No answer description is available.
Let's discuss.",Pointers,C Programming,1.4
439,"What will be the output of the program ?
#include<stdio.h>
power(int**);
int main()
{
    int a=5, *aa; /* Address of 'a' is 1000 */
    aa = &a;
    a = power(&aa);
    printf(""%d\n"", a);
    return 0;
}
power(int **ptr)
{
    int b;
    b = **ptr***ptr;
    return (b);
}",5,25,125,Garbage value,25,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.2
440,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str1[] = ""India"";
    char str2[] = ""BIX"";
    char *s1 = str1, *s2=str2;
    while(*s1++ = *s2++)
        printf(""%s"", str1);

    printf(""\n"");
    return 0;
}",IndiaBIX,BndiaBIdiaBIXia,India,(null),BndiaBIdiaBIXia,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.1
441,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    int i, n;
    char *x=""Alice"";
    n = strlen(x);
    *x = x[n];
    for(i=0; i<=n; i++)
    {
        printf(""%s "", x);
        x++;
    }
    printf(""\n"", x);
    return 0;
}",Alice,ecilA,Alice lice ice ce e,lice ice ce e,lice ice ce e,"If you compile and execute this program in windows platform with Turbo C, it will give ""lice ice ce e"".
It may give different output in other platforms (depends upon compiler and machine). The online C compiler given in this site will give the Option C as output (it runs on Linux platform).",Pointers,C Programming,1.5
442,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int i, a[] = {2, 4, 6, 8, 10};
    change(a, 5);
    for(i=0; i<=4; i++)
        printf(""%d, "", a[i]);
    return 0;
}
void change(int *b, int n)
{
    int i;
    for(i=0; i<n; i++)
        *(b+1) = *(b+i)+5;
}","7, 9, 11, 13, 15","2, 15, 6, 8, 10",2 4 6 8 10,"3, 1, -1, -3, -5","2, 15, 6, 8, 10","No answer description is available.
Let's discuss.",Pointers,C Programming,1
443,"If the size of integer is 4bytes, What will be the output of the program?
#include<stdio.h>

int main()
{
    int arr[] = {12, 13, 14, 15, 16};
    printf(""%d, %d, %d\n"", sizeof(arr), sizeof(*arr), sizeof(arr[0]));
    return 0;
}","10, 2, 4","20, 4, 4","16, 2, 2","20, 2, 2","20, 4, 4","No answer description is available.
Let's discuss.",Pointers,C Programming,1
444,"Point out the compile time error in the program given below.
#include<stdio.h>

int main()
{
    int *x;
    *x=100;
    return 0;
}",Error: invalid assignment for x,Error: suspicious pointer conversion,No error,None of above,No error,"While reading the code there is no error, but upon running the program having an unitialised variable can cause the program to crash (Null pointer assignment).",Pointers,C Programming,2.5
445,"Point out the error in the program
#include<stdio.h>

int main()
{
    int a[] = {10, 20, 30, 40, 50};
    int j;
    for(j=0; j<5; j++)
    {
        printf(""%d\n"", a);
        a++;
    }
    return 0;
}",Error: Declaration syntax,Error: Expression syntax,Error: LValue required,Error: Rvalue required,Error: LValue required,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.6
446,Which of the following statements correctly declare a function that receives a pointer to pointer to a pointer to a float and returns a pointer to a pointer to a pointer to a pointer to a float?,float **fun(float***);,float *fun(float**);,float fun(float***);,float ****fun(float***);,float ****fun(float***);,"No answer description is available.
Let's discuss.",Pointers,C Programming,-2.9
447,"Which of the statements is correct about the program?
#include<stdio.h>

int main()
{
    int i=10;
    int *j=&i;
    return 0;
}",j and i are pointers to an int,i is a pointer to an int and stores address of j,j is a pointer to an int and stores address of i,j is a pointer to a pointer to an int and stores address of i,j is a pointer to an int and stores address of i,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.6
448,"Which of the statements is correct about the program?
#include<stdio.h>

int main()
{
    float a=3.14;
    char *j;
    j = (char*)&a;
    printf(""%d\n"", *j);
    return 0;
}",It prints ASCII value of the binary number present in the first byte of a float variable a.,It prints character equivalent of the binary number present in the first byte of a float variable a.,It will print 3,It will print a garbage value,It prints ASCII value of the binary number present in the first byte of a float variable a.,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.2
449,"In the following program add a statement in the function fun() such that address of a gets stored in j?
#include<stdio.h>
int main()
{
    int *j;
    void fun(int**);
    fun(&j);
    return 0;
}
void fun(int **k)
{
    int a=10;
    /* Add a statement here */
}",**k=a;,k=&a;,*k=&a,&k=*a,*k=&a,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.6
450,"Which of the following statements correct about k used in the below statement?
char ****k;",k is a pointer to a pointer to a pointer to a char,k is a pointer to a pointer to a pointer to a pointer to a char,k is a pointer to a char pointer,k is a pointer to a pointer to a char,k is a pointer to a pointer to a pointer to a pointer to a char,"No answer description is available.
Let's discuss.",Pointers,C Programming,-1.9
451,"Which of the statements is correct about the program?
#include<stdio.h>

int main()
{
    int arr[3][3] = {1, 2, 3, 4};
    printf(""%d\n"", *(*(*(arr))));
    return 0;
}",Output: Garbage value,Output: 1,Output: 3,Error: Invalid indirection,Error: Invalid indirection,"No answer description is available.
Let's discuss.",Pointers,C Programming,2
452,"Which statement will you add to the following program to ensure that the program outputs ""IndiaBIX"" on execution?
#include<stdio.h>

int main()
{
    char s[] = ""IndiaBIX"";
    char t[25];
    char *ps, *pt;
    ps = s;
    pt = t;
    while(*ps)
        *pt++ = *ps++;

    /* Add a statement here */
    printf(""%s\n"", t);
    return 0;
}",*pt='';,pt='\0';,pt='\n';,*pt='\0';,*pt='\0';,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.8
453,"In the following program add a statement in the function fact() such that the factorial gets stored in j.
#include<stdio.h>
void fact(int*);

int main()
{
    int i=5;
    fact(&i);
    printf(""%d\n"", i);
    return 0;
}
void fact(int *j)
{
    static int s=1;
    if(*j!=0)
    {
        s = s**j;
        *j = *j-1;
        fact(j);
        /* Add a statement here */
    }
}",j=s;,*j=s;,*j=&s;,&j=s;,*j=s;,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.3
454,Are the expression *ptr++ and ++*ptr are same?,TRUE,FALSE,Not Available,Not Available,FALSE,"*ptr++
increments the pointer and not the value, whereas the
++*ptr
increments the value being pointed by
ptr",Pointers,C Programming,2.5
455,"Will the program compile?
#include<stdio.h>
int main()
{
    char str[5] = ""IndiaBIX"";
    return 0;
}",TRUE,FALSE,Not Available,Not Available,TRUE,"C doesn't do array bounds checking at compile time, hence this compiles.
But, the modern compilers like Turbo C++ detects this as 'Error: Too many initializers'.
GCC would give you a warning.",Pointers,C Programming,2.7
456,"The following program reports an error on compilation.
#include<stdio.h>
int main()
{
    float i=10, *j;
    void *k;
    k=&i;
    j=k;
    printf(""%f\n"", *j);
    return 0;
}",TRUE,FALSE,Not Available,Not Available,FALSE,"This program will NOT report any error. (Tested in Turbo C under DOS and GCC under Linux)
The output: 10.000000",Pointers,C Programming,1.8
457,"Are the three declarations char **apple, char *apple[], and char apple[][] same?",TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.7
458,"Is there any difference between the following two statements?
char *p=0;
char *t=NULL;",Yes,No,Not Available,Not Available,No,"NULL is
#defined
as 0 in the 'stdio.h' file. Thus, both
p
and
t
are NULL pointers.",Pointers,C Programming,0
459,"Is this a correct way for NULL pointer assignment?
int i=0;
char *q=(char*)i;",Yes,No,Not Available,Not Available,No,"The correct way is
char *q=0 (or) char *q=(char*)0",Pointers,C Programming,1.6
460,Is the NULL pointer same as an uninitialised pointer?,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.8
461,"Will the program compile in Turbo C?
#include<stdio.h>
int main()
{
    int a=10, *j;
    void *k;
    j=k=&a;
    j++;
    k++;
    printf(""%u %u\n"", j, k);
    return 0;
}",Yes,No,Not Available,Not Available,No,"Error in statement
k++
. We cannot perform arithmetic on
void
pointers.
The following error will be displayed while compiling above program in TurboC.
Compiling PROGRAM.C:
Error PROGRAM.C 8: Size of the type is unknown or zero.",Pointers,C Programming,2.5
462,"Will the following program give any warning on compilation in TurboC (under DOS)?
#include<stdio.h>

int main()
{
    int *p1, i=25;
    void *p2;
    p1=&i;
    p2=&i;
    p1=p2;
    p2=p1;
    return 0;
}",Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.8
463,What is (void*)0?,Representation of NULL pointer,Representation of void pointer,Error,None of above,Representation of NULL pointer,"No answer description is available.
Let's discuss.",Pointers,C Programming,3
464,"Can you combine the following two statements into one?
char *p;
p = (char*) malloc(100);",char p = *malloc(100);,char *p = (char) malloc(100);,char *p = (char*)malloc(100);,char *p = (char *)(malloc*)(100);,char *p = (char*)malloc(100);,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.4
465,In which header file is the NULL macro defined?,stdio.h,stddef.h,stdio.h and stddef.h,math.h,stdio.h and stddef.h,"The macro ""NULL"" is defined in locale.h, stddef.h, stdio.h, stdlib.h, string.h, time.h, and wchar.h.",Pointers,C Programming,2.1
466,"How many bytes are occupied by near, far and huge pointers (DOS)?",near=2 far=4 huge=4,near=4 far=8 huge=8,near=2 far=4 huge=8,near=4 far=4 huge=8,near=2 far=4 huge=4,"near=2
,
far=4
and
huge=4
pointers exist only under DOS. Under windows and Linux every pointers is 4 bytes long.",Pointers,C Programming,2.6
467,"If a variable is a pointer to a structure, then which of the following operator is used to access data members of the structure through the pointer variable?",.,&,*,->,->,"No answer description is available.
Let's discuss.",Pointers,C Programming,-2
468,What would be the equivalent pointer expression for referring the array element a[i][j][k][l],((((a+i)+j)+k)+l),*(*(*(*(a+i)+j)+k)+l),(((a+i)+j)+k+l),((a+i)+j+k+l),*(*(*(*(a+i)+j)+k)+l),"No answer description is available.
Let's discuss.",Pointers,C Programming,1.9
469,A pointer is,A keyword used to create variables,A variable that stores address of an instruction,A variable that stores address of other variable,All of the above,A variable that stores address of other variable,"No answer description is available.
Let's discuss.",Pointers,C Programming,1.3
470,The operator used to get value at address stored in a pointer variable is,*,&,&&,||,*,"No answer description is available.
Let's discuss.",Pointers,C Programming,2.7
471,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    char str1[20] = ""Hello"", str2[20] = "" World"";
    printf(""%s\n"", strcpy(str2, strcat(str1, str2)));
    return 0;
}",Hello,World,Hello World,WorldHello,Hello World,"Step 1
:
char str1[20] = ""Hello"", str2[20] = "" World"";
The variable
str1
and
str2
is declared as an array of characters and initialized with value ""Hello"" and "" World"" respectively.
Step 2
:
printf(""%s\n"", strcpy(str2, strcat(str1, str2)));
=>
strcat(str1, str2))
it append the string
str2
to
str1
. The result will be stored in
str1
. Therefore
str1
contains ""Hello World"".
=>
strcpy(str2, ""Hello World"")
it copies the ""Hello World"" to the variable
str2
.
Hence it prints ""Hello World"".",Strings,C Programming,1.6
472,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char p[] = ""%d\n"";
    p[1] = 'c';
    printf(p, 65);
    return 0;
}",A,a,c,65,A,"Step 1
:
char p[] = ""%d\n"";
The variable
p
is declared as an array of characters and initialized with string ""%d"".
Step 2
:
p[1] = 'c';
Here, we overwrite the second element of array
p
by 'c'. So array
p
becomes ""%c"".
Step 3
:
printf(p, 65);
becomes
printf(""%c"", 65);
Therefore it prints the ASCII value of 65. The output is 'A'.",Strings,C Programming,2.3
473,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    printf(""%d\n"", strlen(""123456""));
    return 0;
}",6,12,7,2,6,"The function
strlen
returns the number of characters in the given string.
Therefore,
strlen(""123456"")
returns 6.
Hence the output of the program is ""6"".",Strings,C Programming,2.8
474,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    printf(5+""Good Morning\n"");
    return 0;
}",Good Morning,Good,M,Morning,Morning,"printf(5+""Good Morning\n"");
It skips the 5 characters and prints the given string.
Hence the output is ""Morning""",Strings,C Programming,1.5
475,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    char str[] = ""India\0\BIX\0"";
    printf(""%s\n"", str);
    return 0;
}",BIX,India,India BIX,India\0BIX,India,"A string is a collection of characters terminated by '\0'.
Step 1
:
char str[] = ""India\0\BIX\0"";
The variable str is declared as an array of characters and initialized with value ""India""
Step 2
:
printf(""%s\n"", str);
It prints the value of the
str
.
The output of the program is ""India"".",Strings,C Programming,1.1
476,"What will be the output of the program If characters 'a', 'b' and 'c' enter are supplied as input?
#include<stdio.h>

int main()
{
    void fun();
    fun();
    printf(""\n"");
    return 0;
}
void fun()
{
    char c;
    if((c = getchar())!= '\n')
        fun();
    printf(""%c"", c);
}",abc abc,bca,Infinite loop,cba,cba,"Step 1
:
void fun();
This is the prototype for the function
fun()
.
Step 2
:
fun();
The function
fun()
is called here.
The function
fun()
gets a character input and the input is terminated by an enter key(New line character). It prints the given character in the reverse order.
The given input characters are ""abc""
Output
: cba",Strings,C Programming,1.2
477,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    printf(""India"", ""BIX\n"");
    return 0;
}",Error,India BIX,India,BIX,India,"printf(""India"", ""BIX\n"");
It prints ""India"". Because
,
(comma) operator has Left to Right associativity. After printing ""India"", the statement got terminated.",Strings,C Programming,1.1
478,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str[7] = ""IndiaBIX"";
    printf(""%s\n"", str);
    return 0;
}",Error,IndiaBIX,Cannot predict,None of above,Cannot predict,"Here
str[]
has declared as 7 character array and into a 8 character is stored. This will result in overwriting of the byte beyond 7 byte reserved for
'\0'
.",Strings,C Programming,1.4
479,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char *names[] = { ""Suresh"", ""Siva"", ""Sona"", ""Baiju"", ""Ritu""};
    int i;
    char *t;
    t = names[3];
    names[3] = names[4];
    names[4] = t;
    for(i=0; i<=4; i++)
        printf(""%s,"", names[i]);
    return 0;
}","Suresh, Siva, Sona, Baiju, Ritu","Suresh, Siva, Sona, Ritu, Baiju","Suresh, Siva, Baiju, Sona, Ritu","Suresh, Siva, Ritu, Sona, Baiju","Suresh, Siva, Sona, Ritu, Baiju","Step 1
:
char *names[] = { ""Suresh"", ""Siva"", ""Sona"", ""Baiju"", ""Ritu""};
The variable
names
is declared as an pointer to a array of strings.
Step 2
:
int i;
The variable
i
is declared as an integer type.
Step 3
:
char *t;
The variable
t
is declared as pointer to a string.
Step 4
:
t = names[3]; names[3] = names[4]; names[4] = t;
These statements the swaps the 4 and 5 element of the array
names
.
Step 5
:
for(i=0; i<=4; i++) printf(""%s,"", names[i]);
These statement prints the all the value of the array
names
.
Hence the output of the program is ""Suresh, Siva, Sona, Ritu, Baiju"".",Strings,C Programming,1.1
480,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    char str[] = ""India\0\BIX\0"";
    printf(""%d\n"", strlen(str));
    return 0;
}",10,6,5,11,5,"The function
strlen
returns the number of characters int the given string.
Therefore,
strlen(str)
becomes
strlen(""India"")
contains 5 characters. A string is a collection of characters terminated by '\0'.
The output of the program is ""5"".",Strings,C Programming,2
481,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    static char str1[] = ""dills"";
    static char str2[20];
    static char str3[] = ""Daffo"";
    int i;
    i = strcmp(strcat(str3, strcpy(str2, str1)), ""Daffodills"");
    printf(""%d\n"", i);
    return 0;
}",0,1,2,4,0,"No answer description is available.
Let's discuss.",Strings,C Programming,2.4
482,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    static char s[] = ""Hello!"";
    printf(""%d\n"", *(s+strlen(s)));
    return 0;
}",8,0,16,Error,0,"No answer description is available.
Let's discuss.",Strings,C Programming,1
483,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    static char s[25] = ""The cocaine man"";
    int i=0;
    char ch;
    ch = s[++i];
    printf(""%c"", ch);
    ch = s[i++];
    printf(""%c"", ch);
    ch = i++[s];
    printf(""%c"", ch);
    ch = ++i[s];
    printf(""%c"", ch);
    return 0;
}",hhe!,he c,The c,Hhec,hhe!,"No answer description is available.
Let's discuss.",Strings,C Programming,2.4
484,"What will be the output of the program in 16-bit platform (Turbo C under DOS) ?
#include<stdio.h>

int main()
{
    printf(""%d, %d, %d"", sizeof(3.0f), sizeof('3'), sizeof(3.0));
    return 0;
}","8, 1, 4","4, 2, 8","4, 2, 4","10, 3, 4","4, 2, 8","Step 1
:
printf(""%d, %d, %d"", sizeof(3.0f), sizeof('3'), sizeof(3.0));
The sizeof function returns the size of the given expression.
sizeof(3.0f)
is a floating point constant. The size of
float
is 4 bytes
sizeof('3')
It converts '3' in to ASCII value.. The size of
int
is 2 bytes
sizeof(3.0)
is a double constant. The size of
double
is 8 bytes
Hence the output of the program is 4,2,8
Note: The above program may produce different output in other platform due to the platform dependency of C compiler.
In Turbo C, 4 2 8. But in GCC, the output will be 4 4 8.",Strings,C Programming,2.8
485,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int i;
    char a[] = ""\0"";
    if(printf(""%s"", a))
        printf(""The string is empty\n"");
    else
        printf(""The string is not empty\n"");
    return 0;
}",The string is empty,The string is not empty,No output,0,The string is not empty,"The function printf() returns the number of charecters printed on the console.
Step 1
:
char a[] = ""\0"";
The variable
a
is declared as an array of characters and it initialized with ""\0"". It denotes that the string is empty.
Step 2
:
if(printf(""%s"", a))
The
printf()
statement does not print anything, so it returns '0'(zero). Hence the if condition is failed.
In the
else
part it prints ""The string is not empty"".",Strings,C Programming,2
486,"If char=1, int=4, and float=4 bytes size, What will be the output of the program ?
#include<stdio.h>

int main()
{
    char ch = 'A';
    printf(""%d, %d, %d"", sizeof(ch), sizeof('A'), sizeof(3.14f));
    return 0;
}","1, 2, 4","1, 4, 4","2, 2, 4","2, 4, 8","1, 4, 4","Step 1
:
char ch = 'A';
The variable
ch
is declared as an character type and initialized with value 'A'.
Step 2
:
printf(""%d, %d, %d"", sizeof(ch), sizeof('A'), sizeof(3.14));
The sizeof function returns the size of the given expression.
sizeof(ch)
becomes
sizeof(char)
. The size of
char
is 1 byte.
sizeof('A')
becomes
sizeof(65)
. The size of
int
is 4 bytes (as mentioned in the question).
sizeof(3.14f)
. The size of
float
is 4 bytes.
Hence the output of the program is 1, 4, 4",Strings,C Programming,2
487,"If the size of pointer is 32 bits What will be the output of the program ?
#include<stdio.h>

int main()
{
    char a[] = ""Visual C++"";
    char *b = ""Visual C++"";
    printf(""%d, %d\n"", sizeof(a), sizeof(b));
    printf(""%d, %d"", sizeof(*a), sizeof(*b));
    return 0;
}","10, 2
2, 2","10, 4
1, 2","11, 4
1, 1","12, 2
2, 2","11, 4
1, 1","No answer description is available.
Let's discuss.",Strings,C Programming,1.6
488,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    static char mess[6][30] = {""Don't walk in front of me..."", 
                               ""I may not follow;"", 
                               ""Don't walk behind me..."", 
                               ""Just walk beside me..."", 
                               ""And be my friend."" };

    printf(""%c, %c\n"", *(mess[2]+9), *(*(mess+2)+9));
    return 0;
}","t, t","k, k","n, k","m, f","k, k","No answer description is available.
Let's discuss.",Strings,C Programming,1.1
489,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str1[] = ""Hello"";
    char str2[10];
    char *t, *s;
    s = str1;
    t = str2;
    while(*t=*s)
        *t++ = *s++;
    printf(""%s\n"", str2);
    return 0;
}",Hello,HelloHello,No output,ello,Hello,"No answer description is available.
Let's discuss.",Strings,C Programming,2.7
490,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str[] = ""India\0BIX\0"";
    printf(""%d\n"", sizeof(str));
    return 0;
}",10,6,5,11,11,"The following examples may help you understand this problem:
1.
sizeof("""")
returns 1 (1*).
2.
sizeof(""India"")
returns 6 (5 + 1*).
3.
sizeof(""BIX"")
returns 4 (3 + 1*).
4.
sizeof(""India\0BIX"")
returns 10 (5 + 1 + 3 + 1*).
Here '\0' is considered as 1 char by sizeof() function.
5.
sizeof(""India\0BIX\0"")
returns 11 (5 + 1 + 3 + 1 + 1*).
Here '\0' is considered as 1 char by sizeof() function.",Strings,C Programming,1.7
491,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str[25] = ""IndiaBIX"";
    printf(""%s\n"", &str+2);
    return 0;
}",Garbage value,Error,No output,diaBIX,Garbage value,"Step 1
:
char str[25] = ""IndiaBIX"";
The variable
str
is declared as an array of characteres and initialized with a string ""IndiaBIX"".
Step 2
:
printf(""%s\n"", &str+2);
=> In the printf statement
%s
is string format specifier tells the compiler to print the string in the memory of
&str+2
=>
&str
is a location of string ""IndiaBIX"". Therefore
&str+2
is another memory location.
Hence it prints the Garbage value.",Strings,C Programming,2
492,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str = ""IndiaBIX"";
    printf(""%s\n"", str);
    return 0;
}",Error,IndiaBIX,Base address of str,No output,Error,"The line
char str = ""IndiaBIX"";
generates ""Non portable pointer conversion"" error.
To eliminate the error, we have to change the above line to
char *str = ""IndiaBIX"";
(or)
char str[] = ""IndiaBIX"";
Then it prints ""IndiaBIX"".",Strings,C Programming,2.4
493,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str[] = ""Nagpur"";
    str[0]='K';
    printf(""%s, "", str);
    str = ""Kanpur"";
    printf(""%s"", str+1);
    return 0;
}","Kagpur, Kanpur","Nagpur, Kanpur","Kagpur, anpur",Error,Error,"The statement
str = ""Kanpur"";
generates the LVALUE required error. We have to use strcpy function to copy a string.
To remove error we have to change this statement
str = ""Kanpur"";
to
strcpy(str, ""Kanpur"");
The program prints the string ""anpur""",Strings,C Programming,1.6
494,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    printf(5+""IndiaBIX\n"");
    return 0;
}",Error,IndiaBIX,BIX,None of above,BIX,"printf(5+""IndiaBIX\n"");
In the printf statement, it skips the first 5 characters and it prints ""BIX""",Strings,C Programming,1.7
495,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    char sentence[80];
    int i;
    printf(""Enter a line of text\n"");
    gets(sentence);
    for(i=strlen(sentence)-1; i >=0; i--)
        putchar(sentence[i]);
    return 0;
}",The sentence will get printed in same order as it entered,The sentence will get printed in reverse order,Half of the sentence will get printed,None of above,The sentence will get printed in reverse order,"No answer description is available.
Let's discuss.",Strings,C Programming,1.3
496,"What will be the output of the program ?
#include<stdio.h>
void swap(char *, char *);

int main()
{
    char *pstr[2] = {""Hello"", ""IndiaBIX""};
    swap(pstr[0], pstr[1]);
    printf(""%s\n%s"", pstr[0], pstr[1]);
    return 0;
}
void swap(char *t1, char *t2)
{
    char *t;
    t=t1;
    t1=t2;
    t2=t;
}","IndiaBIX
Hello","Address of ""Hello"" and ""IndiaBIX""","Hello
IndiaBIX","Iello
HndiaBIX","Hello
IndiaBIX","Step 1
:
void swap(char *, char *);
This prototype tells the compiler that the function swap accept two strings as arguments and it does not return anything.
Step 2
:
char *pstr[2] = {""Hello"", ""IndiaBIX""};
The variable
pstr
is declared as an pointer to the array of strings. It is initialized to
pstr[0] = ""Hello""
,
pstr[1] = ""IndiaBIX""
Step 3
:
swap(pstr[0], pstr[1]);
The
swap
function is called by ""call by value"". Hence it does not affect the output of the program.
If the
swap
function is ""called by reference"" it will affect the variable
pstr
.
Step 4
:
printf(""%s\n%s"", pstr[0], pstr[1]);
It prints the value of
pstr[0]
and
pstr[1]
.
Hence the output of the program is
Hello
IndiaBIX",Strings,C Programming,2.1
497,"What will be the output of the program (Turbo C in 16 bit platform DOS) ?
#include<stdio.h>
#include<string.h>

int main()
{
    char *str1 = ""India"";
    char *str2 = ""BIX"";
    char *str3;
    str3 = strcat(str1, str2);
    printf(""%s %s\n"", str3, str1);
    return 0;
}",IndiaBIX India,IndiaBIX IndiaBIX,India India,Error,IndiaBIX IndiaBIX,"It prints 'IndiaBIX IndiaBIX' in TurboC (in 16 bit platform).
It may cause a 'segmentation fault error' in GCC (32 bit platform).",Strings,C Programming,3
498,"If the size of pointer is 4 bytes then What will be the output of the program ?
#include<stdio.h>

int main()
{
    char *str[] = {""Frogs"", ""Do"", ""Not"", ""Die"", ""They"", ""Croak!""};
    printf(""%d, %d"", sizeof(str), strlen(str[0]));
    return 0;
}","22, 4","25, 5","24, 5","20, 2","24, 5","Step 1
:
char *str[] = {""Frogs"", ""Do"", ""Not"", ""Die"", ""They"", ""Croak!""};
The variable str is declared as an pointer to the array of 6 strings.
Step 2
:
printf(""%d, %d"", sizeof(str), strlen(str[0]));
sizeof(str)
denotes 6 * 4 bytes = 24 bytes. Hence it prints '24'
strlen(str[0]));
becomes
strlen(Frogs))
. Hence it prints '5';
Hence the output of the program is 24, 5
Hint: If you run the above code in 16 bit platform (Turbo C under DOS) the output will be 12, 5. Because the pointer occupies only 2 bytes. If you run the above code in Linux (32 bit platform), the output will be 24, 5 (because the size of pointer is 4 bytes).",Strings,C Programming,3
499,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int i;
    char a[] = ""\0"";
    if(printf(""%s"", a))
        printf(""The string is not empty\n"");
    else
        printf(""The string is empty\n"");
    return 0;
}",The string is not empty,The string is empty,No output,0,The string is empty,"The function printf() returns the number of charecters printed on the console.
Step 1
:
char a[] = '\0';
The variable
a
is declared as an array of characters and it initialized with ""\0"". It denotes that the string is empty.
Step 2
:
if(printf(""%s"", a))
The
printf()
statement does not print anything, so it returns '0'(zero). Hence the if condition is failed.
In the
else
part it prints ""The string is empty"".",Strings,C Programming,2.7
500,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    char str1[5], str2[5];
    int i;
    gets(str1);
    gets(str2);
    i = strcmp(str1, str2);
    printf(""%d\n"", i);
    return 0;
}",Unpredictable integer value,0,-1,Error,Unpredictable integer value,"gets()
gets collects a string of characters terminated by a new line from the standard input stream
stdin
.
The
gets(str1)
read the input string from user and store in variable
str1
.
The
gets(str2)
read the input string from user and store in variable
str2
.
The code
i = strcmp(str1, str2);
The strcmp not only returns -1, 0 and +1, but also other negative or positive values. So the value of
i
is ""unpredictable integer value"".
printf(""%d\n"", i);
It prints the value of variable
i
.",Strings,C Programming,2.1
501,"What will be the output of the program in Turbo C?
#include<stdio.h>

int main()
{
    char str[10] = ""India"";
    str[6] = ""BIX"";
    printf(""%s\n"", str);
    return 0;
}",India BIX,BIX,India,Error,Error,"str[6] = ""BIX"";
- Nonportable pointer conversion.",Strings,C Programming,2.3
502,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char str1[] = ""Hello"";
    char str2[] = ""Hello"";
    if(str1 == str2)
        printf(""Equal\n"");
    else
        printf(""Unequal\n"");
    return 0;
}",Equal,Unequal,Error,None of above,Unequal,"Step 1
:
char str1[] = ""Hello"";
The variable
str1
is declared as an array of characters and initialized with a string ""Hello"".
Step 2
:
char str2[] = ""Hello"";
The variable
str2
is declared as an array of characters and initialized with a string ""Hello"".
We have use
strcmp(s1,s2)
function to compare strings.
Step 3
:
if(str1 == str2)
here the address of
str1
and
str2
are compared. The address of both variable is not same. Hence the if condition is failed.
Step 4
: At the else part it prints ""Unequal"".",Strings,C Programming,2.4
503,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char t;
    char *p1 = ""India"", *p2;
    p2=p1;
    p1 = ""BIX"";
    printf(""%s %s\n"", p1, p2);
    return 0;
}",India BIX,BIX India,India India,BIX BIX,BIX India,"Step 1
:
char *p1 = ""India"", *p2;
The variable
p1
and
p2
is declared as an pointer to a character value and
p1
is assigned with a value ""India"".
Step 2
:
p2=p1;
The value of
p1
is assigned to variable
p2
. So
p2
contains ""India"".
Step 3
:
p1 = ""BIX"";
The
p1
is assigned with a string ""BIX""
Step 4
:
printf(""%s %s\n"", p1, p2);
It prints the value of
p1
and
p2
.
Hence the output of the program is ""BIX India"".",Strings,C Programming,3
504,"What will be the output of the program ?
#include<stdio.h>
#include<string.h>

int main()
{
    printf(""%c\n"", ""abcdefgh""[4]);
    return 0;
}",Error,d,e,abcdefgh,e,"printf(""%c\n"", ""abcdefgh""[4]);
It prints the 5 character of the string ""abcdefgh"".
Hence the output is 'e'.",Strings,C Programming,1.9
505,"What will be the output of the following program in 16 bit platform assuming that 1022 is memory address of the string ""Hello1"" (in Turbo C under DOS) ?
#include<stdio.h>

int main()
{
    printf(""%u %s\n"", &""Hello1"", &""Hello2"");
    return 0;
}",1022 Hello2,Hello1 1022,Hello1 Hello2,1022 1022,Error,1022 Hello2,Strings,C Programming,2
506,Which of the following function sets first n characters of a string to a given character?,strinit(),strnset(),strset(),strcset(),strnset(),"Declaration
:
char *strnset(char *s, int ch, size_t n);
Sets the first
n
characters of
s
to
ch
#
include
<stdio.h>
#
include
<string.h>
int
main
(
void
)
{
char
*
string
=
""abcdefghijklmnopqrstuvwxyz""
;
char
letter
=
'x'
;
printf
(
""string before strnset: %s\n""
,
string
)
;
strnset
(
string
,
letter
,
13
)
;
printf
(
""string after  strnset: %s\n""
,
string
)
;
return
0
;
}
Output
:
string before strnset: abcdefghijklmnopqrstuvwxyz
string after  strnset: xxxxxxxxxxxxxnopqrstuvwxyz",Strings,C Programming,-1.4
507,"If the two strings are identical, then strcmp() function returns",-1,1,0,Yes,0,"Declaration
:
strcmp(const char *s1, const char*s2);
The
strcmp
return an
int
value that is
if s1 <  s2 returns a value < 0
if s1 == s2 returns 0
if s1 > s2 returns a value > 0",Strings,C Programming,2.1
508,How will you print \n on the screen?,"printf(""\n"");","echo ""\\n"";",printf('\n');,"printf(""\\n"");","printf(""\\n"");","The statement
printf(""\\n"");
prints '\n' on the screen.",Strings,C Programming,1.7
509,The library function used to find the last occurrence of a character in a string is,strnstr(),laststr(),strrchr(),strstr(),strrchr(),"Declaration
:
char *strrchr(const char *s, int c);
It scans a string
s
in the reverse direction, looking for a specific character
c
.
Example
:
#
include
<string.h>
#
include
<stdio.h>
int
main
(
void
)
{
char
text
[
]
=
""I learn through IndiaBIX.com""
;
char
*
ptr
,
c
=
'i'
;
ptr
=
strrchr
(
text
,
c
)
;
if
(
ptr
)
printf
(
""The position of '%c' is: %d\n""
,
c
,
ptr
-
text
)
;
else
printf
(
""The character was not found\n""
)
;
return
0
;
}
Output
:
The position of 'i' is: 19",Strings,C Programming,1.1
510,Which of the following function is used to find the first occurrence of a given string in another string?,strchr(),strrchr(),strstr(),strnset(),strstr(),"The function
strstr()
Finds the first occurrence of a substring in another string
Declaration
: char *strstr(const char *s1, const char *s2);
Return Value
:
On success,
strstr
returns a pointer to the element in
s1
where
s2
begins (points to
s2
in
s1
).
On error (if
s2
does not occur in
s1
),
strstr
returns null.
Example
:
#
include
<stdio.h>
#
include
<string.h>
int
main
(
void
)
{
char
*
str1
=
""IndiaBIX""
,
*
str2
=
""ia""
,
*
ptr
;
ptr
=
strstr
(
str1
,
str2
)
;
printf
(
""The substring is: %s\n""
,
ptr
)
;
return
0
;
}
Output
: The substring is: iaBIX",Strings,C Programming,-1.2
511,"Which of the following statements are correct about the program below?
#include<stdio.h>

int main()
{
    char str[20], *s;
    printf(""Enter a string\n"");
    scanf(""%s"", str);
    s=str;
    while(*s != '\0')
    {
        if(*s >= 97 && *s <= 122)
            *s = *s-32;
        s++;
    }
    printf(""%s"",str);
    return 0;
}",The code converts a string in to an integer,The code converts lower case character to upper case,The code converts upper case character to lower case,Error in code,The code converts lower case character to upper case,"This program converts the given string to upper case string.
Output
:
Enter a string: indiabix
INDIABIX",Strings,C Programming,-1.7
512,"Which of the following statements are correct about the below declarations?
char *p = ""Sanjay"";
char a[] = ""Sanjay"";
1: There is no difference in the declarations and both serve the same purpose.
2: p is a non-const pointer pointing to a non-const string, whereas a is a const pointer pointing to a non-const pointer.
3: The pointer p can be modified to point to another string, whereas the individual characters within array a can be changed.
4: In both cases the '\0' will be added at the end of the string ""Sanjay"".","1, 2","2, 3, 4","3, 4","2, 3","2, 3, 4","No answer description is available.
Let's discuss.",Strings,C Programming,-2.8
513,"Which of the following statements are correct ?
1: A string is a collection of characters terminated by '\0'.
2: The format specifier %s is used to print a string.
3: The length of the string can be obtained by strlen().
4: The pointer CANNOT work on string.","1, 2","1, 2, 3","2, 4","3, 4","1, 2, 3","Clearly, we know first three statements are correct, but fourth statement is wrong. because we can use pointer on strings. Eg. char *p = ""IndiaBIX"".",Strings,C Programming,-1.8
514,Which of the following statement is correct?,"strcmp(s1, s2) returns a number less than 0 if s1>s2","strcmp(s1, s2) returns a number greater than 0 if s1<s2","strcmp(s1, s2) returns 0 if s1==s2","strcmp(s1, s2) returns 1 if s1==s2","strcmp(s1, s2) returns 0 if s1==s2","The
strcmp
return an
int
value that is
if s1 <  s2 returns a value < 0
if s1 == s2 returns 0
if s1 > s2 returns a value > 0
From the above statements, that the third statement is only correct.",Strings,C Programming,-1.5
515,"Will the program compile successfully?
#include<stdio.h>

int main()
{
    char a[] = ""India"";
    char *p = ""BIX"";
    a = ""BIX"";
    p = ""India"";
    printf(""%s %s\n"", a, p);
    return 0;
}",Yes,No,Not Available,Not Available,No,"Because we can assign a new string to a pointer but not to an array
a
.",Strings,C Programming,2.8
516,"For the following statements will arr[3] and ptr[3] fetch the same character?
char arr[] = ""IndiaBIX"";
char *ptr = ""IndiaBIX"";",Yes,No,Not Available,Not Available,Yes,"Yes, both the statements prints the same character 'i'.",Strings,C Programming,1.9
517,"Is there any difference between the two statements?
char *ch = ""IndiaBIX"";
char ch[] = ""IndiaBIX"";",Yes,No,Not Available,Not Available,Yes,"In first statement the character pointer
ch
stores the address of the string ""IndiaBIX"".
The second statement specifies the space for 7 characters be allocated and that the name of location is
ch
.",Strings,C Programming,0.2
518,Which of the following function is more appropriate for reading in a multi-word string?,printf();,scanf();,gets();,puts();,gets();,"gets();
collects a string of characters terminated by a new line from the standard input stream
stdin
#
include
<stdio.h>
int
main
(
void
)
{
char
string
[
80
]
;
printf
(
""Enter a string:""
)
;
gets
(
string
)
;
printf
(
""The string input was: %s\n""
,
string
)
;
return
0
;
}
Output
:
Enter a string: IndiaBIX
The string input was: IndiaBIX",Strings,C Programming,-2.7
519,Which of the following function is correct that finds the length of a string?,"int xstrlen(char *s)
{
    int length=0;
    while(*s!='\0')
    {    length++; s++; }
    return (length);
}","int xstrlen(char s)
{
    int length=0;
    while(*s!='\0')
        length++; s++;
    return (length);
}","int xstrlen(char *s)
{
    int length=0;
    while(*s!='\0')
        length++;
    return (length);
}","int xstrlen(char *s)
{
    int length=0;
    while(*s!='\0')
        s++;
    return (length);
}","int xstrlen(char *s)
{
    int length=0;
    while(*s!='\0')
    {    length++; s++; }
    return (length);
}","Option A is the correct function to find the length of given string.
Example
:
#
include
<stdio.h>
int
xstrlen
(
char
*
s
)
{
int
length
=
0
;
while
(
*
s
!=
'\0'
)
{
length
++
;
s
++
;
}
return
(
length
)
;
}
int
main
(
)
{
char
d
[
]
=
""IndiaBIX""
;
printf
(
""Length = %d\n""
,
xstrlen
(
d
)
)
;
return
0
;
}
Output
: Length = 8",Strings,C Programming,-2.6
520,"What will be the content of 'file.c' after executing the following program?
#include<stdio.h>

int main()
{
    FILE *fp1, *fp2;
    fp1=fopen(""file.c"", ""w"");
    fp2=fopen(""file.c"", ""w"");
    fputc('A', fp1);
    fputc('B', fp2);
    fclose(fp1);
    fclose(fp2);
    return 0;
}",B,"A
B","B
B",Error in opening file 'file1.c',B,"Here
fputc('A', fp1);
stores 'A' in the
file1.c
then
fputc('B', fp2);
overwrites the contents of the
file1.c
with value 'B'. Because the
fp1
and
fp2
opens the
file1.c
in write mode.
Hence the file1.c contents is 'B'.",Input / Output,C Programming,2.6
521,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int k=1;
    printf(""%d == 1 is"" ""%s\n"", k, k==1?""TRUE"":""FALSE"");
    return 0;
}",k == 1 is TRUE,1 == 1 is TRUE,1 == 1 is FALSE,K == 1 is FALSE,1 == 1 is TRUE,"Step 1
:
int k=1;
The variable
k
is declared as an integer type and initialized to '1'.
Step 2:
printf(""%d == 1 is"" ""%s\n"", k, k==1?""TRUE"":""FALSE"");
becomes
=>
k==1?""TRUE"":""FALSE""
=>
1==1?""TRUE"":""FALSE""
=>
""TRUE""
Therefore the output of the program is 1 == 1 is TRUE",Input / Output,C Programming,1.4
522,"What will be the output of the program ?
#include<stdio.h>
char *str = ""char *str = %c%s%c; main(){ printf(str, 34, str, 34);}"";

int main()
{
    printf(str, 34, str, 34);
    return 0;
}","char *str = ""char *str = %c%s%c; main(){ printf(str, 34, str, 34);}""; main(){ printf(str, 34, str, 34);}","char *str = %c%s%c; main(){ printf(str, 34, str, 34);}",No output,Error in program,"char *str = ""char *str = %c%s%c; main(){ printf(str, 34, str, 34);}""; main(){ printf(str, 34, str, 34);}","No answer description is available.
Let's discuss.",Input / Output,C Programming,1.3
523,"If the file 'source.txt' contains a line ""Be my friend"" which of the following will be the output of below program?
#include<stdio.h>

int main()
{
    FILE *fs, *ft;
    char c[10];
    fs = fopen(""source.txt"", ""r"");
    c[0] = getc(fs);
    fseek(fs, 0, SEEK_END);
    fseek(fs, -3L, SEEK_CUR);
    fgets(c, 5, fs);
    puts(c);
    return 0;
}",friend,frien,end,Error in fseek();,end,"The file
source.txt
contains ""Be my friend"".
fseek(fs, 0, SEEK_END);
moves the file pointer to the end of the file.
fseek(fs, -3L, SEEK_CUR);
moves the file pointer backward by 3 characters.
fgets(c, 5, fs);
read the file from the current position of the file pointer.
Hence, it contains the last 3 characters of ""Be my friend"".
Therefore, it prints ""end"".",Input / Output,C Programming,-2.8
524,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    float a=3.15529;
    printf(""%2.1f\n"", a);
    return 0;
}",3,3.15,3.2,3,3.2,"float a=3.15529;
The variable
a
is declared as an
float
data type and initialized to value 3.15529;
printf(""%2.1f\n"", a);
The precision specifier tells
.1f
tells the printf function to place only one number after the
.
(dot).
Hence the output is 3.2",Input / Output,C Programming,2.9
525,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    printf(""%c\n"", ~('C'*-1));
    return 0;
}",A,B,C,D,B,"No answer description is available.
Let's discuss.",Input / Output,C Programming,2.5
526,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    FILE *fp;
    unsigned char ch;
     /* file 'abc.c' contains ""This is IndiaBIX "" */
    fp=fopen(""abc.c"", ""r"");
    if(fp == NULL)
    {
        printf(""Unable to open file"");
        exit(1);
    }
    while((ch=getc(fp)) != EOF)
        printf(""%c"", ch);

    fclose(fp);
    printf(""\n"", ch);
    return 0;
}",This is IndiaBIX,This is,Infinite loop,Error,Infinite loop,"The macro
EOF
means -1.
while((ch=getc(fp)) != EOF)
Here
getc
function read the character and convert it to an integer value and store it in the variable
ch
, but it is declared as an
unsigned char
. So the
while
loop runs infinitely.",Input / Output,C Programming,2.8
527,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    char *p;
    p=""%d\n"";
    p++;
    p++;
    printf(p-2, 23);
    return 0;
}",21,23,Error,No output,23,"No answer description is available.
Let's discuss.",Input / Output,C Programming,1.7
528,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    FILE *ptr;
    char i;
    ptr = fopen(""myfile.c"", ""r"");
    while((i=fgetc(ptr))!=NULL)
        printf(""%c"", i);
    return 0;
}","Print the contents of file ""myfile.c""","Print the contents of file ""myfile.c"" upto NULL character",Infinite loop,Error in program,Infinite loop,"The program will generate infinite loop. When an EOF is encountered
fgetc()
returns EOF. Instead of checking the condition for EOF we have checked it for NULL. so the program will generate infinite loop.",Input / Output,C Programming,1.2
529,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    printf(""%%%%\n"");
    return 0;
}",%%%%%,%%,No output,Error,%%,"No answer description is available.
Let's discuss.",Input / Output,C Programming,1
530,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int a=250;
    printf(""%1d\n"", a);
    return 0;
}",1250,2,50,250,250,"int a=250;
The variable
a
is declared as an integer type and initialized to value 250.
printf(""%1d\n"", a);
It prints the value of variable
a
.
Hence the output of the program is 250.",Input / Output,C Programming,1.8
531,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    FILE *fp;
    char ch, str[7];
    fp=fopen(""try.c"", ""r""); /* file 'try.c' contains ""This is Nagpur"" */
    fseek(fp, 9L, SEEK_CUR);
    fgets(str, 5, fp);
    puts(str);
    return 0;
}",agpur,gpur,Nagp,agpu,agpu,"No answer description is available.
Let's discuss.",Input / Output,C Programming,2.8
532,"What will be the output of the program if value 25 given to scanf()?
#include<stdio.h>

int main()
{
    int i;
    printf(""%d\n"", scanf(""%d"", &i));
    return 0;
}",25,2,1,5,1,"The
scanf
function returns the number of input is given.
printf(""%d\n"", scanf(""%d"", &i));
The
scanf
function returns the value 1(one).
Therefore, the output of the program is '1'.",Input / Output,C Programming,1.6
533,"Point out the error in the program?
#include<stdio.h>
#include<stdlib.h>

int main()
{
    unsigned char;
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    if(!fp)
    {
        printf(""Unable to open file"");
        exit(1);
    }
    fclose(fp);
    return 0;
}",Error: in unsigned char statement,Error: unknown file pointer,No error,None of above,No error,"This program tries to open the file
trial.txt
in read mode. If file not exists or unable to read it prints
""Unable to open file""
and then terminate the program.
If file exists, it simply close the file and then terminates the program.",Input / Output,C Programming,2.1
534,"Point out the error in the program?
#include<stdio.h>

int main()
{
    char ch;
    int i;
    scanf(""%c"", &i);
    scanf(""%d"", &ch);
    printf(""%c %d"", ch, i);
    return 0;
}",Error: suspicious char to in conversion in scanf(),Error: we may not get input for second scanf() statement,No error,None of above,Error: we may not get input for second scanf() statement,"No answer description is available.
Let's discuss.",Input / Output,C Programming,1.7
535,"Point out the error in the program?
#include<stdio.h>

int main()
{
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    fseek(fp, ""20"", SEEK_SET);
    fclose(fp);
    return 0;
}",Error: unrecognised Keyword SEEK_SET,Error: fseek() long offset value,No error,None of above,Error: fseek() long offset value,"Instead of ""20"" use 20L since
fseek()
need a long offset value.",Input / Output,C Programming,2.4
536,"Point out the error in the program?
#include<stdio.h>

/* Assume there is a file called 'file.c' in c:\tc directory. */
int main()
{
    FILE *fp;
    fp=fopen(""c:\tc\file.c"", ""r"");    
    if(!fp) 
      printf(""Unable to open file."");        

    fclose(fp);
    return 0;
}","No error, No output.",Program crashes at run time.,Output: Unable to open file.,None of above,Output: Unable to open file.,"The path of file name must be given as ""c:\\tc\file.c""",Input / Output,C Programming,1.9
537,"Point out the error/warning in the program?
#include<stdio.h>

int main()
{
    unsigned char ch;
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    while((ch = getc(fp))!=EOF)
        printf(""%c"", ch);
    fclose(fp);
    return 0;
}",Error: in unsigned char declaration,Error: while statement,No error,"It prints all characters in file ""trial""",Error: in unsigned char declaration,"Here, EOF is -1. As 'ch' is declared as
unsigned char
it cannot deal with any negative value.",Input / Output,C Programming,2.9
538,"Point out the error in the program?
#include<stdio.h>
#include<stdlib.h>

int main()
{
    unsigned char;
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    if(!fp)
    {
        printf(""Unable to open file"");
        exit(1);
    }
    fclose(fp);
    return 0;
}",Error: in unsigned char statement,Error: unknown file pointer,No error,None of above,No error,"This program tries to open the file
trial.txt
in read mode. If file not exists or unable to read it prints
""Unable to open file""
and then terminate the program.
If file exists, it simply close the file and then terminates the program.",Input / Output,C Programming,2.4
539,"Point out the error in the program?
#include<stdio.h>

int main()
{
    char ch;
    int i;
    scanf(""%c"", &i);
    scanf(""%d"", &ch);
    printf(""%c %d"", ch, i);
    return 0;
}",Error: suspicious char to in conversion in scanf(),Error: we may not get input for second scanf() statement,No error,None of above,Error: we may not get input for second scanf() statement,"No answer description is available.
Let's discuss.",Input / Output,C Programming,2.4
540,"Point out the error in the program?
#include<stdio.h>

int main()
{
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    fseek(fp, ""20"", SEEK_SET);
    fclose(fp);
    return 0;
}",Error: unrecognised Keyword SEEK_SET,Error: fseek() long offset value,No error,None of above,Error: fseek() long offset value,"Instead of ""20"" use 20L since
fseek()
need a long offset value.",Input / Output,C Programming,1.4
541,"Point out the error in the program?
#include<stdio.h>

/* Assume there is a file called 'file.c' in c:\tc directory. */
int main()
{
    FILE *fp;
    fp=fopen(""c:\tc\file.c"", ""r"");    
    if(!fp) 
      printf(""Unable to open file."");        

    fclose(fp);
    return 0;
}","No error, No output.",Program crashes at run time.,Output: Unable to open file.,None of above,Output: Unable to open file.,"The path of file name must be given as ""c:\\tc\file.c""",Input / Output,C Programming,2.6
542,"Point out the error/warning in the program?
#include<stdio.h>

int main()
{
    unsigned char ch;
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    while((ch = getc(fp))!=EOF)
        printf(""%c"", ch);
    fclose(fp);
    return 0;
}",Error: in unsigned char declaration,Error: while statement,No error,"It prints all characters in file ""trial""",Error: in unsigned char declaration,"Here, EOF is -1. As 'ch' is declared as
unsigned char
it cannot deal with any negative value.",Input / Output,C Programming,2.5
543,"Point out the error in the program?
#include<stdio.h>
#include<stdlib.h>

int main()
{
    unsigned char;
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    if(!fp)
    {
        printf(""Unable to open file"");
        exit(1);
    }
    fclose(fp);
    return 0;
}",Error: in unsigned char statement,Error: unknown file pointer,No error,None of above,No error,"This program tries to open the file
trial.txt
in read mode. If file not exists or unable to read it prints
""Unable to open file""
and then terminate the program.
If file exists, it simply close the file and then terminates the program.",Input / Output,C Programming,2.7
544,"Point out the error in the program?
#include<stdio.h>

int main()
{
    char ch;
    int i;
    scanf(""%c"", &i);
    scanf(""%d"", &ch);
    printf(""%c %d"", ch, i);
    return 0;
}",Error: suspicious char to in conversion in scanf(),Error: we may not get input for second scanf() statement,No error,None of above,Error: we may not get input for second scanf() statement,"No answer description is available.
Let's discuss.",Input / Output,C Programming,1.9
545,"Point out the error in the program?
#include<stdio.h>

int main()
{
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    fseek(fp, ""20"", SEEK_SET);
    fclose(fp);
    return 0;
}",Error: unrecognised Keyword SEEK_SET,Error: fseek() long offset value,No error,None of above,Error: fseek() long offset value,"Instead of ""20"" use 20L since
fseek()
need a long offset value.",Input / Output,C Programming,2
546,"Point out the error in the program?
#include<stdio.h>

/* Assume there is a file called 'file.c' in c:\tc directory. */
int main()
{
    FILE *fp;
    fp=fopen(""c:\tc\file.c"", ""r"");    
    if(!fp) 
      printf(""Unable to open file."");        

    fclose(fp);
    return 0;
}","No error, No output.",Program crashes at run time.,Output: Unable to open file.,None of above,Output: Unable to open file.,"The path of file name must be given as ""c:\\tc\file.c""",Input / Output,C Programming,1.6
547,"Point out the error/warning in the program?
#include<stdio.h>

int main()
{
    unsigned char ch;
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    while((ch = getc(fp))!=EOF)
        printf(""%c"", ch);
    fclose(fp);
    return 0;
}",Error: in unsigned char declaration,Error: while statement,No error,"It prints all characters in file ""trial""",Error: in unsigned char declaration,"Here, EOF is -1. As 'ch' is declared as
unsigned char
it cannot deal with any negative value.",Input / Output,C Programming,2.3
548,"stderr, stdin, stdout are FILE pointers",Yes,No,Not Available,Not Available,Yes,"Yes, these will be declared like
The corresponding
stdio.h
variable is FILE* stdin;
The corresponding
stdio.h
variable is FILE* stdout;
The corresponding
stdio.h
variable is FILE* stderr;",Input / Output,C Programming,2.9
549,A file written in text mode can be read back correctly in binary mode.,Yes,No,Not Available,Not Available,No,"If you write a file in text mode and then read it back in binary mode, the translations performed in text mode may result in the file's contents being misinterpreted or incorrectly read in binary mode. For consistent behavior, a file should be read and written in the same mode (both text or both binary).",Input / Output,C Programming,1.6
550,"Will the following program work?
#include<stdio.h>

int main()
{
    int n=5;
    printf(""n=%*d\n"", n, n);
    return 0;
}",Yes,No,Not Available,Not Available,Yes,It prints n=    5,Input / Output,C Programming,2.1
551,Can we specify a variable filed width in a scanf() format string?,Yes,No,Not Available,Not Available,No,"In
scanf()
a * in a format string after a % sign is used for the suppression of assignment. That is, the current input field is scanned but not stored.",Input / Output,C Programming,2
552,"In a file contains the line ""I am a boy\r\n"" then on reading this line into the array str using fgets(). What will str contain?","""I am a boy\r\n\0""","""I am a boy\r\0""","""I am a boy\n\0""","""I am a boy""","""I am a boy\n\0""","Declaration
:
char *fgets(char *s, int n, FILE *stream);
fgets
reads characters from stream into the string
s
. It stops when it reads either n - 1 characters or a newline character, whichever comes first.
Therefore, the string
str
contain ""I am a boy\n\0""",Input / Output,C Programming,2.4
553,"What is the purpose of ""rb"" in fopen() function used below in the code?
FILE *fp;
fp = fopen(""source.txt"", ""rb"");","open ""source.txt"" in binary mode for reading","open ""source.txt"" in binary mode for reading and writing","Create a new file ""source.txt"" for reading and writing",None of above,"open ""source.txt"" in binary mode for reading","The file
source.txt
will be opened in the binary mode.",Input / Output,C Programming,1.6
554,"What does fp point to in the program ?
#include<stdio.h>

int main()
{
    FILE *fp;
    fp=fopen(""trial"", ""r"");
    return 0;
}",The first character in the file,A structure which contains a char pointer which points to the first character of a file.,The name of the file.,The last character in the file.,A structure which contains a char pointer which points to the first character of a file.,"The
fp
is a structure which contains a
char
pointer which points to the first character of a file.",Input / Output,C Programming,2.1
555,"Which of the following operations can be performed on the file ""NOTES.TXT"" using the below code?
FILE *fp;
fp = fopen(""NOTES.TXT"", ""r+"");",Reading,Writing,Appending,Read and Write,Read and Write,"r+
Open an existing file for update (reading and writing).",Input / Output,C Programming,-2.2
556,"To print out a and b given below, which of the following printf() statement will you use?
#include<stdio.h>

float a=3.14;
double b=3.14;","printf(""%f %lf"", a, b);","printf(""%Lf %f"", a, b);","printf(""%Lf %Lf"", a, b);","printf(""%f %Lf"", a, b);","printf(""%f %lf"", a, b);","To print a float value,
%f
is used as format specifier.
To print a double value,
%lf
is used as format specifier.
Therefore, the answer is
printf(""%f %lf"", a, b);",Input / Output,C Programming,-1.4
557,"Which files will get closed through the fclose() in the following program?
#include<stdio.h>

int main()
{
    FILE *fs, *ft, *fp;
    fp = fopen(""A.C"", ""r"");
    fs = fopen(""B.C"", ""r"");
    ft = fopen(""C.C"", ""r"");
    fclose(fp, fs, ft);
    return 0;
}","""A.C"" ""B.C"" ""C.C""","""B.C"" ""C.C""","""A.C""",Error in fclose(),Error in fclose(),Extra parameter in call to fclose().,Input / Output,C Programming,2.7
558,"On executing the below program what will be the contents of 'target.txt' file if the source file contains a line ""To err is human""?
#include<stdio.h>

int main()
{
    int i, fss;
    char ch, source[20] = ""source.txt"", target[20]=""target.txt"", t;
    FILE *fs, *ft;
    fs = fopen(source, ""r"");
    ft = fopen(target, ""w"");
    while(1)
    {
        ch=getc(fs);
        if(ch==EOF)
            break;
        else
        {
            fseek(fs, 4L, SEEK_CUR);
            fputc(ch, ft);
        }
    }
    return 0;
}",r n,Trh,err,None of above,Trh,"The file
source.txt
is opened in read mode and
target.txt
is opened in write mode. The file
source.txt
contains ""To err is human"".
Inside the while loop,
ch=getc(fs);
The first character('T') of the
source.txt
is stored in variable
ch
and it's checked for
EOF
.
if(ch==EOF)
If
EOF
(End of file) is true, the loop breaks and program execution stops.
If not
EOF
encountered,
fseek(fs, 4L, SEEK_CUR);
the file pointer advances 4 character from the current position. Hence the file pointer is in 5th character of file
source.txt
.
fputc(ch, ft);
It writes the character 'T' stored in variable
ch
to
target.txt
.
The
while
loop runs three times and it write the character 1st and 5th and 11th characters (""Trh"") in the
target.txt
file.",Input / Output,C Programming,2
559,"To scan a and b given below, which of the following scanf() statement will you use?
#include<stdio.h>

float a;
double b;","scanf(""%f %f"", &a, &b);","scanf(""%Lf %Lf"", &a, &b);","scanf(""%f %Lf"", &a, &b);","scanf(""%f %lf"", &a, &b);","scanf(""%f %lf"", &a, &b);","To scan a float value,
%f
is used as format specifier.
To scan a double value,
%lf
is used as format specifier.
Therefore, the answer is
scanf(""%f %lf"", &a, &b);",Input / Output,C Programming,-1.7
560,Out of fgets() and gets() which function is safe to use?,gets(),fgets(),Not Available,Not Available,fgets(),"Because, In fgets() we can specify the size of the buffer into which the string supplied will be stored.",Input / Output,C Programming,2
561,"Consider the following program and what will be content of t?
#include<stdio.h>

int main()
{
    FILE *fp;
    int t;
    fp = fopen(""DUMMY.C"", ""w"");
    t = fileno(fp);
    printf(""%d\n"", t);
    return 0;
}","size of ""DUMMY.C"" file","The handle associated with ""DUMMY.C"" file",Garbage value,Error in fileno(),"The handle associated with ""DUMMY.C"" file","fp = fopen(""DUMMY.C"", ""w"");
A file DUMMY.C is opened in write mode and returns the file pointer to
fp
t = fileno(fp);
returns the handle for the
fp
stream and it stored in the variable
t
printf(""%d\n"", t);
It prints the handle number.",Input / Output,C Programming,1.7
562,"Assunming, integer is 2 byte, What will be the output of the program?
#include<stdio.h>

int main()
{
    printf(""%x\n"", -1>>1);
    return 0;
}",ffff,0fff,0,fff0,ffff,"Negative numbers are treated with 2's complement method.
1's complement: Inverting the bits ( all 1s to 0s and all 0s to 1s)
2's complement: Adding 1 to the result of 1's complement.
Binary of 1(2byte)     :  0000 0000 0000 0001
Representing -1:
1s complement of 1(2byte)    : 1111 1111 1111 1110
Adding 1 to 1's comp. result : 1111 1111 1111 1111
Right shift 1bit(-1>>1): 1111 1111 1111 1111 (carry out 1)
Hexadecimal            : f   f    f    f
(Filled with 1s in the left side in the above step)
Note:
1. Fill with 1s in the left side for right shift for negative numbers.
2. Fill with 0s in the right side for left shift for negative numbers.
3. Fill with 0s in the left side for right shift for positive numbers.
4. Fill with 0s in the right side for left shift for positive numbers.",Bitwise Operators,C Programming,1.9
563,"If an unsigned int is 2 bytes wide then, What will be the output of the program ?
#include<stdio.h>

int main()
{
    unsigned int m = 32;
    printf(""%x\n"", ~m);
    return 0;
}",ffff,0,ffdf,ddfd,ffdf,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1
564,"Assuming a integer 2-bytes, What will be the output of the program?
#include<stdio.h>

int main()
{
    printf(""%x\n"", -1<<3);
    return 0;
}",ffff,fff8,0,-1,fff8,"The system will treat negative numbers in 2's complement method.
Example:
Assume the size of int is 2-bytes(16 bits). The integer value 1 is represented as given below:
Binary of 1: 00000000 00000001 (this is for positive value of 1)
1's complement of binary 1: 11111111 11111110
2's complement of binary 1: 11111111 11111111
Thy system will store '11111111 11111111' in memory to represent '-1'.
If we do left shift (3 bits) on 11111111 11111111 it will become as given below:
11111111 11111111 ---(left shift 3 times)---> 11111111 11111000.
So, 11111111 11111000 ---(binary to hex)--->
FF F8
. (Required Answer)
Note:
How is the negative number obtained from 2's complement value?
As stated above, -1 is represented as '11111111 11111111' in memory.
So, the system will take 2's complement of  '11111111 11111111' to the get the original negative value back.
Example:
Bit Representation of -1: 11111111 11111111
Since the left most bit is 1, it is a negative number. Then the value is
1's complement: 00000000 00000000
2's complement: 00000000 00000001 (Add 1 to the above result)
Therefore, '00000000 00000001' = 1 and the sign is negative.
Hence the value is -1.",Bitwise Operators,C Programming,2.6
565,"If an unsigned int is 2 bytes wide then, What will be the output of the program ?
#include<stdio.h>

int main()
{
    unsigned int a=0xffff;
    ~a;
    printf(""%x\n"", a);
    return 0;
}",ffff,0,00ff,ddfd,ffff,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.9
566,"What will be the output of the program?
#include<stdio.h>

int main()
{
    unsigned char i = 0x80;
    printf(""%d\n"", i<<1);
    return 0;
}",0,256,100,80,256,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.5
567,"What will be the output of the program?
#include<stdio.h>

int main()
{
    printf(""%d >> %d %d >> %d\n"", 4 >> 1, 8 >> 1);
    return 0;
}",4 1 8 1,4 >> 1 8 >> 1,2 >> 4 Garbage value >> Garbage value,2 4,2 >> 4 Garbage value >> Garbage value,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.1
568,"What will be the output of the program?
#include<stdio.h>

int main()
{
    char c=48;
    int i, mask=01;
    for(i=1; i<=5; i++)
    {
        printf(""%c"", c|mask);
        mask = mask<<1;
    }
    return 0;
}",12400,12480,12500,12556,12480,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.7
569,"What will be the output of the program?
#define P printf(""%d\n"", -1^~0);
#define M(P) int main()\
             {\
                P\
                return 0;\
             }
M(P)",1,0,-1,2,0,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.1
570,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int i=32, j=0x20, k, l, m;
    k=i|j;
    l=i&j;
    m=k^l;
    printf(""%d, %d, %d, %d, %d\n"", i, j, k, l, m);
    return 0;
}","0, 0, 0, 0, 0","0, 32, 32, 32, 32","32, 32, 32, 32, 0","32, 32, 32, 32, 32","32, 32, 32, 32, 0","No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.3
571,"What will be the output of the program?
#include<stdio.h>

int main()
{
    printf(""%d %d\n"", 32<<1, 32<<0);
    printf(""%d %d\n"", 32<<-1, 32<<-0);
    printf(""%d %d\n"", 32>>1, 32>>0);
    printf(""%d %d\n"", 32>>-1, 32>>-0);
    return 0;
}",Garbage values,"64 32
0 32
16 32
0 32",All zeros,"8 0
0 0
32 0
0 16","64 32
0 32
16 32
0 32","No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.4
572,"What will be the output of the program?
#include<stdio.h>

int main()
{
    unsigned int res;
    res = (64 >>(2+1-2)) & (~(1<<2));
    printf(""%d\n"", res);
    return 0;
}",32,64,0,128,32,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.8
573,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int i=4, j=8;
    printf(""%d, %d, %d\n"", i|j&j|i, i|j&&j|i, i^j);
    return 0;
}","4, 8, 0","1, 2, 1","12, 1, 12","0, 0, 0","12, 1, 12","No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.9
574,"Which of the following statements are correct about the program?
#include<stdio.h>

int main()
{
    unsigned int num;
    int i;
    scanf(""%u"", &num);
    for(i=0; i<16; i++)
    {
        printf(""%d"", (num<<i & 1<<15)?1:0);
    }
    return 0;
}",It prints all even bits from num,It prints all odd bits from num,It prints binary equivalent num,Error,It prints binary equivalent num,"If we give input 4, it will print 00000000 00000100 ;
If we give input 3, it will print 00000000 00000011 ;
If we give input 511, it will print 00000001 11111111 ;",Bitwise Operators,C Programming,-2
575,"Which of the following statements are correct about the program?
#include<stdio.h>

int main()
{
    unsigned int num;
    int c=0;
    scanf(""%u"", &num);
    for(;num;num>>=1)
    {
        if(num & 1)
            c++;
    }
    printf(""%d"", c);
    return 0;
}",It counts the number of bits that are ON (1) in the number num.,It counts the number of bits that are OFF (0) in the number num.,It sets all bits in the number num to 1,Error,It counts the number of bits that are ON (1) in the number num.,"If we give input 4, it will print 1.
Binary-4 == 00000000 00000100 ; Total number of bits = 1.
If we give input 3, it will print 2.
Binary-3 == 00000000 00000011 ; Total number of bits = 2.
If we give input 511, it will print 9.
Binary-511 == 00000001 11111111 ; Total number of bits = 9.",Bitwise Operators,C Programming,-1.2
576,"Which of the following statements are correct about the program?
#include<stdio.h>
char *fun(unsigned int num, int base);

int main()
{
    char *s;
    s=fun(128, 2);
    s=fun(128, 16);
    printf(""%s\n"",s);
    return 0;
}
char *fun(unsigned int num, int base)
{
    static char buff[33];
    char *ptr = &buff[sizeof(buff)-1];
    *ptr = '\0';
    do
    {
        *--ptr = ""0123456789abcdef""[num %base];
        num /=base;
    }while(num!=0);
    return ptr;
}",It converts a number to a given base.,It converts a number to its equivalent binary.,It converts a number to its equivalent hexadecimal.,It converts a number to its equivalent octal.,It converts a number to a given base.,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,-2.2
577,"Which of the following statements are correct about the program?
#include<stdio.h>

int main()
{
    unsigned int m[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    unsigned char n, i;
    scanf(""%d"", &n);
    for(i=0; i<=7; i++)
    {
        if(n & m[i])
            printf(""yes"");
    }
    return 0;
}",It will put OFF all bits that are ON in the number n,It will test whether the individual bits of n are ON or OFF,It will put ON all bits that are OFF in the number n,It will report compilation errors in the if statement.,It will test whether the individual bits of n are ON or OFF,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,-1.9
578,Left shifting a number by 1 is always equivalent to multiplying it by 2.,TRUE,FALSE,Not Available,Not Available,TRUE,"0001 => 1
0010 => 2
0100 => 4
1000 => 8",Bitwise Operators,C Programming,2.5
579,In the statement expression1 >> expression2. if expression1 is a signed integer with its leftmost bit set to 1 then on right shifting it the result of the statement will vary from computer to computer,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.5
580,Bitwise & and | are unary operators,TRUE,FALSE,Not Available,Not Available,FALSE,Bitwise & and | are not unary operators only bitwise ! is unary operator.,Bitwise Operators,C Programming,1
581,Bitwise & can be used to check if more than one bit in a number is on.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.5
582,Bitwise & can be used to check if a bit in number is set or not.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.9
583,Bitwise & can be used to divide a number by powers of 2,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.7
584,Left shifting an unsigned int or char by 1 is always equivalent to multiplying it by 2.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2
585,"On left shifting, the bits from the left are rotated and brought to the right and accommodated where there is empty space on the right?",TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.4
586,Bitwise & can be used in conjunction with ~ operator to turn off 1 or more bits in a number.,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.5
587,Bitwise can be used to reverse a sign of a number.,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.3
588,Bitwise can be used to generate a random number.,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.6
589,Bitwise | can be used to multiply a number by powers of 2.,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.2
590,Bitwise | can be used to set multiple bits in number.,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.7
591,Bitwise can be used to perform addition and subtraction.,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.2
592,Bitwise | can be used to set a bit in number.,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.1
593,In which numbering system can the binary number 1011011111000101 be easily converted to?,Decimal system,Hexadecimal system,Octal system,No need to convert,Hexadecimal system,"Hexadecimal system is better, because each 4-digit binary represents one Hexadecimal digit.",Bitwise Operators,C Programming,2.7
594,Which bitwise operator is suitable for turning off a particular bit in a number?,&& operator,& operator,|| operator,! operator,& operator,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,2.5
595,Which bitwise operator is suitable for turning on a particular bit in a number?,&& operator,& operator,|| operator,| operator,| operator,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.5
596,Which bitwise operator is suitable for checking whether a particular bit is on or off?,&& operator,& operator,|| operator,! operator,& operator,"No answer description is available.
Let's discuss.",Bitwise Operators,C Programming,1.8
597,"Point out the error in the program.
#include<stdio.h>
#define MAX 128

int main()
{
    char mybuf[] = ""India"";
    char yourbuf[] = ""BIX"";
    char *const ptr = mybuf;
    *ptr = 'a';
    ptr = yourbuf;
    return 0;
}",Error: unknown pointer conversion,Error: cannot convert ptr const value,No error,None of above,Error: cannot convert ptr const value,"Step 1
:
char mybuf[] = ""India"";
The variable
mybuff
is declared as an array of characters and initialized with string ""India"".
Step 2
:
char yourbuf[] = ""BIX"";
The variable
yourbuf
is declared as an array of characters and initialized with string ""BIX"".
Step 3
:
char *const ptr = mybuf;
Here,
ptr
is a constant pointer, which points at a
char
.
The value at which
ptr
it points is not a constant; it will not be an error to modify the pointed character; There will be an error only to modify the pointer itself.
Step 4
:
*ptr = 'a';
The value of
ptr
is assigned to 'a'.
Step 5
:
ptr = yourbuf;
Here, we are changing the pointer itself, this will result in the error ""cannot modify a
const
object"".",Const,C Programming,2.6
598,"Point out the error in the program (in Turbo-C).
#include<stdio.h>
#define MAX 128

int main()
{
    const int max=128;
    char array[max];
    char string[MAX];
    array[0] = string[0] = 'A';
    printf(""%c %c\n"", array[0], string[0]);
    return 0;
}",Error: unknown max in declaration/Constant expression required,Error: invalid array string,None of above,No error. It prints A A,Error: unknown max in declaration/Constant expression required,"Step 1
: A macro named
MAX
is defined with value 128
Step 2
:
const int max=128;
The constant variable
max
is declared as an integer data type and it is initialized with value 128.
Step 3
:
char array[max];
This statement reports an error ""constant expression required"". Because, we cannot use variable to define the size of array.
To avoid this error, we have to declare the size of an array as static. Eg.
char array[10];
or use macro
char array[MAX];
Note: The above program will print A A as output in Unix platform.",Const,C Programming,1.1
599,"Point out the error in the program.
#include<stdio.h>
#include<stdlib.h>

union employee
{
    char name[15];
    int age;
    float salary;
};
const union employee e1;

int main()
{
    strcpy(e1.name, ""K"");
    printf(""%s"", e1.name);    
    e1.age=85;
    printf(""%d"", e1.age);
    printf(""%f"", e1.salary);
    return 0;
}",Error: RValue required,Error: cannot modify const object,Error: LValue required in strcpy,No error,Error: cannot modify const object,"No answer description is available.
Let's discuss.",Const,C Programming,1.2
600,"Point out the error in the program.
#include<stdio.h>
const char *fun();

int main()
{
    char *ptr = fun();
    return 0;
}
const char *fun()
{
    return ""Hello"";
}",Error: Lvalue required,Error: cannot convert 'const char *' to 'char *'.,No error and No output,None of above,No error and No output,"No answer description is available.
Let's discuss.",Const,C Programming,2.7
601,"Point out the error in the program.
#include<stdio.h>

int main()
{
    const int x;
    x=128;
    printf(""%d\n"", x);
    return 0;
}",Error: unknown data type const int,Error: const variable have been initialised when declared.,Error: stack overflow in x,No error,Error: const variable have been initialised when declared.,"A
const
variable has to be initialized when it is declared. later assigning the value to the const variable will result in an error ""Cannot modify the const object"".
Hence Option B is correct",Const,C Programming,1.9
602,"Point out the error in the program.
#include<stdio.h>

int main()
{
    const int k=7;
    int *const q=&k;
    printf(""%d"", *q);
    return 0;
}",Error: RValue required,Error: Lvalue required,Error: cannot convert from 'const int *' to 'int *const',No error,No error,No error. This will produce 7 as output.,Const,C Programming,1.4
603,"Point out the error in the program.
#include<stdio.h>
#define MAX 128

int main()
{
    char mybuf[] = ""India"";
    char yourbuf[] = ""BIX"";
    char const *ptr = mybuf;
    *ptr = 'a';
    ptr = yourbuf;
    return 0;
}",Error: cannot convert ptr const value,Error: unknown pointer conversion,No error,None of above,Error: cannot convert ptr const value,"Step 1
:
char mybuf[] = ""India"";
The variable
mybuff
is declared as an array of characters and initialized with string ""India"".
Step 2
:
char yourbuf[] = ""BIX"";
The variable
yourbuf
is declared as an array of characters and initialized with string ""BIX"".
Step 3
:
char const *ptr = mybuf;
Here,
ptr
is a constant pointer, which points at a
char
.
The value at which
ptr
it points is a constant; it will be an error to modify the pointed character; There will not be any error to modify the pointer itself.
Step 4
:
*ptr = 'a';
Here, we are changing the value of
ptr
, this will result in the error ""cannot modify a
const
object"".",Const,C Programming,1.6
604,"Point out the error in the program.
#include<stdio.h>
const char *fun();

int main()
{
    *fun() = 'A';
    return 0;
}
const char *fun()
{
    return ""Hello"";
}",Error: RValue required,Error: Lvalue required,Error: fun() returns a pointer const character which cannot be modified,No error,Error: fun() returns a pointer const character which cannot be modified,"No answer description is available.
Let's discuss.",Const,C Programming,2.2
605,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int y=128;
    const int x=y;
    printf(""%d\n"", x);
    return 0;
}",128,Garbage value,Error,0,128,"Step 1
:
int y=128;
The variable
'y'
is declared as an integer type and initialized to value ""128"".
Step 2
:
const int x=y;
The constant variable
'x'
is declared as an integer and it is initialized with the variable
'y'
value.
Step 3
:
printf(""%d\n"", x);
It prints the value of variable
'x'
.
Hence the output of the program is ""128""",Const,C Programming,2.5
606,"What will be the output of the program?
#include<stdio.h>
#include<stdlib.h>

union employee
{
    char name[15];
    int age;
    float salary;
};
const union employee e1;

int main()
{
    strcpy(e1.name, ""K"");
    printf(""%s %d %f"", e1.name, e1.age, e1.salary);
    return 0;
}",Error: RValue required,Error: cannot convert from 'const int *' to 'int *const',Error: LValue required in strcpy,No error,No error,"The output will be (in 16-bit platform DOS):
K 75 0.000000",Const,C Programming,1
607,"What will be the output of the program?
#include<stdio.h>
int fun(int **ptr);

int main()
{
    int i=10;
    const int *ptr = &i;
    fun(&ptr);
    return 0;
}
int fun(int **ptr)
{
    int j = 223;
    int *temp = &j;
    printf(""Before changing ptr = %5x\n"", *ptr);
    const *ptr = temp;
    printf(""After changing ptr = %5x\n"", *ptr);
    return 0;
}","Address of i
Address of j","10
223",Error: cannot convert parameter 1 from 'const int **' to 'int **',Garbage value,Error: cannot convert parameter 1 from 'const int **' to 'int **',"No answer description is available.
Let's discuss.",Const,C Programming,2.4
608,"What will be the output of the program?
#include<stdio.h>

int main()
{
    const int x=5;
    const int *ptrx;
    ptrx = &x;
    *ptrx = 10;
    printf(""%d\n"", x);
    return 0;
}",5,10,Error,Garbage value,Error,"Step 1
:
const int x=5;
The constant variable
x
is declared as an integer data type and initialized with value '5'.
Step 2
:
const int *ptrx;
The constant variable
ptrx
is declared as an integer pointer.
Step 3
:
ptrx = &x;
The address of the constant variable
x
is assigned to integer pointer variable ptrx.
Step 4
:
*ptrx = 10;
Here we are indirectly trying to change the value of the constant vaiable
x
. This will result in an error.
To change the value of
const
variable
x
we have to use
*(int *)&x = 10;",Const,C Programming,1.8
609,"What will be the output of the program in TurboC?
#include<stdio.h>
int fun(int **ptr);

int main()
{
    int i=10, j=20;
    const int *ptr = &i;
    printf("" i = %5X"", ptr);
    printf("" ptr = %d"", *ptr);
    ptr = &j;
    printf("" j = %5X"", ptr);
    printf("" ptr = %d"", *ptr);
    return 0;
}",i= FFE2 ptr=12 j=FFE4 ptr=24,i= FFE4 ptr=10 j=FFE2 ptr=20,i= FFE0 ptr=20 j=FFE1 ptr=30,Garbage value,i= FFE4 ptr=10 j=FFE2 ptr=20,"No answer description is available.
Let's discuss.",Const,C Programming,1.2
610,"What will be the output of the program?
#include<stdio.h>

int main()
{
    const char *s = """";
    char str[] = ""Hello"";
    s = str;
    while(*s)
        printf(""%c"", *s++);

    return 0;
}",Error,H,Hello,Hel,Hello,"Step 1
:
const char *s = """";
The constant variable
s
is declared as an pointer to an array of characters type and initialized with an empty string.
Step 2
:
char str[] = ""Hello"";
The variable
str
is declared as an array of charactrers type and initialized with a string ""Hello"".
Step 3
:
s = str;
The  value of the variable
str
is assigned to the variable
s
. Therefore
str
contains the text ""Hello"".
Step 4
:
while(*s){ printf(""%c"", *s++); }
Here the while loop got executed untill the value of the variable
s
is available and it prints the each character of the variable
s
.
Hence the output of the program is ""Hello"".",Const,C Programming,1.7
611,"What will be the output of the program?
#include<stdio.h>
int get();

int main()
{
    const int x = get();
    printf(""%d"", x);
    return 0;
}
int get()
{
    return 20;
}",Garbage value,Error,20,0,20,"Step 1
:
int get();
This is the function prototype for the funtion
get()
, it tells the compiler returns an integer value and accept no parameters.
Step 2
:
const int x = get();
The constant variable
x
is declared as an integer data type and initialized with the value ""20"".
The function
get()
returns the value ""20"".
Step 3
:
printf(""%d"", x);
It prints the value of the variable
x
.
Hence the output of the program is ""20"".",Const,C Programming,1.7
612,"What will be the output of the program (in Turbo C)?
#include<stdio.h>

int fun(int *f)
{
    *f = 10;
    return 0;
}
int main()
{
    const int arr[5] = {1, 2, 3, 4, 5};
    printf(""Before modification arr[3] = %d"", arr[3]);
    fun(&arr[3]);
    printf(""\nAfter modification arr[3] = %d"", arr[3]);
    return 0;
}","Before modification arr[3] = 4
After modification arr[3] = 10",Error: cannot convert parameter 1 from const int * to int *,Error: Invalid parameter,"Before modification arr[3] = 4
After modification arr[3] = 4","Before modification arr[3] = 4
After modification arr[3] = 10","Step 1
:
const int arr[5] = {1, 2, 3, 4, 5};
The constant variable
arr
is declared as an integer array and initialized to
arr[0] = 1, arr[1] = 2, arr[2] = 3, arr[3] = 4, arr[4] = 5
Step 2
:
printf(""Before modification arr[3] = %d"", arr[3]);
It prints the value of
arr[3]
(ie. 4).
Step 3
:
fun(&arr[3]);
The memory location of the
arr[3]
is passed to
fun()
and
arr[3]
value is modified to 10.
A
const
variable can be indirectly modified by a pointer.
Step 4
:
printf(""After modification arr[3] = %d"", arr[3]);
It prints the value of
arr[3]
(ie. 10).
Hence the output of the program is
Before modification arr[3] = 4
After modification arr[3] = 10",Const,C Programming,1.4
613,"What will be the output of the program?
#include<stdio.h>

int main()
{
    const int i=0;
    printf(""%d\n"", i++);
    return 0;
}",10,11,No output,Error: ++needs a value,Error: ++needs a value,"This program will show an error ""Cannot modify a const object"".
Step 1
:
const int i=0;
The constant variable
'i'
is declared as an integer and initialized with value of '0'(zero).
Step 2
:
printf(""%d\n"", i++);
Here the variable
'i'
is increemented by 1(one). This will create an error ""Cannot modify a const object"".
Because, we cannot modify a
const
variable.",Const,C Programming,1.4
614,"What will be the output of the program?
#include<stdio.h>

int main()
{
    const c = -11;
    const int d = 34;
    printf(""%d, %d\n"", c, d);
    return 0;
}",Error,"-11, 34","11, 34",None of these,"-11, 34","Step 1
:
const c = -11;
The constant variable
'c'
is declared and initialized to value ""-11"".
Step 2
:
const int d = 34;
The constant variable
'd'
is declared as an integer and initialized to value '34'.
Step 3
:
printf(""%d, %d\n"", c, d);
The value of the variable
'c'
and
'd'
are printed.
Hence the output of the program is -11, 34",Const,C Programming,2.3
615,"Point out the error in the following program.
#include<stdio.h>
#include<stdarg.h>
fun(...);

int main()
{
    fun(3, 7, -11.2, 0.66);
    return 0;
}
fun(...)
{
    va_list ptr;
    int num;
    va_start(ptr, n);
    num = va_arg(ptr, int);
    printf(""%d"", num);
}",Error: fun() needs return type,Error: ptr Lvalue required,Error: Invalid declaration of fun(...),No error,Error: Invalid declaration of fun(...),"There is no fixed argument in the definition
fun()",Variable Number of Arguments,C Programming,3
616,"Point out the error if any in the following program (Turbo C).
#include<stdio.h>
#include<stdarg.h>
void display(int num, ...);

int main()
{
    display(4, 'A', 'a', 'b', 'c');
    return 0;
}
void display(int num, ...)
{
    char c; int j;
    va_list ptr;
    va_start(ptr, num);
    for(j=1; j<=num; j++)
    {
        c = va_arg(ptr, char);
        printf(""%c"", c);
    }
}",Error: unknown variable ptr,Error: Lvalue required for parameter,No error and print A a b c,No error and print 4 A a b c,No error and print A a b c,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.6
617,"Point out the error in the following program.
#include<stdio.h>
#include<stdarg.h>
void varfun(int n, ...);

int main()
{
    varfun(3, 7, -11, 0);
    return 0;
}
void varfun(int n, ...)
{
    va_list ptr;
    int num;
    num = va_arg(ptr, int);
    printf(""%d"", num);
}",Error: ptr has to be set at begining,Error: ptr must be type of va_list,Error: invalid access to list member,No error,Error: ptr has to be set at begining,"Using
va_start(ptr, int);",Variable Number of Arguments,C Programming,2.6
618,"Point out the error in the following program.
#include<stdio.h>
#include<stdarg.h>

int main()
{
    void display(char *s, int num1, int num2, ...);
    display(""Hello"", 4, 2, 12.5, 13.5, 14.5, 44.0);
    return 0;
}
void display(char *s, int num1, int num2, ...)
{
    double c;
    char s;
    va_list ptr;
    va_start(ptr, s);
    c = va_arg(ptr, double);
    printf(""%f"", c);
}",Error: invalid arguments in function display(),Error: too many parameters,"Error: in va_start(ptr, s);",No error,"Error: in va_start(ptr, s);","We should have use
va_start(ptr, num2);",Variable Number of Arguments,C Programming,1.7
619,"Point out the error in the following program.
#include<stdio.h>
#include<stdarg.h>

int main()
{
    void display(int num, ...);
    display(4, 12.5, 13.5, 14.5, 44.3);
    return 0;
}
void display(int num, ...)
{
    float c; int j;
    va_list ptr;
    va_start(ptr, num);
    for(j=1; j<=num; j++)
    {
        c = va_arg(ptr, float);
        printf(""%f"", c);
    }
}",Error: invalid va_list declaration,Error: var c data type mismatch,No error,No error and Nothing will print,Error: var c data type mismatch,"Use
double
instead of
float
in
float c;",Variable Number of Arguments,C Programming,1.1
620,"Point out the error in the following program.
#include<stdio.h>
#include<stdarg.h>
void display(char *s, ...);
void show(char *t, ...);

int main()
{
    display(""Hello"", 4, 12, 13, 14, 44);
    return 0;
}
void display(char *s, ...)
{
    show(s, ...);
}
void show(char *t, ...)
{
    int a;
    va_list ptr;
    va_start(ptr, s);
    a = va_arg(ptr, int);
    printf(""%f"", a);
}",Error: invalid function display() call,Error: invalid function show() call,No error,Error: Rvalue required for t,Error: invalid function show() call,"The call to
show()
is improper. This is not the way to pass variable argument list to a function.",Variable Number of Arguments,C Programming,1.2
621,"Point out the error in the following program.
#include<stdio.h>
#include<stdarg.h>
void varfun(int n, ...);

int main()
{
    varfun(3, 7, -11.2, 0.66);
    return 0;
}
void varfun(int n, ...)
{
    float *ptr;
    int num;
    va_start(ptr, n);
    num = va_arg(ptr, int);
    printf(""%d"", num);
}",Error: too many parameters,Error: invalid access to list member,Error: ptr must be type of va_list,No error,Error: ptr must be type of va_list,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.7
622,The macro va_arg is used to extract an argument from the variable argument list and advance the pointer to the next argument.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.3
623,In a function that receives variable number of arguments the fixed arguments passed to the function can be at the end of argument list.,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.2
624,A function that receives variable number of arguments should use va_arg() to extract arguments from the variable argument list.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.7
625,For a function receives variable number of arguments it is necessary that the function should receive at least one fixed argument.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.2
626,A function that receives variable number of arguments should use va_arg() to extract the last argument from the variable argument list.,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.5
627,va_list is an array that holds information needed by va_arg and va_end,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.9
628,The macro va_start is used to initialise a pointer to the beginning of the list of fixed arguments.,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.1
629,Can we pass a variable argument list to a function at run-time?,Yes,No,Not Available,Not Available,No,Every actual argument list must be known at compile time. In that sense it is not truly a variable argument list.,Variable Number of Arguments,C Programming,2.4
630,While defining a variable argument list function we drop the ellipsis(...)?,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.7
631,Is it necessary that in a function which accepts variable argument list there should be at least be one fixed argument?,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.5
632,Can we write a function that takes a variable argument list and passes the list to another function?,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.2
633,"Can the fixed arguments passed to the function that accepts variable argument list, occur at the end?",Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.4
634,It is necessary to call the macro va_end if va_start is called in the function.,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.6
635,The macro va_arg is used to extract an argument from the fixed micro argument list and advance the pointer to the next argument.,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2
636,"What will be the output of the program?
#include<stdio.h>
#include<stdarg.h>
void fun(char *msg, ...);

int main()
{
    fun(""IndiaBIX"", 1, 4, 7, 11, 0);
    return 0;
}
void fun(char *msg, ...)
{
    va_list ptr;
    int num;
    va_start(ptr, msg);
    num = va_arg(ptr, int);
    num = va_arg(ptr, int);
    printf(""%d"", num);
}",IndiaBIX 1 7 11 0,1,4,7,4,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.4
637,"What will be the output of the program?
#include<stdio.h>
#include<stdarg.h>
void fun1(char, int, int *, float *, char *);
void fun2(char ch, ...);
void (*p1)(char, int, int *, float *, char *);
void (*p2)(char ch, ...);

int main()
{
    char ch='A'; int i=10;
    float f=3.14; char *p=""Hello"";
    p1=fun1;
    p2=fun2;
    (*p1)(ch, i, &i, &f, p);
    (*p2)(ch, i, &i, &f, p);
    return 0;
}
void fun1(char ch, int i, int *pi, float *pf, char *p)
{
    printf(""%c %d %d %f %s \n"", ch, i, *pi, *pf, p);
}
void fun2(char ch, ...)
{
    int i, *pi; float *pf; char *p;
    va_list list;
    printf(""%c "", ch);
    va_start(list, ch);
    i = va_arg(list, int);
    printf(""%d "", i);
    
    pi = va_arg(list, int*);
    printf(""%d "", *pi);
    pf = va_arg(list, float*);
    printf(""%f "", *pf);
    p = va_arg(list, char *);
    printf(""%s"", p);
}","A 10 3.14
A 10 3.14","A 10 10 3.140000 Hello
A 10 10 3.140000 Hello","A 10 Hello
A 10 Hello",Error,"A 10 10 3.140000 Hello
A 10 10 3.140000 Hello","No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.2
638,"What will be the output of the program?
#include<stdio.h>
#include<stdarg.h>
void dumplist(int, ...);

int main()
{
    dumplist(2, 4, 8);
    dumplist(3, 6, 9, 7);
    return 0;
}
void dumplist(int n, ...)
{
    va_list p; int i;
    va_start(p, n);

    while(n-->0)
    {
        i = va_arg(p, int);
        printf(""%d"", i);
    }
    va_end(p);
    printf(""\n"");
}","2 4
3 6","2 4 8
3, 6, 9, 7","4 8
6 9 7","1 1 1
1 1 1 1","4 8
6 9 7","No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,2.2
639,"What will be the output of the program?
#include<stdio.h>
#include<stdarg.h>
void display(int num, ...);

int main()
{
    display(4, 'A', 'B', 'C', 'D');
    return 0;
}
void display(int num, ...)
{
    char c, c1; int j;
    va_list ptr, ptr1;
    va_start(ptr, num);
    va_start(ptr1, num);
    for(j=1; j<=num; j++)
    {
        c = va_arg(ptr, int);
        printf(""%c"", c);
        c1 = va_arg(ptr1, int);
        printf(""%d\n"", c1);
    }
}","A, A
B, B
C, C
D, D","A, a
B, b
C, c
D, d","A, 65
B, 66
C, 67
D, 68","A, 0
B, 0
C, 0
C, 0","A, 65
B, 66
C, 67
D, 68","No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,3
640,"What will be the output of the program?
#include<stdio.h>
#include<stdarg.h>
void fun1(int num, ...);
void fun2(int num, ...);

int main()
{
    fun1(1, ""Apple"", ""Boys"", ""Cats"", ""Dogs"");
    fun2(2, 12, 13, 14);
    return 0;
}
void fun1(int num, ...)
{
    char *str;
    va_list ptr;
    va_start(ptr, num);
    str = va_arg(ptr, char *);
    printf(""%s "", str);
}
void fun2(int num, ...)
{
    va_list ptr;
    va_start(ptr, num);
    num = va_arg(ptr, int);
    printf(""%d"", num);
}",Dogs 12,Cats 14,Boys 13,Apple 12,Apple 12,"No answer description is available.
Let's discuss.",Variable Number of Arguments,C Programming,1.6
641,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int i;
    i = printf(""How r u\n"");
    i = printf(""%d\n"", i);
    printf(""%d\n"", i);
    return 0;
}","How r u
7
2","How r u
8
2","How r u
1
1",Error: cannot assign printf to variable,"How r u
8
2","In the program,
printf()
returns the number of charecters printed on the console
i = printf(""How r u\n"");
This line prints ""How r u"" with a new line character and returns the length of string printed then assign it to
variable i
.
So
i
= 8 (length of '\n' is 1).
i = printf(""%d\n"", i);
In the previous step the value of
i
is 8. So it prints ""8"" with a new line character and returns the length of string printed then assign it to
variable i
. So
i
= 2 (length of '\n' is 1).
printf(""%d\n"", i);
In the previous step the value of
i
is 2. So it prints ""2"".",Library Functions,C Programming,1.8
642,"What will be the output of the program?
#include<stdio.h>
#include<math.h>

int main()
{
    float i = 2.5;
    printf(""%f, %d"", floor(i), ceil(i));
    return 0;
}","2, 3","2.000000, 3","2.000000, 0","2, 0","2.000000, 0","Both
ceil()
and
floor()
return the integer found as a
double
.
floor(2.5)
returns the largest integral value(round down) that is not greater than 2.5. So output is 2.000000.
ceil(2.5)
returns 3, while converting the
double
to
int
it returns '0'.
So, the output is '2.000000, 0'.",Library Functions,C Programming,2.2
643,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int i;
    i = scanf(""%d %d"", &i, &i);
    printf(""%d\n"", i);
    return 0;
}",1,2,Garbage value,Error: cannot assign scanf to variable,2,"scanf()
returns the number of variables to which you are provding the input.
i = scanf(""%d %d"", &i, &i);
Here Scanf() returns 2. So
i
= 2.
printf(""%d\n"", i);
Here it prints 2.",Library Functions,C Programming,1.1
644,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int i;
    char c;
    for(i=1; i<=5; i++)
    {
        scanf(""%c"", &c); /* given input is 'b' */
        ungetc(c, stdout);
        printf(""%c"", c);
        ungetc(c, stdin);
    }
    return 0;
}",bbbb,bbbbb,b,Error in ungetc statement.,b,"The
ungetc()
function pushes the character c back onto the named input stream, which must be open for reading.
This character will be returned on the next call to getc or fread for that
stream.
One character can be pushed back in all situations.
A second call to ungetc without a call to getc will force the previous
character to be forgotten.",Library Functions,C Programming,2.8
645,"What will be the output of the program?
#include<stdio.h>
#include<stdlib.h>

int main()
{
    char *i = ""55.555"";
    int result1 = 10;
    float result2 = 11.111;
    result1 = result1+atoi(i);
    result2 = result2+atof(i);
    printf(""%d, %f"", result1, result2);
    return 0;
}","55, 55.555","66, 66.666600","65, 66.666000","55, 55","65, 66.666000","Function
atoi()
converts the string to integer.
Function
atof()
converts the string to float.
result1 = result1+atoi(i);
Here result1 = 10 + atoi(55.555);
result1 = 10 + 55;
result1 = 65;
result2 = result2+atof(i);
Here result2 = 11.111 + atof(55.555);
result2 = 11.111 + 55.555000;
result2 = 66.666000;
So the output is ""65, 66.666000"" .",Library Functions,C Programming,1.6
646,"What will be the output of the program?
#include<stdio.h>
#include<string.h>

int main()
{
    char dest[] = {97, 97, 0};
    char src[] = ""aaa"";
    int i;
    if((i = memcmp(dest, src, 2))==0)
        printf(""Got it"");
    else
        printf(""Missed"");
    return 0;
}",Missed,Got it,Error in memcmp statement,None of above,Got it,"memcmp
compares the first 2 bytes of the blocks
dest
and
src
as unsigned chars.                  So, the ASCII value of 97 is 'a'.
if((i = memcmp(dest, src, 2))==0)
When comparing the array
dest
and
src
as unsigned chars, the first 2 bytes are same in both variables.so
memcmp
returns '0'.
Then, the
if(0=0)
condition is satisfied. Hence the output is ""Got it"".",Library Functions,C Programming,1.4
647,What will function gcvt() do?,Convert vector to integer value,Convert floating-point number to a string,Convert 2D array in to 1D array.,Covert multi Dimensional array to 1D array,Convert floating-point number to a string,"The
gcvt()
function converts a floating-point number to a string. It converts given value to a null-terminated string.
#
include
<stdlib.h>
#
include
<stdio.h>
int
main
(
void
)
{
char
str
[
25
]
;
double
num
;
int
sig
=
5
;
/* significant digits */
/* a regular number */
num
=
9.876
;
gcvt
(
num
,
sig
,
str
)
;
printf
(
""string = %s\n""
,
str
)
;
/* a negative number */
num
=
-
123.4567
;
gcvt
(
num
,
sig
,
str
)
;
printf
(
""string = %s\n""
,
str
)
;
/* scientific notation */
num
=
0.678e5
;
gcvt
(
num
,
sig
,
str
)
;
printf
(
""string = %s\n""
,
str
)
;
return
(
0
)
;
}
Output
:
string = 9.876
string = -123.46
string = 67800",Library Functions,C Programming,1.2
648,"What will be the output of the program?
#include<stdio.h>

int main()
{
    int i;
    char c;
    for(i=1; i<=5; i++)
    {
        scanf(""%c"", &c); /* given input is 'a' */
        printf(""%c"", c);
        ungetc(c, stdin);
    }
    return 0;
}",aaaa,aaaaa,Garbage value.,Error in ungetc statement.,aaaaa,"for(i=1; i<=5; i++)
Here the for loop runs 5 times.
Loop 1
:
scanf(""%c"", &c);
Here we give 'a' as input.
printf(""%c"", c);
prints the character 'a' which is given in the previous ""scanf()"" statement.
ungetc(c, stdin);
""ungetc()"" function pushes character 'a' back into input stream.
Loop 2
:
Here the
scanf(""%c"", &c);
get the input from ""stdin"" because of ""ungetc"" function.
printf(""%c"", c);
Now variable
c
= 'a'. So it prints the character 'a'.
ungetc(c, stdin);
""ungetc()"" function pushes character 'a' back into input stream.
This above process will be repeated in
Loop 3
,
Loop 4
,
Loop 5
.",Library Functions,C Programming,2.2
649,"Point out the error in the following program.
#include<stdio.h>

int main()
{
    fprintf(""IndiaBIX"");
    printf(""%.ef"", 2.0);
    return 0;
}",Error: unknown value in printf() statement.,Error: in fprintf() statement.,"No error and prints ""IndiaBIX""","No error and prints ""2.0""",Error: in fprintf() statement.,"Declaration Syntax
:
int fprintf (FILE *stream, const char *format [, argument, ...]);
Example
:
fprintf(filestream, ""%s %d %s"", Name, Age, City);",Library Functions,C Programming,1.9
650,"Point out the error in the following program.
#include<stdio.h>
#include<string.h>

int main()
{
    char str1[] = ""Learn through IndiaBIX\0.com"",  str2[120];
    char *p;
    p = (char*) memccpy(str2, str1, 'i', strlen(str1));
    *p = '\0';
    printf(""%s"", str2);
    return 0;
}",Error: in memccpy statement,Error: invalid pointer conversion,Error: invalid variable declaration,"No error and prints ""Learn through Indi""","No error and prints ""Learn through Indi""","Declaration
:
void *memccpy(void *dest, const void *src, int c, size_t n);
: Copies a block of n bytes from src to dest
With
memccpy()
, the copying stops as soon as either of the following occurs:
=> the character 'i' is first copied into
str2
=> n bytes have been copied into
str2",Library Functions,C Programming,2
651,"Point out the error in the following program.
#include<stdio.h>

int main()
{
    char str[] = ""IndiaBIX"";
    printf(""%.#s %2s"", str, str);
    return 0;
}",Error: in Array declaration,Error: printf statement,Error: unspecified character in printf,No error,No error,"No answer description is available.
Let's discuss.",Library Functions,C Programming,1.9
652,It is necessary that for the string functions to work safely the strings must be terminated with '\0'.,TRUE,FALSE,Not Available,Not Available,TRUE,"C string is a character sequence stored as a one-dimensional character array and terminated with a null character('\0', called NULL in ASCII).
The length of a C string is found by searching for the (first) NULL byte.",Library Functions,C Programming,1.5
653,"FILE is a structure suitably typedef'd in ""stdio.h"".",TRUE,FALSE,Not Available,Not Available,TRUE,"FILE
- a structure containing the information about a file or text stream needed to perform input or output operations on it, including:
=> a file descriptor, the current stream position,
=> an end-of-file indicator,
=> an error indicator,
=> a pointer to the stream's buffer, if applicable
fpos_t
- a non-array type capable of uniquely identifying the position of every byte in a file.
size_t
- an unsigned integer type which is the type of the result of the sizeof operator.",Library Functions,C Programming,2.5
654,ftell() returns the current position of the pointer in a file stream.,TRUE,FALSE,Not Available,Not Available,TRUE,"The
ftell()
function shall obtain the current value of the file-position indicator for the stream pointed to by stream.
Example
:
#
include
<stdio.h>
int
main
(
void
)
{
FILE
*
stream
;
stream
=
fopen
(
""MYFILE.TXT""
,
""w+""
)
;
fprintf
(
stream
,
""This is a test""
)
;
printf
(
""The file pointer is at byte %ld\n""
,
ftell
(
stream
)
)
;
fclose
(
stream
)
;
return
0
;
}",Library Functions,C Programming,1.4
655,Data written into a file using fwrite() can be read back using fscanf(),TRUE,FALSE,Not Available,Not Available,FALSE,"fwrite()
- Unformatted write in to a file.
fscanf()
- Formatted read from a file.",Library Functions,C Programming,2.6
656,If the two strings are found to be unequal then strcmp returns difference between the first non-matching pair of characters.,TRUE,FALSE,Not Available,Not Available,TRUE,"g = strcmp(s1, s2);
returns 0 when the strings are equal, a negative integer when
s1
is less than
s2
, or a positive integer if
s1
is greater than
s2
, that
strcmp()
not only returns -1, 0 and +1, but also other negative or positive values(returns difference between the first non-matching pair of characters between
s1
and
s2
).
A possible implementation for
strcmp()
in ""The Standard C Library"".
int
strcmp
(
const
char
*
s1
,
const
char
*
s2
)
{
for
(
;
*
s1
==
*
s2
;
++
s1
,
++
s2
)
{
if
(
*
s1
==
0
)
return
0
;
}
return
*
(
unsigned
char
*
)
s1
<
*
(
unsigned
char
*
)
s2
?
-
1
:
1
;
}",Library Functions,C Programming,0.5
657,Is standard library a part of C language?,Yes,No,Not Available,Not Available,No,"The C standard library consists of a set of sections of the ISO C standard which describe a collection of header files and library routines used to implement common operations, such as input/output and string handling, in the C programming language. The C standard library is an interface standard described by a document; it is not an actual library of software routines available for linkage to C programs.",Library Functions,C Programming,2.5
658,"Will the program outputs ""IndiaBIX.com""?
#include<stdio.h>
#include<string.h>

int main()
{
    char str1[] = ""IndiaBIX.com"";
    char str2[20];
    strncpy(str2, str1, 8);
    printf(""%s"", str2);
    return 0;
}",Yes,No,Not Available,Not Available,No,"No. It will print something like 'IndiaBIX(some garbage values here)' .
Because after copying the first 8 characters of source string into target string
strncpy()
doesn't terminate the target string with a
'\0'
. So it may print some garbage values along with IndiaBIX.",Library Functions,C Programming,1.7
659,"The itoa function can convert an integer in decimal, octal or hexadecimal form to a string.",Yes,No,Not Available,Not Available,Yes,"itoa()
takes the integer input value input and converts it to a number in base radix. The resulting number a sequence of base-radix digits.
Example
:
/* itoa() example */
#
include
<stdio.h>
#
include
<stdlib.h>
int
main
(
)
{
int
no
;
char
buff
[
50
]
;
printf
(
""Enter number: ""
)
;
scanf
(
""%d""
,
&
no
)
;
itoa
(
no
,
buff
,
10
)
;
printf
(
""Decimal: %s\n""
,
buff
)
;
itoa
(
no
,
buff
,
2
)
;
printf
(
""Binary: %s\n""
,
buff
)
;
itoa
(
no
,
buff
,
16
)
;
printf
(
""Hexadecimal: %s\n""
,
buff
)
;
return
0
;
}
Output
:
Enter a number: 1250
Decimal: 1250
Binary: 10011100010
Hexadecimal: 4e2",Library Functions,C Programming,1.8
660,The prototypes of all standard library string functions are declared in the file string.h.,Yes,No,Not Available,Not Available,Yes,"string.h
is the header in the C standard library for the C programming language which contains macro definitions, constants, and declarations of functions and types used not only for string handling but also various memory handling functions.",Library Functions,C Programming,-1
661,"scanf() or atoi() function can be used to convert a string like ""436"" in to integer.",Yes,No,Not Available,Not Available,Yes,"scanf
is a function that reads data with specified format from a given string stream source.
scanf(""%d"",&number);
atoi()
convert string to integer.
var number;
number = atoi(""string"");",Library Functions,C Programming,2.2
662,What will the function rewind() do?,Reposition the file pointer to a character reverse.,Reposition the file pointer stream to end of file.,Reposition the file pointer to begining of that line.,Reposition the file pointer to begining of file.,Reposition the file pointer to begining of file.,"rewind()
takes the file pointer to the beginning of the file. so that the next I/O operation will take place at the beginning of the file.
Example:
rewind(FilePointer);",Library Functions,C Programming,1.4
663,Input/output function prototypes and macros are defined in which header file?,conio.h,stdlib.h,stdio.h,dos.h,stdio.h,"stdio.h
, which stands for ""standard input/output header"", is the header in the C standard library that contains macro definitions, constants, and declarations of functions and types used for various standard input and output operations.",Library Functions,C Programming,1.1
664,Which standard library function will you use to find the last occurance of a character in a string in C?,strnchar(),strchar(),strrchar(),strrchr(),strrchr(),"strrchr()
returns a pointer to the last occurrence of character in a string.
Example
:
#
include
<stdio.h>
#
include
<string.h>
int
main
(
)
{
char
str
[
30
]
=
""12345678910111213""
;
printf
(
""The last position of '2' is %d.\n""
,
strrchr
(
str
,
'2'
)
-
str
)
;
return
0
;
}
Output
: The last position of '2' is 14.",Library Functions,C Programming,2.6
665,What is stderr ?,standard error,standard error types,standard error streams,standard error definitions,standard error streams,"The standard error(stderr) stream is the default destination for error messages and other diagnostic warnings. Like stdout, it is usually also directed to the output device of the standard console (generally, the screen).",Library Functions,C Programming,1.7
666,Does there any function exist to convert the int or float to a string?,Yes,No,Not Available,Not Available,Yes,"1.
itoa()
converts an integer to a string.
2.
ltoa()
converts a long to a string.
3.
ultoa()
converts an unsigned long to a string.
4.
sprintf()
sends formatted output to a string, so it can be used to convert any type of values to string type.
#
include
<stdio.h>
#
include
<stdlib.h>
int
main
(
void
)
{
int
num1
=
12345
;
float
num2
=
5.12
;
char
str1
[
20
]
;
char
str2
[
20
]
;
itoa
(
num1
,
str1
,
10
)
;
/* 10 radix value */
printf
(
""integer = %d string = %s \n""
,
num1
,
str1
)
;
sprintf
(
str2
,
""%f""
,
num2
)
;
printf
(
""float = %f string = %s""
,
num2
,
str2
)
;
return
0
;
}
// Output:
// integer = 12345 string = 12345
// float = 5.120000 string = 5.120000",Library Functions,C Programming,2.2
667,What is the purpose of fflush() function.,flushes all streams and specified streams.,flushes only specified stream.,flushes input/output buffer.,flushes file buffer.,flushes all streams and specified streams.,"""fflush()"" flush any buffered output associated with filename, which is either a file opened for writing or a shell command for redirecting output to a pipe or coprocess.
Example:
fflush(FilePointer);
fflush(NULL);
flushes all streams.",Library Functions,C Programming,1.3
668,Can you use the fprintf() to display the output on the screen?,Yes,No,Not Available,Not Available,Yes,"Do like this
fprintf(stdout, ""%s %d %f"", str, i, a);",Library Functions,C Programming,2.1
669,What will the function randomize() do in Turbo C under DOS?,returns a random number.,returns a random number generator in the specified range.,returns a random number generator with a random value based on time.,return a random number with a given seed value.,returns a random number generator with a random value based on time.,"The
randomize()
function initializes the random number generator with a random value based on time. You can try the sample program given below in Turbo-C, it may not work as expected in other compilers.
/* Prints a random number in the range 0 to 99 */
#
include
<stdlib.h>
#
include
<stdio.h>
#
include
<time.h>
int
main
(
void
)
{
randomize
(
)
;
printf
(
""Random number in the 0-99 range: %d\n""
,
random
(
100
)
)
;
return
0
;
}",Library Functions,C Programming,1.6
670,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=0;
    for(; i<=5; i++);
        printf(""%d"", i);
    return 0;
}","0, 1, 2, 3, 4, 5",5,"1, 2, 3, 4",6,6,"Step 1
:
int i = 0;
here variable
i
is an integer type and initialized to '0'.
Step 2
:
for(; i<=5; i++);
variable
i=0
is already assigned in previous step. The semi-colon at the end of this
for
loop tells, ""there is no more statement is inside the loop"".
Loop 1
: here
i=0
, the condition in for(; 0<=5; i++) loop satisfies and then
i
is incremented by '1'(one)
Loop 2
: here
i=1
, the condition in for(; 1<=5; i++) loop satisfies and then
i
is incremented by '1'(one)
Loop 3
: here
i=2
, the condition in for(; 2<=5; i++) loop satisfies and then
i
is incremented by '1'(one)
Loop 4
: here
i=3
, the condition in for(; 3<=5; i++) loop satisfies and then
i
is increemented by '1'(one)
Loop 5
: here
i=4
, the condition in for(; 4<=5; i++) loop satisfies and then
i
is incremented by '1'(one)
Loop 6
: here
i=5
, the condition in for(; 5<=5; i++) loop satisfies and then
i
is incremented by '1'(one)
Loop 7
: here
i=6
, the condition in for(; 6<=5; i++) loop fails and then
i
is not incremented.
Step 3
:
printf(""%d"", i);
here the value of
i
is 6. Hence the output is '6'.",Control Instructions,C Programming,2.9
671,"What will be the output of the program?
#include<stdio.h>
int main()
{
    char str[]=""C-program"";
    int a = 5;
    printf(a >10?""Ps\n"":""%s\n"", str);
    return 0;
}",C-program,Ps,Error,None of above,C-program,"Step 1
:
char str[]=""C-program"";
here variable
str
contains ""C-program"".
Step 2
:
int a = 5;
here variable
a
contains ""5"".
Step 3
:
printf(a >10?""Ps\n"":""%s\n"", str);
this statement can be written as
if
(
a
>
10
)
{
printf
(
""Ps\n""
)
;
}
else
{
printf
(
""%s\n""
,
str
)
;
}
Here we are checking
a > 10
means
5 > 10
. Hence this condition will be failed. So it prints variable
str
.
Hence the output is ""C-program"".",Control Instructions,C Programming,2.2
672,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int a = 500, b = 100, c;
    if(!a >= 400)
        b = 300;
    c = 200;
    printf(""b = %d c = %d\n"", b, c);
    return 0;
}",b = 300 c = 200,b = 100 c = garbage,b = 300 c = garbage,b = 100 c = 200,b = 100 c = 200,"Initially variables
a = 500
,
b = 100
and
c
is not assigned.
Step 1
:
if(!a >= 400)
Step 2
:
if(!500 >= 400)
Step 3
:
if(0 >= 400)
Step 4
:
if(FALSE)
Hence the
if
condition is failed.
Step 5
: So, variable
c
is assigned to a value '200'.
Step 6
:
printf(""b = %d c = %d\n"", b, c);
It prints value of
b
and
c
.
Hence the output is ""b = 100 c = 200""",Control Instructions,C Programming,2.6
673,"What will be the output of the program?
#include<stdio.h>
int main()
{
    unsigned int i = 65535; /* Assume 2 byte integer*/
    while(i++ != 0)
        printf(""%d"",++i);
    printf(""\n"");
    return 0;
}",Infinite loop,0 1 2 ... 65535,0 1 2 ... 32767 - 32766 -32765 -1 0,No output,Infinite loop,"Here
unsigned int
size is 2 bytes. It varies from 0,1,2,3, ... to 65535.
Step 1
:
unsigned int i = 65535;
Step 2
:
Loop 1
:
while(i++ != 0)
this statement becomes
while(65535 != 0)
. Hence the
while(TRUE)
condition is satisfied. Then the
printf(""%d"", ++i);
prints '1'(variable
'i'
is already incremented by '1' in while statement and now incremented by '1' in printf statement)
Loop 2
:
while(i++ != 0)
this statement becomes
while(1 != 0)
. Hence the
while(TRUE)
condition is satisfied. Then the
printf(""%d"", ++i);
prints '3'(variable
'i'
is already incremented by '1' in while statement and now incremented by '1' in printf statement)
....
....
The while loop will never stops executing, because variable
i
will never become '0'(zero). Hence it is an 'Infinite loop'.",Control Instructions,C Programming,2.6
674,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x = 3;
    float y = 3.0;
    if(x == y)
        printf(""x and y are equal"");
    else
        printf(""x and y are not equal"");
    return 0;
}",x and y are equal,x and y are not equal,Unpredictable,No output,x and y are equal,"Step 1
:
int x = 3;
here variable
x
is an integer type and initialized to '3'.
Step 2
:
float y = 3.0;
here variable
y
is an float type and initialized to '3.0'
Step 3
:
if(x == y)
here we are comparing
if(3 == 3.0)
hence this condition is satisfied.
Hence it prints ""x and y are equal"".",Control Instructions,C Programming,2.2
675,"What will be the output of the program, if a short int is 2 bytes wide?
#include<stdio.h>
int main()
{
    short int i = 0;
    for(i<=5 && i>=-1; ++i; i>0)
        printf(""%u,"", i);
    return 0;
}",1 ... 65535,Expression syntax error,No output,"0, 1, 2, 3, 4, 5",1 ... 65535,"for(i<=5 && i>=-1; ++i; i>0)
so expression
i<=5 && i>=-1
initializes
for
loop.
expression
++i
is the loop condition.
expression
i>0
is the increment expression.
In
for( i <= 5 && i >= -1; ++i; i>0)
expression
i<=5 && i>=-1
evaluates to one.
Loop condition always get evaluated to
true
. Also at this point it increases
i
by one.
An increment_expression
i>0
has no effect on value of
i
.so for loop get executed till the limit of integer (ie. 65535)",Control Instructions,C Programming,1.3
676,"What will be the output of the program?
#include<stdio.h>
int main()
{
    char ch;
    if(ch = printf(""""))
        printf(""It matters\n"");
    else
        printf(""It doesn't matters\n"");
    return 0;
}",It matters,It doesn't matters,matters,No output,It doesn't matters,"printf()
returns the number of charecters printed on the console.
Step 1
:
if(ch = printf(""""))
here
printf()
does not print anything, so it returns '0'(zero).
Step 2
:
if(ch = 0)
here variable ch has the value '0'(zero).
Step 3
:
if(0)
Hence the
if
condition is not satisfied. So it prints the
else
statements.
Hence the output is ""It doesn't matters"".
Note: Compiler shows a warning ""possibly incorrect assinment"".",Control Instructions,C Programming,1.1
677,"What will be the output of the program?
#include<stdio.h>
int main()
{
    unsigned int i = 65536; /* Assume 2 byte integer*/
    while(i != 0)
        printf(""%d"",++i);
    printf(""\n"");
    return 0;
}",Infinite loop,0 1 2 ... 65535,0 1 2 ... 32767 - 32766 -32765 -1 0,No output,No output,"Here
unsigned int
size is 2 bytes. It varies from 0,1,2,3, ... to 65535.
Step 1
:
unsigned int i = 65536;
here variable
i
becomes '0'(zero). because
unsigned int
varies from 0 to 65535.
Step 2
:
while(i != 0)
this statement becomes
while(0 != 0)
. Hence the
while(FALSE)
condition is not satisfied. So, the inside the statements of
while
loop will not get executed.
Hence there is no output.
Note: Don't forget that the size of int should be 2 bytes. If you run the above program in GCC it may run infinite loop, because in Linux platform the size of the integer is 4 bytes.",Control Instructions,C Programming,1.8
678,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float a = 0.7;
    if(0.7 > a)
        printf(""Hi\n"");
    else
        printf(""Hello\n"");
    return 0;
}",Hi,Hello,Hi Hello,None of above,Hi,"if(0.7 > a)
here
a
is a float variable and
0.7
is a double constant. The double constant
0.7
is greater than the float variable
a
. Hence the
if
condition is satisfied and it prints
'Hi'
Example
:
#
include
<stdio.h>
int
main
(
)
{
float
a
=
0.7
;
printf
(
""%.10f %.10f\n""
,
0.7
,
a
)
;
return
0
;
}
Output
:
0.7000000000  0.6999999881",Control Instructions,C Programming,3
679,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int a=0, b=1, c=3;
    *((a) ? &b : &a) = a ? b : c;
    printf(""%d, %d, %d\n"", a, b, c);
    return 0;
}","0, 1, 3","1, 2, 3","3, 1, 3","1, 3, 1","3, 1, 3","Step 1
:
int a=0, b=1, c=3;
here variable
a
,
b
, and
c
are declared as integer type and initialized to 0, 1, 3 respectively.
Step 2
:
*((a) ? &b : &a) = a ? b : c;
The right side of the expression
(a?b:c)
becomes
(0?1:3)
. Hence it return the value '3'.
The left side of the expression
*((a) ? &b : &a)
becomes
*((0) ? &b : &a)
. Hence this contains the address of the variable a
*(&a)
.
Step 3
:
*((a) ? &b : &a) = a ? b : c;
Finally this statement becomes *(&a)=3. Hence the variable
a
has the value '3'.
Step 4
:
printf(""%d, %d, %d\n"", a, b, c);
It prints ""3, 1, 3"".",Control Instructions,C Programming,2.8
680,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int k, num = 30;
    k = (num < 10) ? 100 : 200;
    printf(""%d\n"", num);
    return 0;
}",200,30,100,500,30,"No answer description is available.
Let's discuss.",Control Instructions,C Programming,1.3
681,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int a = 300, b, c;
    if(a >= 400)
        b = 300;
    c = 200;
    printf(""%d, %d, %d\n"", a, b, c);
    return 0;
}","300, 300, 200","Garbage, 300, 200","300, Garbage, 200","300, 300, Garbage","300, Garbage, 200","Step 1
:
int a = 300, b, c;
here variable
a
is initialized to '300', variable b and c are declared, but not initialized.
Step 2
:
if(a >= 400)
means
if(300 >= 400)
. Hence this condition will be failed.
Step 3
:
c = 200;
here variable
c
is initialized to '200'.
Step 4
:
printf(""%d, %d, %d\n"", a, b, c);
It prints ""300, garbage value, 200"". because variable
b
is not initialized.",Control Instructions,C Programming,1.1
682,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x=1, y=1;
    for(; y; printf(""%d %d\n"", x, y))
    {
        y = x++ <= 5;
    }
    printf(""\n"");
    return 0;
}","2 1
3 1
4 1
5 1
6 1
7 0","2 1
3 1
4 1
5 1
6 1","2 1
3 1
4 1
5 1","2 2
3 3
4 4
5 5","2 1
3 1
4 1
5 1
6 1
7 0","No answer description is available.
Let's discuss.",Control Instructions,C Programming,1.9
683,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i = 5;
    while(i-- >= 0)
        printf(""%d,"", i);
    i = 5;
    printf(""\n"");
    while(i-- >= 0)
        printf(""%i,"", i);
    while(i-- >= 0)
        printf(""%d,"", i);
    return 0;
}","4, 3, 2, 1, 0, -1
4, 3, 2, 1, 0, -1","5, 4, 3, 2, 1, 0
5, 4, 3, 2, 1, 0",Error,"5, 4, 3, 2, 1, 0
5, 4, 3, 2, 1, 0
5, 4, 3, 2, 1, 0","4, 3, 2, 1, 0, -1
4, 3, 2, 1, 0, -1","Step 1
: Initially the value of variable
i
is '5'.
Loop 1
:
while(i-- >= 0)
here i = 5, this statement becomes
while(5-- >= 0)
Hence the
while
condition is satisfied and it prints '4'. (variable
'i'
is decremented by
'1'
(one) in previous while condition)
Loop 2
:
while(i-- >= 0)
here i = 4, this statement becomes
while(4-- >= 0)
Hence the
while
condition is satisfied and it prints '3'. (variable
'i'
is decremented by
'1'
(one) in previous while condition)
Loop 3
:
while(i-- >= 0)
here i = 3, this statement becomes
while(3-- >= 0)
Hence the
while
condition is satisfied and it prints '2'. (variable
'i'
is decremented by
'1'
(one) in previous while condition)
Loop 4
:
while(i-- >= 0)
here i = 2, this statement becomes
while(2-- >= 0)
Hence the
while
condition is satisfied and it prints '1'. (variable
'i'
is decremented by
'1'
(one) in previous while condition)
Loop 5
:
while(i-- >= 0)
here i = 1, this statement becomes
while(1-- >= 0)
Hence the
while
condition is satisfied and it prints '0'. (variable
'i'
is decremented by
'1'
(one) in previous while condition)
Loop 6
:
while(i-- >= 0)
here i = 0, this statement becomes
while(0-- >= 0)
Hence the
while
condition is satisfied and it prints '-1'. (variable
'i'
is decremented by
'1'
(one) in previous while condition)
Loop 7
:
while(i-- >= 0)
here i = -1, this statement becomes
while(-1-- >= 0)
Hence the
while
condition is not satisfied and loop exits.
The output of first while loop is 4,3,2,1,0,-1
Step 2
: Then the value of variable
i
is initialized to '5' Then it prints a new line character(\n).
See the above Loop 1 to Loop 7 .
The output of second while loop is 4,3,2,1,0,-1
Step 3
: The third while loop,
while(i-- >= 0)
here i = -1(because the variable
'i'
is decremented to '-1' by previous while loop and it never initialized.). This statement becomes
while(-1-- >= 0)
Hence the
while
condition is not satisfied and loop exits.
Hence the output of the program is
4,3,2,1,0,-1
4,3,2,1,0,-1",Control Instructions,C Programming,1.9
684,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=3;
    switch(i)
    {
        case 1:
            printf(""Hello\n"");
        case 2:
            printf(""Hi\n"");
        case 3:
            continue;
        default:
            printf(""Bye\n"");
    }
    return 0;
}",Error: Misplaced continue,Bye,No output,Hello Hi,Error: Misplaced continue,"The keyword
continue
cannot be used in
switch case
. It must be used in
for
or
while
or
do while
loop. If there is any looping statement in switch case then we can use
continue
.",Control Instructions,C Programming,2.3
685,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x = 10, y = 20;
    if(!(!x) && x)
        printf(""x = %d\n"", x);
    else
        printf(""y = %d\n"", y);
    return 0;
}",y =20,x = 0,x = 10,x = 1,x = 10,"The
logical not
operator takes expression and evaluates to true if the expression is false and evaluates to false if the expression is true. In other words it  reverses the value of the expression.
Step 1
:
if(!(!x) && x)
Step 2
:
if(!(!10) && 10)
Step 3
:
if(!(0) && 10)
Step 3
:
if(1 && 10)
Step 4
:
if(TRUE)
here the
if
condition is satisfied. Hence it prints
x = 10
.",Control Instructions,C Programming,1.4
686,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i=4;
    switch(i)
    {
        default:
           printf(""This is default\n"");
        case 1:
           printf(""This is case 1\n"");
           break;
        case 2:
           printf(""This is case 2\n"");
           break;
        case 3:
           printf(""This is case 3\n"");
    }
    return 0;
}","This is default
This is case 1","This is case 3
This is default","This is case 1
This is case 3",This is default,"This is default
This is case 1","In the very begining of switch-case statement
default
statement is encountered. So, it prints ""This is default"".
In
default
statement there is no
break;
statement is included. So it prints the
case 1
statements. ""This is case 1"".
Then the
break;
statement is encountered. Hence the program exits from the switch-case block.",Control Instructions,C Programming,2.7
687,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int i = 1;
    switch(i)
    {
        printf(""Hello\n"");
        case 1:
            printf(""Hi\n"");
            break;
        case 2:
            printf(""\nBye\n"");
            break;
    }
    return 0;
}","Hello
Hi","Hello
Bye",Hi,Bye,Hi,"switch(i)
has the variable
i
it has the value '1'(one).
Then
case 1:
statements got executed. so, it prints ""Hi"". The
break;
statement make the program to be exited from switch-case statement.
switch-case
do not execute any statements outside these blocks
case
and
default
Hence the output is ""Hi"".",Control Instructions,C Programming,2.8
688,"What will be the output of the program?
#include<stdio.h>
int main()
{
    char j=1;
    while(j < 5)
    {
        printf(""%d, "", j);
        j = j+1;
    }
    printf(""\n"");
    return 0;
}",1 2 3 ... 127,1 2 3 ... 255,1 2 3 ... 127 128 0 1 2 3 ... infinite times,"1, 2, 3, 4","1, 2, 3, 4","No answer description is available.
Let's discuss.",Control Instructions,C Programming,1.5
689,"What will be the output of the program?
#include<stdio.h>
int main()
{
    int x, y, z;
    x=y=z=1;
    z = ++x || ++y && ++z;
    printf(""x=%d, y=%d, z=%d\n"", x, y, z);
    return 0;
}","x=2, y=1, z=1","x=2, y=2, z=1","x=2, y=2, z=2","x=1, y=2, z=1","x=2, y=1, z=1","Step 1
:
x=y=z=1;
here the variables
x
,
y
,
z
are initialized to value '1'.
Step 2
:
z = ++x || ++y && ++z;
becomes
z = ( (++x) || (++y && ++z) )
. Here
++x
becomes 2. So there is no need to check the other side because ||(Logical OR) condition is satisfied.(z = (2 || ++y && ++z)). There is no need to process ++y && ++z. Hence it returns '1'. So the value of variable
z
is '1'
Step 3
:
printf(""x=%d, y=%d, z=%d\n"", x, y, z);
It prints ""x=2, y=1, z=1"". here
x
is increemented in previous step.
y
and
z
are not increemented.",Control Instructions,C Programming,1.1
690,"Point out the error, if any in the for loop.
#include<stdio.h>
int main()
{
    int i=1;
    for(;;)
    {
        printf(""%d\n"", i++);
        if(i>10)
           break;
    }
    return 0;
}",There should be a condition in the for loop,The two semicolons should be dropped,The for loop should be replaced with while loop.,No error,No error,"Step 1
:
for(;;)
this statement will genereate infinite loop.
Step 2
:
printf(""%d\n"", i++);
this statement will print the value of variable
i
and increement
i
by 1(one).
Step 3
:
if(i>10)
here, if the variable
i
value is greater than 10, then the
for
loop breaks.
Hence the output of the program is
1
2
3
4
5
6
7
8
9
10",Control Instructions,C Programming,1.9
691,"Point out the error, if any in the program.
#include<stdio.h>
int main()
{
    int a = 10;
    switch(a)
    {
    }
    printf(""This is c program."");
 return 0;
}",Error: No case statement specified,Error: No default specified,No Error,Error: infinite loop occurs,No Error,"There can exists a
switch
statement, which has no
case
.",Control Instructions,C Programming,2.4
692,"Point out the error, if any in the program.
#include<stdio.h>
int main()
{
    int i = 1;
    switch(i)
    {
        printf(""This is c program."");
        case 1:
            printf(""Case1"");
            break;
        case 2:
            printf(""Case2"");
            break;
    }
return 0;
}",Error: No default specified,Error: Invalid printf statement after switch statement,"No Error and prints ""Case1""",None of above,"No Error and prints ""Case1""","switch(i)
becomes
switch(1)
, then the
case 1:
block is get executed. Hence it prints ""Case1"".
printf(""This is c program."");
is ignored by the compiler.
Hence there is no error and prints ""Case1"".",Control Instructions,C Programming,1.2
693,"Point out the error, if any in the while loop.
#include<stdio.h>
int main()
{
    int i=1;
    while()
    {
        printf(""%d\n"", i++);
        if(i>10)
           break;
    }
    return 0;
}",There should be a condition in the while loop,There should be at least a semicolon in the while,The while loop should be replaced with for loop.,No error,There should be a condition in the while loop,"The
while()
loop must have conditional expression or it shows ""Expression syntax"" error.
Example
:
while(i > 10){ ... }",Control Instructions,C Programming,2
694,"Which of the following errors would be reported by the compiler on compiling the program given below?
#include<stdio.h>
int main()
{
    int a = 5;
    switch(a)
    {
 case 1:
 printf(""First"");

 case 2:
 printf(""Second"");

 case 3 + 2:
 printf(""Third"");

 case 5:
 printf(""Final"");
 break;

    }
    return 0;
}",There is no break statement in each case.,Expression as in case 3 + 2 is not allowed.,Duplicate case case 5:,No error will be reported.,Duplicate case case 5:,"Because,
case 3 + 2:
and
case 5:
have the same constant value 5.",Control Instructions,C Programming,-2.6
695,"Point out the error, if any in the program.
#include<stdio.h>
int main()
{
    int P = 10;
    switch(P)
    {
       case 10:
       printf(""Case 1"");

       case 20:
       printf(""Case 2"");
       break;

       case P:
       printf(""Case 2"");
       break;
    }
    return 0;
}",Error: No default value is specified,Error: Constant expression required at line case P:,Error: There is no break statement in each case.,No error will be reported.,Error: Constant expression required at line case P:,"The compiler will report the error ""Constant expression required"" in the line
case P:
. Because, variable names cannot be used with
case
statements.
The
case
statements will accept only constant expression.",Control Instructions,C Programming,1.2
696,"Point out the error, if any in the program.
#include<stdio.h>
int main()
{
    int i = 1;
    switch(i)
    {
        case 1:
           printf(""Case1"");
           break;
        case 1*2+4:
           printf(""Case2"");
           break;
    }
return 0;
}",Error: in case 1*2+4 statement,Error: No default specified,Error: in switch statement,No Error,No Error,"Constant expression are accepted in
switch
It prints ""Case1""",Control Instructions,C Programming,2.8
697,"Point out the error, if any in the while loop.
#include<stdio.h>
int main()
{
    void fun();
    int i = 1;
    while(i <= 5)
    {
        printf(""%d\n"", i);
        if(i>2)
            goto here;
    }
return 0;
}
void fun()
{
    here:
    printf(""It works"");
}","No Error: prints ""It works""",Error: fun() cannot be accessed,Error: goto cannot takeover control to other function,No error,Error: goto cannot takeover control to other function,"A label is used as the target of a
goto
statement, and that label must be within the same function as the
goto
statement.
Syntax
:  goto <identifier> ;
Control is unconditionally transferred to the location of a local label specified by <identifier>.
Example
:
#
include
<stdio.h>
int
main
(
)
{
int
i
=
1
;
while
(
i
>
0
)
{
printf
(
""%d""
,
i
++
)
;
if
(
i
==
5
)
goto
mylabel
;
}
mylabel
:
return
0
;
}
Output
: 1,2,3,4",Control Instructions,C Programming,2
698,"Point out the error, if any in the program.
#include<stdio.h> 
int main()
{
    int a = 10, b;
    a >=5 ? b=100: b=200;
    printf(""%d\n"", b);
    return 0;
}",100,200,Error: L value required for b,Garbage value,Error: L value required for b,"Variable b is not assigned.
It should be like:
b = a >= 5 ? 100 : 200;",Control Instructions,C Programming,1.8
699,"Which of the following statements are correct about the below program?
#include<stdio.h>
int main()
{
    int i = 10, j = 20;
    if(i = 5) && if(j = 10)
        printf(""Have a nice day"");
    return 0;
}",Output: Have a nice day,No output,Error: Expression syntax,Error: Undeclared identifier if,Error: Expression syntax,"""Expression syntax"" error occur in this line
if(i = 5) && if(j = 10)
.
It should be like
if((i == 5) && (j == 10))
.",Control Instructions,C Programming,-2.8
700,"Which of the following statements are correct about the below program?
#include<stdio.h>
int main()
{
    int i = 10, j = 15;
    if(i % 2 = j % 3)
        printf(""IndiaBIX\n"");
    return 0;
}",Error: Expression syntax,Error: Lvalue required,Error: Rvalue required,The Code runs successfully,Error: Lvalue required,"if(i % 2 = j % 3)
This statement generates ""LValue required error"". There is no variable on the left side of the expression to assign
(j % 3)
.",Control Instructions,C Programming,-2.6
701,"Which of the following statements are correct about the program?
#include<stdio.h>
int main()
{
    int x = 30, y = 40;
    if(x == y)
        printf(""x is equal to y\n"");

    else if(x > y)
        printf(""x is greater than y\n"");

    else if(x < y)
        printf(""x is less than y\n"")
    return 0;
}",Error: Statement missing,Error: Expression syntax,Error: Lvalue required,Error: Rvalue required,Error: Statement missing,"This program will result in error ""Statement missing ;""
printf(""x is less than y\n"")
here ; should be added to the end of this statement.",Control Instructions,C Programming,-1.1
702,"Which of the following statements are correct about an if-else statements in a C-program?
1: Every if-else statement can be replaced by an equivalent statements using   ?: operators
2: Nested if-else statements are allowed.
3: Multiple statements in an if block are allowed.
4: Multiple statements in an else block are allowed.",1 and 2,2 and 3,"1, 2 and 4","2, 3, 4","2, 3, 4","No answer description is available.
Let's discuss.",Control Instructions,C Programming,-2
703,"Which of the following statements are correct about the below program?
#include<stdio.h>
int main()
{
    int i = 0;
    i++;
    if(i <= 5)
    {
        printf(""IndiaBIX\n"");
        exit(0);
        main();
    }
    return 0;
}",The program prints 'IndiaBIX' 5 times,The program prints 'IndiaBIX' one time,The call to main() after exit() doesn't materialize.,The compiler reports an error since main() cannot call itself.,The program prints 'IndiaBIX' one time,"Step 1
:
int i = 0;
here variable
i
is declared as an integer type and initialized to '0'(zero).
Step 2
:
i++;
here variable
i
is increemented by 1(one). Hence, i = 1
Step 3
:
if(i <= 5)
becomes
if(1 <= 5)
here we are checking '1' is less than or equal to '5'. Hence the if condition is satisfied.
Step 4
:
printf(""IndiaBIX\n"");
It prints ""IndiaBIX""
Step 5
:
exit();
terminates the program execution.
Hence the output is ""IndiaBIX"".",Control Instructions,C Programming,-2.7
704,"Which of the following statements are correct about the below C-program?
#include<stdio.h>
int main()
{
    int x = 10, y = 100%90, i;
    for(i=1; i<10; i++)
    if(x != y);
        printf(""x = %d y = %d\n"", x, y);
    return 0;
}
1 : The printf() function is called 10 times.
2 : The program will produce the output x = 10 y = 10
3 : The ; after the if(x!=y) will NOT produce an error.
4 : The program will not produce output.",1,"2, 3","3, 4",4,"2, 3","No answer description is available.
Let's discuss.",Control Instructions,C Programming,-2.2
705,"Which of the following sentences are correct about a for loop in a C program?
1: for loop works faster than a while loop.
2: All things that can be done using a for loop can also be done using a while loop.
3: for(;;); implements an infinite loop.
4: for loop can be used if we want statements in a loop get executed at least once.",1,"1, 2","2, 3","2, 3, 4","2, 3, 4","No answer description is available.
Let's discuss.",Control Instructions,C Programming,-1.4
706,"Which of the following statements are correct about the below program?
#include<stdio.h>
int main()
{
    int n = 0, y = 1;
    y == 1 ? n=0 : n=1;
    if(n)
        printf(""Yes\n"");
    else
        printf(""No\n"");
    return 0;
}",Error: Declaration terminated incorrectly,Error: Syntax error,Error: Lvalue required,None of above,Error: Lvalue required,"No answer description is available.
Let's discuss.",Control Instructions,C Programming,-2.2
707,"Which of the following sentences are correct about a switch loop in a C program?
1: switch is useful when we wish to check the value of variable against a particular set of values.
2: switch is useful when we wish to check whether a value falls in different ranges.
3: Compiler implements a jump table for cases used in switch.
4: It is not necessary to use a break in every switch statement.","1,2","1,3,4","2,4",2,"1,3,4","No answer description is available.
Let's discuss.",Control Instructions,C Programming,-3
708,A short integer is at least 16 bits wide and a long integer is at least 32 bits wide.,TRUE,FALSE,Not Available,Not Available,TRUE,"The basic C compiler is 16 bit compiler, below are the size of it's data types
The size of
short int
is 2 bytes wide(16 bits).
The size of
long int
is 4 bytes wide(32 bits).",Control Instructions,C Programming,1.7
709,If scanf() is used to store a value in a char variable then along with the value a carriage return(\r) also gets stored it.,TRUE,FALSE,Not Available,Not Available,FALSE,"No, the carriage return tells the compiler to read the input from the buffer after ENTER key is pressed.",Control Instructions,C Programming,1.4
710,The modulus operator cannot be used with a long double.,TRUE,FALSE,Not Available,Not Available,TRUE,"fmod(x,y)
- Calculates x modulo y, the remainder of x/y.
This function is the same as the modulus operator. But
fmod()
performs floating point or
long double
divisions.",Control Instructions,C Programming,2.7
711,A char variable can store either an ASCII character or a Unicode character.,TRUE,FALSE,Not Available,Not Available,TRUE,"Yes, we can store either an ASCII character or a Unicode character in a char variable.",Control Instructions,C Programming,1.9
712,The way the break is used to take control out of switch and continue to take control of the beginning of the switch?,Yes,No,Not Available,Not Available,No,"continue
can work only with loops and not with
switch",Control Instructions,C Programming,1.8
713,Can we use a switch statement to switch on strings?,Yes,No,Not Available,Not Available,No,"The cases in a
switch
must either have integer constants or constant expressions.",Control Instructions,C Programming,2.9
714,We want to test whether a value lies in the range 2 to 4 or 5 to 7. Can we do this using a switch?,Yes,No,Not Available,Not Available,Yes,"We can do this in following switch statement
switch
(
a
)
{
case
2
:
case
3
:
case
4
:
/* some statements */
break
;
case
5
:
case
6
:
case
7
:
/* some statements */
break
;
}",Control Instructions,C Programming,1.7
715,"By default, the data type of a constant without a decimal point is int, whereas the one with a decimal point is a double.",Yes,No,Not Available,Not Available,Yes,"6
is
int
constant.
6.68
is
double
.
6.68L
is
long double
constant.
6.68f
is
float
constant.",Control Instructions,C Programming,2.6
716,"How many times ""IndiaBIX"" is get printed?
#include<stdio.h>
int main()
{
    int x;
    for(x=-1; x<=10; x++)
    {
        if(x < 5)
            continue;
        else
            break;
        printf(""IndiaBIX"");
    }
    return 0;
}",Infinite times,11 times,0 times,10 times,0 times,"No answer description is available.
Let's discuss.",Control Instructions,C Programming,1.3
717,"How many times the while loop will get executed if a short int is 2 byte wide?
#include<stdio.h>
int main()
{
    int j=1;
    while(j <= 255)
    {
        printf(""%c %d\n"", j, j);
        j++;
    }
    return 0;
}",Infinite times,255 times,256 times,254 times,255 times,"The
while(j <= 255)
loop will get executed 255 times. The size short int(2 byte wide) does not affect the
while()
loop.",Control Instructions,C Programming,2.2
718,Which of the following is not logical operator?,&,&&,||,!,&,"Bitwise operators
:
&
is a Bitwise AND operator.
Logical operators
:
&&
is a Logical AND operator.
||
is a Logical OR operator.
!
is a NOT operator.
So, '
&
' is not a Logical operator.",Control Instructions,C Programming,-2
719,"In mathematics and computer programming, which is the correct order of mathematical operators ?","Addition, Subtraction, Multiplication, Division","Division, Multiplication, Addition, Subtraction","Multiplication, Addition, Division, Subtraction","Addition, Division, Modulus, Subtraction","Division, Multiplication, Addition, Subtraction","Simply called as BODMAS (Brackets, Order, Division, Multiplication, Addition and Subtraction).
Mnemonics are often used to help students remember the rules, but the rules taught by the use of acronyms can be misleading. In the United States the acronym PEMDAS is common. It stands for Parentheses, Exponents, Multiplication, Division, Addition, Subtraction. In other English speaking countries, Parentheses may be called Brackets, or symbols of inclusion and Exponentiation may be called either Indices, Powers or Orders, and since multiplication and division are of equal precedence, M and D are often interchanged, leading to such acronyms as BEDMAS, BIDMAS, BODMAS, BERDMAS, PERDMAS, and BPODMAS.
For more info:
http://en.wikipedia.org/wiki/Order_of_operations",Control Instructions,C Programming,2.4
720,Which of the following cannot be checked in a switch-case statement?,Character,Integer,Float,enum,Float,"The
switch/case
statement in the c language is defined by the language specification to use an
int
value, so you can not use a
float
value.
switch
(
expression
)
{
case
constant
-
expression1
:
statements
1
;
case
constant
-
expression2
:
statements
2
;
case
constant
-
expression3
:
statements3
;
.
.
.
.
.
.
default
:
statements
4
;
}
The value of the '
expression
' in a switch-case statement must be an integer, char, short, long. Float and double are not allowed.",Control Instructions,C Programming,-2
721,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float a=0.7;
    if(a < 0.7)
        printf(""C\n"");
    else
        printf(""C++\n"");
    return 0;
}",C,C++,Compiler error,Non of above,C,"if(a < 0.7)
here
a
is a float variable and
0.7
is a double constant. The float variable
a
is less than double constant
0.7
. Hence the
if
condition is satisfied and it prints
'C'
Example
:
#
include
<stdio.h>
int
main
(
)
{
float
a
=
0.7
;
printf
(
""%.10f %.10f\n""
,
0.7
,
a
)
;
return
0
;
}
Output
:
0.7000000000  0.6999999881",Floating Point Issues,C Programming,2.6
722,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float *p;
    printf(""%d\n"", sizeof(p));
    return 0;
}","2 in 16bit compiler, 4 in 32bit compiler","4 in 16bit compiler, 2 in 32bit compiler","4 in 16bit compiler, 4 in 32bit compiler","2 in 16bit compiler, 2 in 32bit compiler","2 in 16bit compiler, 4 in 32bit compiler","sizeof(x)
returns the size of
x
in bytes.
float *p
is a pointer to a
float
.
In 16 bit compiler, the pointer size is always 2 bytes.
In 32 bit compiler, the pointer size is always 4 bytes.",Floating Point Issues,C Programming,2.4
723,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float fval=7.29;
    printf(""%d\n"", (int)fval);
    return 0;
}",0,0,7,7,7,"printf(""%d\n"", (int)fval);
It prints '7'. because, we typecast the
(int)fval
in to integer. It converts the float value to the nearest integer value.",Floating Point Issues,C Programming,2
724,"What will be the output of the program?
#include<stdio.h>
#include<math.h>
int main()
{
    printf(""%f\n"", sqrt(36.0));
    return 0;
}",6,6,6,Error: Prototype sqrt() not found.,6,"printf(""%f\n"", sqrt(36.0));
It prints the square root of 36 in the float format(i.e 6.000000).
Declaration Syntax
:
double sqrt(double x)
calculates and return the positive square root of the given number.",Floating Point Issues,C Programming,1.7
725,"What will be the output of the program?
#include<stdio.h>
#include<math.h>
int main()
{
    printf(""%d, %d, %d\n"", sizeof(3.14f), sizeof(3.14), sizeof(3.14l));
    return 0;
}","4, 4, 4","4, 8, 8","4, 8, 10","4, 8, 12","4, 8, 10","sizeof(3.14f)
here '3.14f' specifies the
float
data type. Hence size of float is 4 bytes.
sizeof(3.14)
here '3.14' specifies the
double
data type. Hence size of float is 8 bytes.
sizeof(3.14l)
here '3.14l' specifies the
long double
data type. Hence size of float is 10 bytes.
Note:
If you run the above program in Linux platform (GCC Compiler) it will give 4, 8, 12 as output. If you run in Windows platform (TurboC Compiler) it will give 4, 8, 10 as output. Because, C is a machine dependent language.",Floating Point Issues,C Programming,1.8
726,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float f=43.20;
    printf(""%e, "", f);
    printf(""%f, "", f);
    printf(""%g"", f);
    return 0;
}","4.320000e+01, 43.200001, 43.2","4.3, 43.22, 43.21","4.3e, 43.20f, 43.00",Error,"4.320000e+01, 43.200001, 43.2","printf(""%e, "", f);
Here '%e' specifies the ""Scientific Notation"" format. So, it prints the 43.20 as 4.320000e
+01
.
printf(""%f, "", f);
Here '%f' specifies the ""Decimal Floating Point"" format. So, it prints the 43.20 as 43.200001.
printf(""%g, "", f);
Here '%g' ""Use the shorter of %e or %f"". So, it prints the 43.20 as 43.2.",Floating Point Issues,C Programming,3
727,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float a=0.7;
    if(a < 0.7f)
        printf(""C\n"");
    else
        printf(""C++\n"");
    return 0;
}",C,C++,Compiler error,Non of above,C++,"if(a < 0.7f)
here
a
is a float variable and
0.7f
is a float constant. The float variable
a
is not less than
0.7f
float constant. But both are equal. Hence the
if
condition is failed and it goes to
else
it prints
'C++'
Example
:
#
include
<stdio.h>
int
main
(
)
{
float
a
=
0.7
;
printf
(
""%.10f %.10f\n""
,
0.7f
,
a
)
;
return
0
;
}
Output
:
0.6999999881  0.6999999881",Floating Point Issues,C Programming,3
728,"What will be the output of the program?
#include<stdio.h>
#include<math.h>
int main()
{
    float n=1.54;
    printf(""%f, %f\n"", ceil(n), floor(n));
    return 0;
}","2.000000, 1.000000","1.500000, 1.500000","1.550000, 2.000000","1.000000, 2.000000","2.000000, 1.000000","ceil(x)
round up the given value. It finds the smallest integer not <
x
.
floor(x)
round down the given value. It finds the smallest integer not >
x
.
printf(""%f, %f\n"", ceil(n), floor(n));
In this line
ceil(1.54)
round up the 1.54 to 2 and
floor(1.54)
round down the 1.54 to 1.
In the
printf(""%f, %f\n"", ceil(n), floor(n));
statement, the format specifier ""%f %f"" tells output to be float value. Hence it prints 2.000000 and 1.000000.",Floating Point Issues,C Programming,2
729,"What will be the output of the program?
#include<stdio.h>
int main()
{
    float d=2.25;
    printf(""%e,"", d);
    printf(""%f,"", d);
    printf(""%g,"", d);
    printf(""%lf"", d);
    return 0;
}","2.2, 2.50, 2.50, 2.5","2.2e, 2.25f, 2.00, 2.25","2.250000e+000, 2.250000, 2.25, 2.250000",Error,"2.250000e+000, 2.250000, 2.25, 2.250000","printf(""%e,"", d);
Here '%e' specifies the ""Scientific Notation"" format. So, it prints the 2.25 as 2.250000e
+000
.
printf(""%f,"", d);
Here '%f' specifies the ""Decimal Floating Point"" format. So, it prints the 2.25 as 2.250000.
printf(""%g,"", d);
Here '%g' ""Use the shorter of %e or %f"". So, it prints the 2.25 as 2.25.
printf(""%lf,"", d);
Here '%lf' specifies the ""Long Double"" format. So, it prints the 2.25 as 2.250000.",Floating Point Issues,C Programming,1.1
730,What are the different types of real data type in C ?,"float, double","short int, double, long int","float, double, long double","double, long int, float","float, double, long double","The floating point data types are called real data types. Hence
float
,
double
, and
long double
are real data types.",Floating Point Issues,C Programming,-1.8
731,What will you do to treat the constant 3.14 as a long double?,use 3.14LD,use 3.14L,use 3.14DL,use 3.14LF,use 3.14L,"Given
3.14
is a
double
constant.
To specify
3.14
as
long double
, we have to add
L
to the 3.14. (i.e
3.14L
)",Floating Point Issues,C Programming,2.9
732,"If the binary eauivalent of 5.375 in normalised form is 0100 0000 1010 1100 0000 0000 0000 0000, what will be the output of the program (on intel machine)?
#include<stdio.h>
#include<math.h>
int main()
{
    float a=5.375;
    char *p;
    int i;
    p = (char*)&a;
    for(i=0; i<=3; i++)
        printf(""%02x\n"", (unsigned char)p[i]);
    return 0;
}",40 AC 00 00,04 CA 00 00,00 00 AC 40,00 00 CA 04,00 00 AC 40,"No answer description is available.
Let's discuss.",Floating Point Issues,C Programming,2.3
733,Which of the following range is a valid long double (Turbo C in 16 bit DOS OS) ?,3.4E-4932 to 1.1E+4932,3.4E-4932 to 3.4E+4932,1.1E-4932 to 1.1E+4932,1.7E-4932 to 1.7E+4932,3.4E-4932 to 1.1E+4932,"The range of
long double
is 3.4E
-4932
to 1.1E
+4932",Floating Point Issues,C Programming,-2.6
734,"Which statement will you add in the following program to work it correctly?
#include<stdio.h>
int main()
{
    printf(""%f\n"", log(36.0));
    return 0;
}",#include<conio.h>,#include<math.h>,#include<stdlib.h>,#include<dos.h>,#include<math.h>,"math.h
is a header file in the standard library of C programming language designed for basic mathematical operations.
Declaration syntax
:
double log(double);",Floating Point Issues,C Programming,1.1
735,"We want to round off x, a float, to an int value, The correct way to do is",y = (int)(x + 0.5),y = int(x + 0.5),y = (int)x + 0.5,y = (int)((int)x + 0.5),y = (int)(x + 0.5),"Rounding off a value means replacing it by a nearest value that is approximately equal or smaller or greater to the given number.
y = (int)(x + 0.5);
here
x
is any float value. To roundoff, we have to
typecast
the value of
x
by using
(int)
Example
:
#
include
<stdio.h>
int
main
(
)
{
float
x
=
3.6
;
int
y
=
(
int
)
(
x
+
0.5
)
;
printf
(
""Result = %d\n""
,
y
)
;
return
0
;
}
Output
:
Result = 4.",Floating Point Issues,C Programming,2.9
736,The binary equivalent of 5.375 is,101.1011101,101.011,101011,None of above,101.011,"No answer description is available.
Let's discuss.",Floating Point Issues,C Programming,1.7
737,"A float occupies 4 bytes. If the hexadecimal equivalent of these 4 bytes are A, B, C and D, then when this float is stored in memory in which of the following order do these bytes gets stored?",ABCD,DCBA,0xABCD,Depends on big endian or little endian architecture,Depends on big endian or little endian architecture,"No answer description is available.
Let's discuss.",Floating Point Issues,C Programming,-1.7
738,What will you do to treat the constant 3.14 as a float?,use float(3.14f),use 3.14f,use f(3.14),use (f)(3.14),use 3.14f,"Given
3.14
is a
double
constant.
To specify
3.14
as
float
, we have to add
f
to the 3.14. (i.e
3.14f
)",Floating Point Issues,C Programming,2
739,Which of the following statement obtains the remainder on dividing 5.5 by 1.3 ?,rem = (5.5 % 1.3),"rem = modf(5.5, 1.3)","rem = fmod(5.5, 1.3)",Error: we can't divide,"rem = fmod(5.5, 1.3)","fmod(x,y)
- Calculates x modulo y, the remainder of x/y.
This function is the same as the modulus operator. But
fmod()
performs floating point divisions.
Example
:
#include <stdio.h>
#include <math.h>
int main ()
{
printf (""fmod of 5.5 by 1.3 is %lf\n"", fmod (5.5, 1.3) );
return 0;
}
Output
:
fmod of 5.5 by 1.3 is 0.300000",Floating Point Issues,C Programming,-2.4
740,"What will be the output of the program?
#include<stdio.h>
#define MAN(x, y) ((x)>(y)) ? (x):(y);

int main()
{
    int i=10, j=5, k=0;
    k = MAN(++i, j++);
    printf(""%d, %d, %d\n"", i, j, k);
    return 0;
}","12, 6, 12","11, 5, 11","11, 5, Garbage","12, 6, Garbage","12, 6, 12","The macro
MAN(x, y) ((x)>(y)) ? (x):(y);
returns the biggest number of given two numbers.
Step 1
:
int i=10, j=5, k=0;
The variable
i, j, k
are declared as an integer type and initialized to value 10, 5, 0 respectively.
Step 2
:
k = MAN(++i, j++);
becomes,
=>
k = ((++i)>(j++)) ? (++i):(j++);
=>
k = ((11)>(5)) ? (12):(6);
=>
k = 12
Step 3
:
printf(""%d, %d, %d\n"", i, j, k);
It prints the variable
i, j, k
.
In the above macro step 2 the variable
i
value is increemented by 2 and variable
j
value is increemented by 1.
Hence the output of the program is 12, 6, 12",C Preprocessor,C Programming,1.5
741,"What will be the output of the program?
#include<stdio.h>
#define SQUARE(x) x*x

int main()
{
    float s=10, u=30, t=2, a;
    a = 2*(s-u*t)/SQUARE(t);
    printf(""Result = %f"", a);
    return 0;
}",Result = -100.000000,Result = -25.000000,Result = 0.000000,Result = 100.000000,Result = -100.000000,"The macro function
SQUARE(x) x*x
calculate the square of the given number
'x'
. (Eg: 10
2
)
Step 1
:
float s=10, u=30, t=2, a;
Here the variable
s, u, t, a
are declared as an floating point type and the variable
s, u, t
are initialized to 10, 30, 2.
Step 2
:
a = 2*(s-u*t)/SQUARE(t);
becomes,
=>
a = 2 * (10 - 30 * 2) / t * t;
Here
SQUARE(t)
is replaced by macro to
t*t
.
=>
a = 2 * (10 - 30 * 2) / 2 * 2;
=>
a = 2 * (10 - 60) / 2 * 2;
=>
a = 2 * (-50) / 2 * 2 ;
=>
a = 2 * (-25) * 2 ;
=>
a = (-50) * 2 ;
=>
a = -100;
Step 3
:
printf(""Result=%f"", a);
It prints the value of variable 'a'.
Hence the output of the program is -100",C Preprocessor,C Programming,2.9
742,"What will be the output of the program?
#include<stdio.h>
#define SQR(x)(x*x)

int main()
{
    int a, b=3;
    a = SQR(b+2);
    printf(""%d\n"", a);
    return 0;
}",25,11,Error,Garbage value,11,"The macro function
SQR(x)(x*x)
calculate the square of the given number
'x'
. (Eg: 10
2
)
Step 1
:
int a, b=3;
Here the variable
a, b
are declared as an integer type and the variable
b
is initialized to 3.
Step 2
:
a = SQR(b+2);
becomes,
=>
a = b+2 * b+2;
Here
SQR(x)
is replaced by macro to
x*x
.
=>
a = 3+2 * 3+2;
=>
a = 3 + 6 + 2;
=>
a = 11;
Step 3
:
printf(""%d\n"", a);
It prints the value of variable 'a'.
Hence the output of the program is 11",C Preprocessor,C Programming,1.4
743,"What will be the output of the program?
#include<stdio.h>
#define JOIN(s1, s2) printf(""%s=%s %s=%s \n"", #s1, s1, #s2, s2);
int main()
{
    char *str1=""India"";
    char *str2=""BIX"";
    JOIN(str1, str2);
    return 0;
}",str1=IndiaBIX str2=BIX,str1=India str2=BIX,str1=India str2=IndiaBIX,Error: in macro substitution,str1=India str2=BIX,"No answer description is available.
Let's discuss.",C Preprocessor,C Programming,2.3
744,"What will be the output of the program?
#include<stdio.h>
#define CUBE(x) (x*x*x)

int main()
{
    int a, b=3;
    a = CUBE(b++);
    printf(""%d, %d\n"", a, b);
    return 0;
}","9, 4","27, 4","27, 6",Error,"27, 6","The macro function
CUBE(x) (x*x*x)
calculates the cubic value of given number(Eg: 10
3
.)
Step 1
:
int a, b=3;
The variable
a
and
b
are declared as an integer type and varaible
b
id initialized to 3.
Step 2
:
a = CUBE(b++);
becomes
=>
a = b++ * b++ * b++;
=>
a = 3 * 3 * 3;
Here we are using post-increement operator, so the 3 is not incremented in this statement.
=>
a = 27;
Here, 27 is store in the variable
a
. By the way, the value of variable
b
is incremented by 3. (ie: b=6)
Step 3
:
printf(""%d, %d\n"", a, b);
It prints the value of variable
a
and
b
.
Hence the output of the program is 27, 6.",C Preprocessor,C Programming,1.2
745,"What will be the output of the program?
#include<stdio.h>
#define PRINT(int) printf(""int=%d, "", int);

int main()
{
    int x=2, y=3, z=4;   
    PRINT(x);
    PRINT(y);
    PRINT(z);
    return 0;
}","int=2, int=3, int=4","int=2, int=2, int=2","int=3, int=3, int=3","int=4, int=4, int=4","int=2, int=3, int=4","The macro
PRINT(int) print(""%d,"", int);
prints the given variable value in an integer format.
Step 1
:
int x=2, y=3, z=4;
The variable x, y, z are declared as an integer type and initialized to 2, 3, 4 respectively.
Step 2
:
PRINT(x);
becomes
printf(""int=%d,"",x)
. Hence it prints 'int=2'.
Step 3
:
PRINT(y);
becomes
printf(""int=%d,"",y)
. Hence it prints 'int=3'.
Step 4
:
PRINT(z);
becomes
printf(""int=%d,"",z)
. Hence it prints 'int=4'.
Hence the output of the program is int=2, int=3, int=4.",C Preprocessor,C Programming,1.5
746,"What will be the output of the program?
#include<stdio.h>
#define SWAP(a, b) int t; t=a, a=b, b=t;
int main()
{
    int a=10, b=12;
    SWAP(a, b);
    printf(""a = %d, b = %d\n"", a, b);
    return 0;
}","a = 10, b = 12","a = 12, b = 10",Error: Declaration not allowed in macro,Error: Undefined symbol 't',"a = 12, b = 10","The macro
SWAP(a, b) int t; t=a, a=b, b=t;
swaps the value of the given two variable.
Step 1
:
int a=10, b=12;
The variable
a
and
b
are declared as an integer type and initialized to 10, 12 respectively.
Step 2
:
SWAP(a, b);
. Here the macro is substituted and it swaps the value to variable
a
and
b
.
Hence the output of the program is 12, 10.",C Preprocessor,C Programming,2.1
747,"What will be the output of the program?
#include<stdio.h>
#define FUN(i, j) i##j

int main()
{
    int va1=10;
    int va12=20;
    printf(""%d\n"", FUN(va1, 2));
    return 0;
}",10,20,1020,12,20,"The following program will make you understand about ## (macro concatenation) operator clearly.
#
include
<stdio.h>
#
define
FUN
(
i
,
j
)
i
##
j
int
main
(
)
{
int
First
=
10
;
int
Second
=
20
;
char
FirstSecond
[
]
=
""IndiaBIX""
;
printf
(
""%s\n""
,
FUN
(
First
,
Second
)
)
;
return
0
;
}
Output
:
--
--
--
-
IndiaBIX
The preprocessor will replace
FUN(First, Second)
as
FirstSecond
.
Therefore, the
printf(""%s\n"", FUN(First, Second) );
statement will become as
printf(""%s\n"", FirstSecond );
Hence it prints
IndiaBIX
as output.
Like the same, the line
printf(""%d\n"", FUN(va1, 2));
given in the above question will become as
printf(""%d\n"", va12 );
.
Therefore, it prints
20
as output.",C Preprocessor,C Programming,1.9
748,"What will be the output of the program?
#include<stdio.h>
#define FUN(arg) do\
                 {\
                    if(arg)\
                        printf(""IndiaBIX..."", ""\n"");\
                  }while(--i)

int main()
{
    int i=2;
    FUN(i<3);
    return 0;
}","IndiaBIX...
IndiaBIX...
IndiaBIX",IndiaBIX... IndiaBIX...,Error: cannot use control instructions in macro,No output,IndiaBIX... IndiaBIX...,"The macro
FUN(arg)
prints the statement ""IndiaBIX..."" untill the while condition is satisfied.
Step 1:
int i=2;
The variable
i
is declared as an integer type and initialized to 2.
Step 2:
FUN(i<3);
becomes,
do
{
if
(
2
<
3
)
printf
(
""IndiaBIX...""
,
""\n""
)
;
}
while
(
--
2
)
After the 2 while loops the value of i becomes '0'(zero). Hence the while loop breaks.
Hence the output of the program is ""IndiaBIX... IndiaBIX...""",C Preprocessor,C Programming,2.8
749,"What will be the output of the program?
#include<stdio.h>
#define MAX(a, b) (a > b ? a : b)

int main()
{
    int x;
    x = MAX(3+2, 2+7);
    printf(""%d\n"", x);
    return 0;
}",8,9,6,5,9,"The macro
MAX(a, b) (a > b ? a : b)
returns the biggest value of the given two numbers.
Step 1
:
int x;
The variable
x
is declared as an integer type.
Step 2
:
x = MAX(3+2, 2+7);
becomes,
=>
x = (3+2 > 2+7 ? 3+2 : 2+7)
=>
x = (5 > 9 ? 5 : 9)
=>
x = 9
Step 3
:
printf(""%d\n"", x);
It prints the value of variable
x
.
Hence the output of the program is 9.",C Preprocessor,C Programming,1.1
750,"What will be the output of the program?
#include<stdio.h>
#define MIN(x, y) (x<y)? x : y;
int main()
{
    int x=3, y=4, z;
    z = MIN(x+y/2, y-1);
    if(z > 0)
        printf(""%d\n"", z);
    return 0;
}",3,4,0,No output,3,"The macro
MIN(x, y) (x<y)? x : y;
returns the smallest value from the given two numbers.
Step 1
:
int x=3, y=4, z;
The variable x, y, z are declared as an integer type and the variable x, y are initialized to value 3, 4 respectively.
Step 2
:
z = MIN(x+y/2, y-1);
becomes,
=>
z = (x+y/2 < y-1)? x+y/2 : y - 1;
=>
z = (3+4/2 < 4-1)? 3+4/2 : 4 - 1;
=>
z = (3+2 < 4-1)? 3+2 : 4 - 1;
=>
z = (5 < 3)? 5 : 3;
The macro return the number 3 and it is stored in the variable
z
.
Step 3
:
if(z > 0)
becomes
if(3 > 0)
here the
if
condition is satisfied. It executes the
if
block statements.
Step 4
:
printf(""%d\n"", z);
. It prints the value of variable
z
.
Hence the output of the program is 3",C Preprocessor,C Programming,1.7
751,"What will be the output of the program?
#include<stdio.h>
#define str(x) #x
#define Xstr(x) str(x)
#define oper multiply

int main()
{
    char *opername = Xstr(oper);
    printf(""%s\n"", opername);
    return 0;
}",Error: in macro substitution,Error: invalid reference 'x' in macro,print 'multiply',No output,print 'multiply',"The macro
#define str(x) #x
replaces the symbol 'str(x)' with 'x'.
The macro
#define Xstr(x) str(x)
replaces the symbol 'Xstr(x)' with 'str(x)'.
The macro
#define oper multiply
replaces the symbol 'oper' with 'multiply'.
Step 1
:
char *opername = Xstr(oper);
The varible
*opername
is declared as an pointer to a character type.
=>
Xstr(oper);
becomes,
=>
Xstr(multiply);
=>
str(multiply)
=>
char *opername = multiply
Step 2
:
printf(""%s\n"", opername);
It prints the value of variable
opername
.
Hence the output of the program is ""multiply""",C Preprocessor,C Programming,1.2
752,"What will be the output of the program?
#include<stdio.h>
#define MESS junk

int main()
{
    printf(""MESS\n"");
    return 0;
}",junk,MESS,Error,Nothing will print,MESS,"printf(""MESS\n"");
It prints the text ""MESS"". There is no macro calling inside the printf statement occured.",C Preprocessor,C Programming,1.1
753,"What will be the output of the program?
#include<stdio.h>
#define PRINT(i) printf(""%d,"",i)

int main()
{
    int x=2, y=3, z=4;
    PRINT(x);
    PRINT(y);
    PRINT(z);
    return 0;
}","2, 3, 4,","2, 2, 2,","3, 3, 3,","4, 4, 4,","2, 3, 4,","The macro
PRINT(i) print(""%d,"", i);
prints the given variable value in an integer format.
Step 1
:
int x=2, y=3, z=4;
The variable x, y, z are declared as an integer type and initialized to 2, 3, 4 respectively.
Step 2
:
PRINT(x);
becomes
printf(""%d,"",x)
. Hence it prints '2'.
Step 3
:
PRINT(y);
becomes
printf(""%d,"",y)
. Hence it prints '3'.
Step 4
:
PRINT(z);
becomes
printf(""%d,"",z)
. Hence it prints '4'.
Hence the output of the program is 2, 3, 4.",C Preprocessor,C Programming,1.8
754,"What will be the output of the program?
#include<stdio.h>
#define MAX(a, b, c) (a>b ? a>c ? a : c: b>c ? b : c)

int main()
{
    int x;
    x = MAX(3+2, 2+7, 3+7);
    printf(""%d\n"", x);
    return 0;
}",5,9,10,3+7,10,"The macro
MAX(a, b, c) (a>b ? a>c ? a : c: b>c ? b : c)
returns the biggest of given three numbers.
Step 1
:
int x;
The variable
x
is declared as an integer type.
Step 2
:
x = MAX(3+2, 2+7, 3+7);
becomes,
=>
x = (3+2 >2+7 ? 3+2 > 3+7 ? 3+2 : 3+7: 2+7 > 3+7 ? 2+7 : 3+7)
=>
x = (5 >9 ? (5 > 10 ? 5 : 10): (9 > 10 ? 9 : 10) )
=>
x = (5 >9 ? (10): (10) )
=>
x = 10
Step 3
:
printf(""%d\n"", x);
It prints the value of 'x'.
Hence the output of the program is ""10"".",C Preprocessor,C Programming,1.6
755,"Point out the error in the program
#include<stdio.h>
#define SI(p, n, r) float si; si=p*n*r/100;
int main()
{
    float p=2500, r=3.5;
    int n=3;
    SI(p, n, r);
    SI(1500, 2, 2.5);
    return 0;
}",26250.00 7500.00,Nothing will print,Error: Multiple declaration of si,Garbage values,Error: Multiple declaration of si,"The macro
#define SI(p, n, r) float si; si=p*n*r/100;
contains the error. To remove this error, we have to modify this macro to
#define SI(p,n,r) p*n*r/100",C Preprocessor,C Programming,1.4
756,"Point out the error in the program
#include<stdio.h>

int main()
{
    int i;
    #if A
        printf(""Enter any number:"");
        scanf(""%d"", &i);
    #elif B
        printf(""The number is odd"");
    return 0;
}",Error: unexpected end of file because there is no matching #endif,The number is odd,Garbage values,None of above,Error: unexpected end of file because there is no matching #endif,"The conditional macro
#if
must have an
#endif
. In this program there is no
#endif
statement written.",C Preprocessor,C Programming,1.6
757,"Which of the following are correct preprocessor directives in C?
1: #ifdef
2: #if
3: #elif
4: #undef","1, 2",4,"1, 2, 4","1, 2, 3, 4","1, 2, 3, 4","The macros
#ifdef #if #elif
are called conditional macros.
The macro
#undef
undefine the previosly declared macro symbol.
Hence all the given statements are macro preprocessor directives.",C Preprocessor,C Programming,-1.5
758,Which of the following are correctly formed #define statements in C?,#define CUBE (X) (X*X*X);,#define CUBE(x) (X*X*X),#define CUBE(X)(X*X*X),#define CUBE(X) {X*X*X},#define CUBE(X)(X*X*X),"No answer description is available.
Let's discuss.",C Preprocessor,C Programming,-2.3
759,"If the file to be included doesn't exist, the preprocessor flashes an error message.",TRUE,FALSE,Not Available,Not Available,TRUE,"True, the included file does not exist it will generate the error.",C Preprocessor,C Programming,1.8
760,Preprocessor directive #undef can be used only on a macro that has been #define earlier,TRUE,FALSE,Not Available,Not Available,TRUE,"True,
#undef
can be used only on a macro that has been
#define
earlier
Example:
#define PI 3.14
We can undefine
PI
macro by
#undef PI",C Preprocessor,C Programming,1.9
761,There exists a way to prevent the same file from getting #included twice in the same program.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, We can prevent the same file from getting included again by using a preprocessor directive called
#ifndef
(short for ""if not defined"") to determine whether we've already defined a preprocessor symbol called
XSTRING_H
. If we have already defined this symbol, the compiler will ignore the rest of the file until it sees a
#endif
(which in this case is at the end of the file).
#ifndef XSTRING_H
#define XSTRING_H
defines the same preprocessor symbol,
Finally, the last line of the file,
#endif",C Preprocessor,C Programming,1.8
762,A preprocessor directive is a message from programmer to the preprocessor.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, the programmer tells the compiler to include the preprocessor when compiling.",C Preprocessor,C Programming,2.3
763,Macro calls and function calls work exactly similarly.,TRUE,FALSE,Not Available,Not Available,FALSE,"False, A macro just replaces each occurrence with the code assigned to it. e.g.
SQUARE(3)
with
((3)*(3))
in the program.
A function is compiled once and can be called from anywhere that has visibility to the funciton.",C Preprocessor,C Programming,3
764,A macro must always be defined in capital letters.,TRUE,FALSE,Not Available,Not Available,FALSE,"FALSE, The macro is case insensitive.",C Preprocessor,C Programming,1.1
765,Macros have a local scope.,TRUE,FALSE,Not Available,Not Available,FALSE,"False, The scope of macros is globals and functions. Also the scope of macros is only from the point of definition to the end of the file.",C Preprocessor,C Programming,1.9
766,Every C program will contain at least one preprocessor directive.,TRUE,FALSE,Not Available,Not Available,FALSE,"False, the preprocessor directive is not mandatory in any c program.",C Preprocessor,C Programming,1.3
767,Preprocessor directive #ifdef .. #else ... #endif is used for conditional compilation.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, these macros are used for conditional operation.
#
if
<
constant
-
expression
>
#
elif
<
constant
-
expression
>
#
endif",C Preprocessor,C Programming,0.2
768,Macros with arguments are allowed,TRUE,FALSE,Not Available,Not Available,TRUE,"True, A macro may have arguments.
Example:
#define CUBE(X)(X*X*X)",C Preprocessor,C Programming,2.3
769,In a macro call the control is passed to the macro.,TRUE,FALSE,Not Available,Not Available,FALSE,"False, Always the macro is substituted by the given text/expression.",C Preprocessor,C Programming,1.8
770,"A header file contains macros, structure declaration and function prototypes.",TRUE,FALSE,Not Available,Not Available,TRUE,"True, the header file contains classes, function prototypes, structure declaration, macros.",C Preprocessor,C Programming,1.1
771,"The preprocessor can trap simple errors like missing declarations, nested comments or mismatch of braces.",TRUE,FALSE,Not Available,Not Available,FALSE,"False, the preprocessor cannot trap the errors, it only replaces the macro with the given expression. But the compiler will detect errors.",C Preprocessor,C Programming,-1.6
772,A preprocessor directive is a message from compiler to a linker.,TRUE,FALSE,Not Available,Not Available,FALSE,"FALSE
Example
:
#define symbol replacement
When the preprocessor encounters #define directive, it replaces any occurrence of
symbol
in the rest of the code by
replacement
. This
replacement
can be an  statement or expression or a block or simple text.",C Preprocessor,C Programming,1.2
773,Once preprocessing is over and the program is sent for the compilation the macros are removed from the expanded source code.,TRUE,FALSE,Not Available,Not Available,TRUE,"True, After preprocessing all the macro in the program are removed.",C Preprocessor,C Programming,1.5
774,"Will the program compile successfully?
#include<stdio.h>
#define X (4+Y)
#define Y (X+3)

int main()
{
    printf(""%d\n"", 4*X+2);
    return 0;
}",Yes,No,Not Available,Not Available,No,Reports an error: Undefined symbol 'X',C Preprocessor,C Programming,1.3
775,"Would the following typedef work?
typedef #include l;",Yes,No,Not Available,Not Available,No,"Because
typedef
goes to work after preprocessing.",C Preprocessor,C Programming,1.7
776,"Will the program compile successfully?
#include<stdio.h>

int main()
{
    printf(""India"" ""BIX\n"");
    return 0;
}",Yes,No,Not Available,Not Available,Yes,"Yes, It prints ""IndiaBIX""",C Preprocessor,C Programming,1.2
777,It is necessary that a header files should have a .h extension?,Yes,No,Not Available,Not Available,No,"No, the header files have any kind of extension.",C Preprocessor,C Programming,1.1
778,"Will the program compile successfully?
#include<stdio.h>

int main()
{
    #ifdef NOTE
        int a;
        a=10;
    #else
        int a;
        a=20;
    #endif
    printf(""%d\n"", a);
    return 0;
}",Yes,No,Not Available,Not Available,Yes,"Yes, this program will compile and run successfully and prints 20.
The macro
#ifdef NOTE
evaluates the given expression to 1. If satisfied it executes the
#ifdef
block statements. Here
#ifdef
condition fails because the Macro
NOTE
is nowhere declared.
Hence the
#else
block gets executed, the variable
a
is declared and assigned a value of 20.
printf(""%d\n"", a);
It prints the value of variable
a
20.",C Preprocessor,C Programming,1.7
779,"Will the following program print the message infinite number of times?
#include<stdio.h>
#define INFINITELOOP while(1)

int main()
{
    INFINITELOOP
    printf(""IndiaBIX"");
    return 0;
}",Yes,No,Not Available,Not Available,Yes,"Yes, the program prints ""IndiaBIX"" and runs infinitely.
The macro
INFINITELOOP while(1)
replaces the text 'INFINITELOOP' by 'while(1)'
In the
main
function,
while(1)
satisfies the while condition and it prints ""IndiaBIX"". Then it comes to
while(1)
and the loop runs infinitely.",C Preprocessor,C Programming,1.1
780,Will it result in to an error if a header file is included twice?,Yes,No,It is compiler dependent.,Not Available,It is compiler dependent.,"Unless the header file has taken care to ensure that if already included it doesn't get included again.
Turbo C, GCC compilers would take care of these problems, generate no error.",C Preprocessor,C Programming,1.5
781,"What will the SWAP macro in the following program be expanded to on preprocessing? will the code compile?
#include<stdio.h>
#define SWAP(a, b, c)(c t; t=a, a=b, b=t)
int main()
{
    int x=10, y=20;
    SWAP(x, y, int);
    printf(""%d %d\n"", x, y);
    return 0;
}",It compiles,Compiles with an warning,Not compile,Compiles and print nothing,Not compile,"The code won't compile since declaration of
t
cannot occur within parenthesis.",C Preprocessor,C Programming,1.7
782,"In which stage the following code
#include<stdio.h>
gets replaced by the contents of the file stdio.h",During editing,During linking,During execution,During preprocessing,During preprocessing,"The preprocessor replaces the line
#include <stdio.h>
with the system header file of that name. More precisely, the entire text of the file
'stdio.h'
replaces the
#include
directive.",C Preprocessor,C Programming,2.5
783,What will happen if in a C program you assign a value to an array element whose subscript exceeds the size of array?,The element will be set to 0.,The compiler would report an error.,The program may crash if some important data gets overwritten.,The array size would appropriately grow.,The program may crash if some important data gets overwritten.,"If the index of the array size is exceeded, the program will crash. Hence ""option c"" is the correct answer. But the modern compilers will take care of this kind of errors.
Example
: Run the below program, it will crash in Windows (TurboC Compiler)
#
include
<stdio.h>
int
main
(
)
{
int
arr
[
2
]
;
arr
[
3
]
=
10
;
printf
(
""%d""
,
arr
[
3
]
)
;
return
0
;
}
Since C is a compiler dependent language, it may give different outputs at different platforms. We have given the Turbo-C Compiler (Windows) output.
Please try the above programs in Windows (Turbo-C Compiler) and Linux (GCC Compiler), you will understand the difference better.",Arrays,C Programming,2.9
784,"What does the following declaration mean?
int (*ptr)[10];",ptr is array of pointers to 10 integers,ptr is a pointer to an array of 10 integers,ptr is an array of 10 integers,ptr is an pointer to array,ptr is a pointer to an array of 10 integers,"No answer description is available.
Let's discuss.",Arrays,C Programming,1.4
785,"In C, if you pass an array as an argument to a function, what actually gets passed?",Value of elements in array,First element of the array,Base address of the array,Address of the last element of array,Base address of the array,"The statement 'C' is correct. When we pass an array as a funtion argument, the base address of the array will be passed.",Arrays,C Programming,1.8
786,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int a[5] = {5, 1, 15, 20, 25};
    int i, j, m;
    i = ++a[1];
    j = a[1]++;
    m = a[i++];
    printf(""%d, %d, %d"", i, j, m);
    return 0;
}","2, 1, 15","1, 2, 5","3, 2, 15","2, 3, 20","3, 2, 15","Step 1
:
int a[5] = {5, 1, 15, 20, 25};
The variable arr is declared as an integer array with a size of 5 and it is initialized to
a[0] = 5
,
a[1] = 1
,
a[2] = 15
,
a[3] = 20
,
a[4] = 25
.
Step 2
:
int i, j, m;
The variable i,j,m are declared as an integer type.
Step 3
:
i = ++a[1];
becomes
i = ++1;
Hence
i = 2
and
a[1] = 2
Step 4
:
j = a[1]++;
becomes
j = 2++;
Hence
j = 2
and
a[1] = 3
.
Step 5
:
m = a[i++];
becomes
m = a[2];
Hence
m = 15
and
i
is incremented by 1(i++ means 2++ so i=3)
Step 6
:
printf(""%d, %d, %d"", i, j, m);
It prints the value of the variables
i, j, m
Hence the output of the program is 3, 2, 15",Arrays,C Programming,2.9
787,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    static int a[2][2] = {1, 2, 3, 4};
    int i, j;
    static int *p[] = {(int*)a, (int*)a+1, (int*)a+2};
    for(i=0; i<2; i++)
    {
        for(j=0; j<2; j++)
        {
            printf(""%d, %d, %d, %d\n"", *(*(p+i)+j), *(*(j+p)+i), 
                                    *(*(i+p)+j), *(*(p+j)+i));
        }
    }
    return 0;
}","1, 1, 1, 1
2, 3, 2, 3
3, 2, 3, 2
4, 4, 4, 4","1, 2, 1, 2
2, 3, 2, 3
3, 4, 3, 4
4, 2, 4, 2","1, 1, 1, 1
2, 2, 2, 2
2, 2, 2, 2
3, 3, 3, 3","1, 2, 3, 4
2, 3, 4, 1
3, 4, 1, 2
4, 1, 2, 3","1, 1, 1, 1
2, 2, 2, 2
2, 2, 2, 2
3, 3, 3, 3","No answer description is available.
Let's discuss.",Arrays,C Programming,2.2
788,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    void fun(int, int[]);
    int arr[] = {1, 2, 3, 4};
    int i;
    fun(4, arr);
    for(i=0; i<4; i++)
        printf(""%d,"", arr[i]);
    return 0;
}
void fun(int n, int arr[])
{
    int *p=0;
    int i=0;
    while(i++ < n)
        p = &arr[i];
    *p=0;
}","2, 3, 4, 5","1, 2, 3, 4","0, 1, 2, 3","3, 2, 1 0","1, 2, 3, 4","Step 1
:
void fun(int, int[]);
This prototype tells the compiler that the function
fun()
accepts one integer value and one array as an arguments and does not return anything.
Step 2
:
int arr[] = {1, 2, 3, 4};
The variable a is declared as an integer array and it is initialized to
a[0] = 1, a[1] = 2, a[2] = 3, a[3] = 4
Step 3
:
int i;
The variable
i
is declared as an integer type.
Step 4
:
fun(4, arr);
This function does not affect the output of the program. Let's skip this function.
Step 5
:
for(i=0; i<4; i++) { printf(""%d,"", arr[i]); }
The
for
loop runs untill the variable
i
is less than '4' and it prints the each value of array
a
.
Hence the output of the program is 1,2,3,4",Arrays,C Programming,1.6
789,"What will be the output of the program ?
#include<stdio.h>
void fun(int **p);

int main()
{
    int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 8, 7, 8, 9, 0};
    int *ptr;
    ptr = &a[0][0];
    fun(&ptr);
    return 0;
}
void fun(int **p)
{
    printf(""%d\n"", **p);
}",1,2,3,4,1,"Step 1
:
int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 8, 7, 8, 9, 0};
The variable
a
is declared as an multidimensional integer array with size of 3 rows 4 columns.
Step 2
:
int *ptr;
The
*ptr
is a integer pointer variable.
Step 3
:
ptr = &a[0][0];
Here we are assigning the base address of the array
a
to the pointer variable
*ptr
.
Step 4
:
fun(&ptr);
Now, the
&ptr
contains the base address of array
a
.
Step 4
: Inside the function
fun(&ptr);
The
printf(""%d\n"", **p);
prints the value '1'.
because the
*p
contains the base address or the first element memory address of the array
a
(ie. a[0])
**p
contains the value of *p memory location (ie. a[0]=1).
Hence the output of the program is '1'",Arrays,C Programming,1.3
790,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    static int arr[] = {0, 1, 2, 3, 4};
    int *p[] = {arr, arr+1, arr+2, arr+3, arr+4};
    int **ptr=p;
    ptr++;
    printf(""%d, %d, %d\n"", ptr-p, *ptr-arr, **ptr);
    *ptr++;
    printf(""%d, %d, %d\n"", ptr-p, *ptr-arr, **ptr);
    *++ptr;
    printf(""%d, %d, %d\n"", ptr-p, *ptr-arr, **ptr);
    ++*ptr;
    printf(""%d, %d, %d\n"", ptr-p, *ptr-arr, **ptr);
    return 0;
}","0, 0, 0
1, 1, 1
2, 2, 2
3, 3, 3","1, 1, 2
2, 2, 3
3, 3, 4
4, 4, 1","1, 1, 1
2, 2, 2
3, 3, 3
3, 4, 4","0, 1, 2
1, 2, 3
2, 3, 4
3, 4, 5","1, 1, 1
2, 2, 2
3, 3, 3
3, 4, 4","No answer description is available.
Let's discuss.",Arrays,C Programming,1.2
791,"What will be the output of the program if the array begins at 65472 and each integer occupies 2 bytes?
#include<stdio.h>

int main()
{
    int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 1, 7, 8, 9, 0};
    printf(""%u, %u\n"", a+1, &a+1);
    return 0;
}","65474, 65476","65480, 65496","65480, 65488","65474, 65488","65480, 65496","Step 1
:
int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 1, 7, 8, 9, 0};
The array a[3][4] is declared as an integer array having the 3 rows and 4 colums dimensions.
Step 2
:
printf(""%u, %u\n"", a+1, &a+1);
The base address(also the address of the first element) of array is 65472.
For a two-dimensional array like
a
reference to array has type ""pointer to array of 4 ints"". Therefore,
a+1
is pointing to the memory location of first element of the second row in array
a
. Hence 65472 + (4 ints * 2 bytes) = 65480
Then,
&a
has type ""pointer to array of 3 arrays of 4 ints"", totally 12 ints. Therefore,
&a+1
denotes ""12 ints * 2 bytes * 1 = 24 bytes"".
Hence, begining address 65472 + 24 = 65496. So,
&a+1
= 65496
Hence the output of the program is 65480, 65496",Arrays,C Programming,2.9
792,"What will be the output of the program in Turb C (under DOS)?
#include<stdio.h>

int main()
{
    int arr[5], i=0;
    while(i<5)
        arr[i]=++i;

    for(i=0; i<5; i++)
        printf(""%d, "", arr[i]);

    return 0;
}","1, 2, 3, 4, 5,","Garbage value, 1, 2, 3, 4,","0, 1, 2, 3, 4,","2, 3, 4, 5, 6,","Garbage value, 1, 2, 3, 4,","Since C is a compiler dependent language, it may give different outputs at different platforms. We have given the TurboC Compiler (Windows) output.
Please try the above programs in Windows (Turbo-C Compiler) and Linux (GCC Compiler), you will understand the difference better.",Arrays,C Programming,1.8
793,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    int arr[1]={10};
    printf(""%d\n"", 0[arr]);
    return 0;
}",1,10,0,6,10,"Step 1
:
int arr[1]={10};
The variable
arr[1]
is declared as an integer array with size '2' and it's first element is initialized to value '10'(means
arr[0]=10
)
Step 2
:
printf(""%d\n"", 0[arr]);
It prints the first element value of the variable
arr
.
Hence the output of the program is 10.",Arrays,C Programming,1.9
794,"What will be the output of the program if the array begins at address 65486?
#include<stdio.h>

int main()
{
    int arr[] = {12, 14, 15, 23, 45};
    printf(""%u, %u\n"", arr, &arr);
    return 0;
}","65486, 65488","65486, 65486","65486, 65490","65486, 65487","65486, 65486","Step 1
:
int arr[] = {12, 14, 15, 23, 45};
The variable
arr
is declared as an integer array and initialized.
Step 2
:
printf(""%u, %u\n"", arr, &arr);
Here,
The base address of the array is 65486.
=>
arr, &arr
is pointing to the base address of the array
arr
.
Hence the output of the program is 65486, 65486",Arrays,C Programming,1.7
795,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    float arr[] = {12.4, 2.3, 4.5, 6.7};
    printf(""%d\n"", sizeof(arr)/sizeof(arr[0]));
    return 0;
}",5,4,6,7,4,"The sizeof function return the given variable. Example: float a=10; sizeof(a) is 4 bytes
Step 1
:
float arr[] = {12.4, 2.3, 4.5, 6.7};
The variable
arr
is declared as an floating point array and it is initialized with the values.
Step 2
:
printf(""%d\n"", sizeof(arr)/sizeof(arr[0]));
The variable
arr
has 4 elements. The size of the float variable is 4 bytes.
Hence 4 elements x 4 bytes = 16 bytes
sizeof(arr[0])
is 4 bytes
Hence
16/4
is
4
bytes
Hence the output of the program is '4'.",Arrays,C Programming,3
796,"What will be the output of the program if the array begins 1200 in memory?
#include<stdio.h>

int main()
{
    int arr[]={2, 3, 4, 1, 6};
    printf(""%u, %u, %u\n"", arr, &arr[0], &arr);
    return 0;
}","1200, 1202, 1204","1200, 1200, 1200","1200, 1204, 1208","1200, 1202, 1200","1200, 1200, 1200","Step 1
:
int arr[]={2, 3, 4, 1, 6};
The variable
arr
is declared as an integer array and initialized.
Step 2
:
printf(""%u, %u, %u\n"", arr, &arr[0], &arr);
Here,
The base address of the array is 1200.
=>
arr, &arr
is pointing to the base address of the array
arr
.
=>
&arr[0]
is pointing to the address of the first element array
arr
. (ie. base address)
Hence the output of the program is 1200, 1200, 1200",Arrays,C Programming,2.2
797,"Which of the following is correct way to define the function fun() in the below program?
#include<stdio.h>

int main()
{
    int a[3][4];
    fun(a);
    return 0;
}","void fun(int p[][4])
{
}","void fun(int *p[4])
{
}","void fun(int *p[][4])
{
}","void fun(int *p[3][4])
{
}","void fun(int p[][4])
{
}","void fun(int p[][4]){ }
is the correct way to write the function
fun()
. while the others are considered only the function
fun()
is called by using
call by reference
.",Arrays,C Programming,-2.3
798,"Which of the following statements mentioning the name of the array begins DOES NOT yield the base address?
1: When array name is used with the sizeof operator.
2: When array name is operand of the & operator.
3: When array name is passed to scanf() function.
4: When array name is passed to printf() function.",A,"A, B",B,"B, D","A, B","The statement 1 and 2 does not yield the base address of the array. While the
scanf()
and
printf()
yields the base address of the array.",Arrays,C Programming,-2.8
799,"Which of the following statements are correct about the program below?
#include<stdio.h>

int main()
{
    int size, i;
    scanf(""%d"", &size);
    int arr[size];
    for(i=1; i<=size; i++)
    {
        scanf(""%d"", arr[i]);
        printf(""%d"", arr[i]);
    }
    return 0;
}",The code is erroneous since the subscript for array used in for loop is in the range 1 to size.,The code is erroneous since the values of array are getting scanned through the loop.,The code is erroneous since the statement declaring array is invalid.,The code is correct and runs successfully.,The code is erroneous since the statement declaring array is invalid.,"The statement
int arr[size];
produces an error, because we cannot initialize the size of array dynamically. Constant expression is required here.
Example:
int arr[10];
One more point is there, that is, usually declaration is not allowed after calling any function in a current block of code. In the given program the declaration
int arr[10];
is placed after a function call
scanf()
.",Arrays,C Programming,-1.5
800,"Which of the following statements are correct about 6 used in the program?
int num[6];
num[6]=21;","In the first statement 6 specifies a particular element, whereas in the second statement it specifies a type.","In the first statement 6 specifies a array size, whereas in the second statement it specifies a particular element of array.","In the first statement 6 specifies a particular element, whereas in the second statement it specifies a array size.",In both the statement 6 specifies array size.,"In the first statement 6 specifies a array size, whereas in the second statement it specifies a particular element of array.","The statement 'B' is correct, because
int num[6];
specifies the size of array and
num[6]=21;
designates the particular element(7
th
element) of the array.",Arrays,C Programming,-1.7
801,"Which of the following statements are correct about an array?
1: The array int num[26]; can store 26 elements.
2: The expression num[1] designates the very first element in the array.
3: It is necessary to initialize the array at the time of declaration.
4: The declaration num[SIZE] is allowed if SIZE is a macro.",1,"1,4","2,3","2,4","1,4","1. The array
int num[26];
can store 26 elements. This statement is true.
2. The expression
num[1]
designates the very first element in the array. This statement is false, because it designates the second element of the array.
3. It is necessary to initialize the array at the time of declaration. This statement is false.
4. The declaration
num[SIZE]
is allowed if SIZE is a macro. This statement is true, because the MACRO just replaces the symbol SIZE with given value.
Hence the statements '1' and '4' are correct statements.",Arrays,C Programming,-1.6
802,A pointer to a block of memory is effectively same as an array,TRUE,FALSE,Not Available,Not Available,TRUE,"Yes, It is possible to allocate a block of memory (of arbitrary size) at run-time, using the standard library's
malloc
function, and treat it as an array.",Arrays,C Programming,1.6
803,Does this mentioning array name gives the base address in all the contexts?,Yes,No,Not Available,Not Available,No,"No, Mentioning the array name in C or C++ gives the base address in all contexts except one.
Syntactically, the compiler treats the array name as a pointer to the first element. You can reference elements using array syntax,
a[n]
, or using pointer syntax,
*(a+n)
, and you can even mix the usages within an expression.
When you pass an array name as a function argument, you are passing the ""value of the pointer"", which means that you are implicitly passing the array by reference, even though all parameters in functions are ""call by value"".",Arrays,C Programming,2.4
804,"Is there any difference int the following declarations?
int fun(int arr[]);
int fun(int arr[2]);",Yes,No,Not Available,Not Available,No,"No, both the statements are same. It is the prototype for the function
fun()
that accepts one integer array as an parameter and returns an integer value.",Arrays,C Programming,2.3
805,Are the expressions arr and &arr same for an array of 10 integers?,Yes,No,Not Available,Not Available,No,"Both mean two different things.
arr
gives the address of the first
int
, whereas the
&arr
gives the address of array of ints.",Arrays,C Programming,2.2
806,How will you free the allocated memory ?,remove(var-name);,free(var-name);,delete(var-name);,dalloc(var-name);,free(var-name);,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.4
807,"What is the similarity between a structure, union and enumeration?",All of them let you define new values,All of them let you define new data types,All of them let you define new pointers,All of them let you define new structures,All of them let you define new data types,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.8
808,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    union a
    {
        int i;
        char ch[2];
    };
    union a u;
    u.ch[0]=3;
    u.ch[1]=2;
    printf(""%d, %d, %d\n"", u.ch[0], u.ch[1], u.i);
    return 0;
}","3, 2, 515","515, 2, 3","3, 2, 5","515, 515, 4","3, 2, 515","The system will allocate 2 bytes for the union.
The statements
u.ch[0]=3; u.ch[1]=2;
store data in memory as given below.","Structures, Unions, Enums",C Programming,2.4
809,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    union var
    {
        int a, b;
    };
    union var v;
    v.a=10;
    v.b=20;
    printf(""%d\n"", v.a);
    return 0;
}",10,20,30,0,20,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.1
810,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    struct value
    {
        int bit1:1;
        int bit3:4;
        int bit4:4;
    }bit={1, 2, 13};

    printf(""%d, %d, %d\n"", bit.bit1, bit.bit3, bit.bit4);
    return 0;
}","1, 2, 13","1, 4, 4","-1, 2, -3","-1, -2, -13","-1, 2, -3","Note the below statement inside the struct:
int bit1:1;
--> 'int' indicates that it is a SIGNED integer.
For signed integers the leftmost bit will be taken for +/- sign.
If you store 1 in 1-bit field:
The left most bit is 1, so the system will treat the value as negative number.
The 2's complement method is used by the system to handle the negative values.
Therefore, the data stored is 1. The 2's complement of 1 is also 1 (negative).
Therefore
-1
is printed.
If you store 2 in 4-bits field:
Binary 2: 0010 (left most bit is 0, so system will treat it as positive value)
0010 is 2
Therefore
2
is printed.
If you store 13 in 4-bits field:
Binary 13: 1101 (left most bit is 1, so system will treat it as negative value)
Find 2's complement of  1101:
1's complement of 1101 : 0010
2's complement of 1101 : 0011 (Add 1 to the result of 1's complement)
0011 is 3 (but negative value)
Therefore
-3
is printed.","Structures, Unions, Enums",C Programming,1.8
811,"What will be the output of the program in 16 bit platform (Turbo C under DOS) ?
#include<stdio.h>

int main()
{
    struct value
    {
        int bit1:1;
        int bit3:4;
        int bit4:4;
    }bit;
    printf(""%d\n"", sizeof(bit));
    return 0;
}",1,2,4,9,2,"Since C is a compiler dependent language, in Turbo C (DOS) the output will be 2, but in GCC (Linux) the output will be 4.","Structures, Unions, Enums",C Programming,2.9
812,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    enum days {MON=-1, TUE, WED=6, THU, FRI, SAT};
    printf(""%d, %d, %d, %d, %d, %d\n"", MON, TUE, WED, THU, FRI, SAT);
    return 0;
}","-1, 0, 1, 2, 3, 4","-1, 2, 6, 3, 4, 5","-1, 0, 6, 2, 3, 4","-1, 0, 6, 7, 8, 9","-1, 0, 6, 7, 8, 9","No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.9
813,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    union a
    {
        int i;
        char ch[2];
    };
    union a u;
    u.ch[0]=3;
    u.ch[1]=2;
    printf(""%d, %d, %d\n"", u.ch[0], u.ch[1], u.i);
    return 0;
}","3, 2, 515","515, 2, 3","3, 2, 5","515, 515, 4","3, 2, 515","The system will allocate 2 bytes for the union.
The statements
u.ch[0]=3; u.ch[1]=2;
store data in memory as given below.","Structures, Unions, Enums",C Programming,2.9
814,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    union var
    {
        int a, b;
    };
    union var v;
    v.a=10;
    v.b=20;
    printf(""%d\n"", v.a);
    return 0;
}",10,20,30,0,20,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.1
815,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    struct value
    {
        int bit1:1;
        int bit3:4;
        int bit4:4;
    }bit={1, 2, 13};

    printf(""%d, %d, %d\n"", bit.bit1, bit.bit3, bit.bit4);
    return 0;
}","1, 2, 13","1, 4, 4","-1, 2, -3","-1, -2, -13","-1, 2, -3","Note the below statement inside the struct:
int bit1:1;
--> 'int' indicates that it is a SIGNED integer.
For signed integers the leftmost bit will be taken for +/- sign.
If you store 1 in 1-bit field:
The left most bit is 1, so the system will treat the value as negative number.
The 2's complement method is used by the system to handle the negative values.
Therefore, the data stored is 1. The 2's complement of 1 is also 1 (negative).
Therefore
-1
is printed.
If you store 2 in 4-bits field:
Binary 2: 0010 (left most bit is 0, so system will treat it as positive value)
0010 is 2
Therefore
2
is printed.
If you store 13 in 4-bits field:
Binary 13: 1101 (left most bit is 1, so system will treat it as negative value)
Find 2's complement of  1101:
1's complement of 1101 : 0010
2's complement of 1101 : 0011 (Add 1 to the result of 1's complement)
0011 is 3 (but negative value)
Therefore
-3
is printed.","Structures, Unions, Enums",C Programming,1.4
816,"What will be the output of the program in 16 bit platform (Turbo C under DOS) ?
#include<stdio.h>

int main()
{
    struct value
    {
        int bit1:1;
        int bit3:4;
        int bit4:4;
    }bit;
    printf(""%d\n"", sizeof(bit));
    return 0;
}",1,2,4,9,2,"Since C is a compiler dependent language, in Turbo C (DOS) the output will be 2, but in GCC (Linux) the output will be 4.","Structures, Unions, Enums",C Programming,2.1
817,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    enum days {MON=-1, TUE, WED=6, THU, FRI, SAT};
    printf(""%d, %d, %d, %d, %d, %d\n"", MON, TUE, WED, THU, FRI, SAT);
    return 0;
}","-1, 0, 1, 2, 3, 4","-1, 2, 6, 3, 4, 5","-1, 0, 6, 2, 3, 4","-1, 0, 6, 7, 8, 9","-1, 0, 6, 7, 8, 9","No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.9
818,"What will be the output of the program ?
#include<stdio.h>

int main()
{
    enum days {MON=-1, TUE, WED=6, THU, FRI, SAT};
    printf(""%d, %d, %d, %d, %d, %d\n"", ++MON, TUE, WED, THU, FRI, SAT);
    return 0;
}","-1, 0, 1, 2, 3, 4",Error,"0, 1, 6, 3, 4, 5","0, 0, 6, 7, 8, 9",Error,"Because
++
or
--
cannot be done on
enum
value.","Structures, Unions, Enums",C Programming,2
819,"What will be the output of the program ?
#include<stdio.h>

    struct course
    {
        int courseno;
        char coursename[25];
    };
int main()
{
    struct course c[] = { {102, ""Java""}, 
                          {103, ""PHP""}, 
                          {104, ""DotNet""}     };

    printf(""%d "", c[1].courseno);
    printf(""%s\n"", (*(c+2)).coursename);
    return 0;
}",103 DotNet,102 Java,103 PHP,104 DotNet,103 DotNet,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.8
820,"What will be the output of the program given below in 16-bit platform ?
#include<stdio.h>

int main()
{
    enum value{VAL1=0, VAL2, VAL3, VAL4, VAL5} var;
    printf(""%d\n"", sizeof(var));
    return 0;
}",1,2,4,10,2,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.6
821,"Point out the error in the program?
struct emp
{
    int ecode;
    struct emp *e;
};",Error: in structure declaration,Linker Error,No Error,None of above,No Error,"This type of declaration is called as self-referential structure. Here
*e
is pointer to a
struct emp
.","Structures, Unions, Enums",C Programming,1.3
822,"Point out the error in the program?
typedef struct data mystruct;
struct data
{
    int x;
    mystruct *b;
};",Error: in structure declaration,Linker Error,No Error,None of above,No Error,"Here the type name
mystruct
is known at the point of declaring the structure, as it is already defined.","Structures, Unions, Enums",C Programming,1.4
823,"Point out the error in the program?
#include<stdio.h>

int main()
{
    struct a
    {
        float category:5;
        char scheme:4;
    };
    printf(""size=%d"", sizeof(struct a));
    return 0;
}",Error: invalid structure member in printf,Error in this float category:5; statement,No error,None of above,Error in this float category:5; statement,"Bit field type must be
signed int
or
unsigned int
.
The char type:
char scheme:4;
is also a valid statement.","Structures, Unions, Enums",C Programming,1.7
824,"Point out the error in the program?
struct emp
{
    int ecode;
    struct emp e;
};",Error: in structure declaration,Linker Error,No Error,None of above,Error: in structure declaration,"The structure
emp
contains a member
e
of the same type.(i.e)
struct emp
. At this stage compiler does not know the size of sttructure.","Structures, Unions, Enums",C Programming,1.3
825,"Point out the error in the program?
#include<stdio.h>

int main()
{
    struct emp
    {
        char name[20];
        float sal;
    };
    struct emp e[10];
    int i;
    for(i=0; i<=9; i++)
        scanf(""%s %f"", e[i].name, &e[i].sal);
    return 0;
}",Error: invalid structure member,Error: Floating point formats not linked,No error,None of above,Error: Floating point formats not linked,"At run time it will show an error then program will be terminated.
Sample output: Turbo C (Windows)
c:\>myprogram
Sample
12.123
scanf : floating point formats not linked
Abnormal program termination","Structures, Unions, Enums",C Programming,2.1
826,"Point out the error in the program?
#include<stdio.h>
#include<string.h>
void modify(struct emp*);
struct emp
{
    char name[20];
    int age;
};
int main()
{
    struct emp e = {""Sanjay"", 35};
    modify(&e);
    printf(""%s %d"", e.name, e.age);
    return 0;
}
void modify(struct emp *p)
{
     p ->age=p->age+2;
}",Error: in structure,Error: in prototype declaration unknown struct emp,No error,None of above,Error: in prototype declaration unknown struct emp,"The
struct emp
is mentioned in the prototype of the function
modify()
before declaring the structure.To solve this problem declare
struct emp
before the
modify()
prototype.","Structures, Unions, Enums",C Programming,1.9
827,"Point out the error in the program in 16-bit platform?
#include<stdio.h>

int main()
{
    struct bits
    {
        int i:40;
    }bit;

    printf(""%d\n"", sizeof(bit));
    return 0;
}",4,2,Error: Bit field too large,Error: Invalid member access in structure,Error: Bit field too large,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.8
828,"Point out the error in the program?
#include<stdio.h>

int main()
{
    union a
    {
        int i;
        char ch[2];
    };
    union a z1 = {512};
    union a z2 = {0, 2};
    return 0;
}",Error: invalid union declaration,Error: in Initializing z2,No error,None of above,Error: in Initializing z2,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.6
829,"Point out the error in the program?
#include<stdio.h>

int main()
{
    struct emp
    {
        char n[20];
        int age;
    };
    struct emp e1 = {""Dravid"", 23};
    struct emp e2 = e1;
    if(e1 == e2)
        printf(""The structure are equal"");
    return 0;
}",Prints: The structure are equal,Error: Structure cannot be compared using '==',No output,None of above,Error: Structure cannot be compared using '==',"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2
830,"Point out the error in the program?
#include<stdio.h>

int main()
{
    struct bits
    {
        float f:2;
    }bit;

    printf(""%d\n"", sizeof(bit));
    return 0;
}",4,2,Error: cannot set bit field for float,Error: Invalid member access in structure,Error: cannot set bit field for float,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.7
831,"Point out the error in the program?
#include<stdio.h>

int main()
{
    struct emp
    {
        char name[25];
        int age;
        float bs;
    };
    struct emp e;
    e.name = ""Suresh"";
    e.age = 25;
    printf(""%s %d\n"", e.name, e.age);
    return 0;
}",Error: Lvalue required/incompatible types in assignment,Error: invalid constant expression,Error: Rvalue required,"No error, Output: Suresh 25",Error: Lvalue required/incompatible types in assignment,"We cannot assign a string to a struct variable like
e.name = ""Suresh"";
in C.
We have to use
strcpy(char *dest, const char *source)
function to assign a string.
Ex:
strcpy(e.name, ""Suresh"");","Structures, Unions, Enums",C Programming,2
832,"Which of the following statements correct about the below program?
#include<stdio.h>

int main()
{
    struct emp
    {
        char name[25];
        int age;
        float sal;
    };
    struct emp e[2];
    int i=0;
    for(i=0; i<2; i++)
        scanf(""%s %d %f"", e[i].name, &e[i].age, &e[i].sal);

    for(i=0; i<2; i++)
        scanf(""%s %d %f"", e[i].name, e[i].age, e[i].sal);
    return 0;
}",Error: scanf() function cannot be used for structures elements.,The code runs successfully.,Error: Floating point formats not linked Abnormal program termination.,Error: structure variable must be initialized.,Error: Floating point formats not linked Abnormal program termination.,"Refer the explanation given for another problem:
http://www.indiabix.com/c-programming/floating-point-issues/discussion-136","Structures, Unions, Enums",C Programming,-1.8
833,"Which of the following statements correct about the below program?
#include<stdio.h>

int main()
{
    union a
    {
        int i;
        char ch[2];
    };
    union a u1 = {512};
    union a u2 = {0, 2};
    return 0;
}
1: u2 CANNOT be initialized as shown.
2: u1 can be initialized as shown.
3: To initialize char ch[] of u2 '.' operator should be used.
4: The code causes an error 'Declaration syntax error'","1, 2","2, 3","1, 2, 3","1, 3, 4","1, 2, 3","No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,-1.1
834,"Which of the following statements correctly assigns 12 to month using pointer variable pdt?
#include<stdio.h>

    struct date
    {
        int day;
        int month;
        int year;
    };
int main()
{
    struct date d;
    struct date *pdt;
    pdt = &d;
    return 0;
}",pdt.month = 12,&pdt.month = 12,d.month = 12,pdt->month = 12,pdt->month = 12,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,-2.2
835,"Which of the following statements correct about the below code?
maruti.engine.bolts=25;",Structure bolts is nested within structure engine.,Structure engine is nested within structure maruti.,Structure maruti is nested within structure engine.,Structure maruti is nested within structure bolts.,Structure engine is nested within structure maruti.,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,-1.4
836,A union cannot be nested in a structure,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.6
837,Nested unions are allowed,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.6
838,Bit fields CANNOT be used in union.,TRUE,FALSE,Not Available,Not Available,FALSE,"The following is the example program to explain ""using bit fields inside an union"".
#
include
<stdio.h>
union
Point
{
unsigned
int
x
:
4
;
unsigned
int
y
:
4
;
int
res
;
}
;
int
main
(
)
{
union
Point pt
;
pt
.
x
=
2
;
pt
.
y
=
3
;
pt
.
res
=
pt
.
y
;
printf
(
""\n The value of res = %d""
,
pt
.
res
)
;
return
0
;
}
// Output: The value of res = 3","Structures, Unions, Enums",C Programming,2.5
839,one of elements of a structure can be a pointer to the same structure.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.6
840,A structure can be nested inside another structure.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.3
841,Which of the following statement is True?,User has to explicitly define the numeric value of enumerations,User has a control over the size of enumeration variables.,"Enumeration can have an effect local to the block, if desired",Enumerations have a global effect throughout the file.,"Enumeration can have an effect local to the block, if desired","No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,-1.4
842,The '.' operator can be used access structure elements using a structure variable.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.3
843,Union elements can be of different sizes.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.5
844,A structure can contain similar or dissimilar elements,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.3
845,The '->' operator can be used to access structures elements using a pointer to a structure variable only,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.8
846,It is not possible to create an array of pointer to structures.,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.1
847,"If the following structure is written to a file using fwrite(), can fread() read it back successfully?
struct emp
{
    char *n;
    int age;
};
struct emp e={""IndiaBIX"", 15};
FILE *fp;
fwrite(&e, sizeof(e), 1, fp);",Yes,No,Not Available,Not Available,No,"Since the structure contain a
char
pointer while writing the structure to the disk using
fwrite()
only the value stored in pointer
n
will get written. so
fread()
fails to read.","Structures, Unions, Enums",C Programming,1.2
848,size of union is size of the longest element in the union,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.2
849,The elements of union are always accessed using & operator,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.7
850,"Will the following code work?
#include<stdio.h>
#include<malloc.h>

struct emp
{
    int len;
    char name[1];
};
int main()
{
    char newname[] = ""Rahul"";
    struct emp *p = (struct emp *) malloc(sizeof(struct emp) -1 +
                    strlen(newname)+1);

    p->len = strlen(newname);
    strcpy(p -> name, newname);
    printf(""%d %s\n"", p->len, p->name);
    return 0;
}",Yes,No,Not Available,Not Available,Yes,"The program allocates space for the structure with the size adjusted so that the
name
field can hold the requested name.","Structures, Unions, Enums",C Programming,2.9
851,A pointer union CANNOT be created,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.6
852,Is there easy way to print enumeration values symbolically?,Yes,No,Not Available,Not Available,No,You can write a function of your own to map an enumeration constant to a string.,"Structures, Unions, Enums",C Programming,2.9
853,By default structure variable will be of auto storage class,Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.9
854,Is it necessary that the size of all elements in a union should be same?,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,2.3
855,Can we have an array of bit fields?,Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1.9
856,"Will the following declaration work?
typedef struct s
{
    int a;
    float b;
}s;",Yes,No,Not Available,Not Available,Yes,"No answer description is available.
Let's discuss.","Structures, Unions, Enums",C Programming,1
857,Can a structure can point to itself?,Yes,No,Not Available,Not Available,Yes,A structure pointing to itself is called self-referential structures.,"Structures, Unions, Enums",C Programming,1.6
858,"If a char is 1 byte wide, an integer is 2 bytes wide and a long integer is 4 bytes wide then will the following structure always occupy 7 bytes?
struct ex
{
    char ch;
    int i;
    long int a;
};",Yes,No,Not Available,Not Available,No,"A compiler may leave holes in structures by padding the first char in the structure with another byte just to ensures that the integer that follows is stored at an location. Also, there might be 2extra bytes after the integer to ensure that the long integer is stored at an address, which is multiple of 4. Such alignment is done by machines to improve the efficiency of accessing values.","Structures, Unions, Enums",C Programming,2.1
859,The maximum combined length of the command-line arguments including the spaces between adjacent arguments is,128 characters,256 characters,67 characters,It may vary from one operating system to another,It may vary from one operating system to another,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.1
860,According to ANSI specifications which is the correct way of declaring main when it receives command-line arguments?,"int main(int argc, char *argv[])","int main(argc, argv)
int argc; char *argv;","int main()
{
    int argc; char *argv;
}",None of above,"int main(int argc, char *argv[])","No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.6
861,What do the 'c' and 'v' in argv stands for?,'c' means argument control 'v' means argument vector,'c' means argument count 'v' means argument vertex,'c' means argument count 'v' means argument vector,'c' means argument configuration 'v' means argument visibility,'c' means argument count 'v' means argument vector,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.7
862,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog one two three
/* myprog.c */
#include<stdio.h>

int main(int argc, char **argv)
{
    printf(""%c\n"", **++argv);
    return 0;
}",myprog one two three,myprog one,o,two,o,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.6
863,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog one two three
/* myprog.c */
#include<stdio.h>
#include<stdlib.h>

int main(int argc, char **argv)
{
    printf(""%s\n"", *++argv);
    return 0;
}",myprog,one,two,three,one,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.5
864,"What will be the output of the program (sample.c) given below if it is executed from the command line (Turbo C in DOS)?
cmd> sample 1 2 3
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    int j;
    j = argv[1] + argv[2] + argv[3];
    printf(""%d"", j);
    return 0;
}",6,sample 6,Error,Garbage value,Error,"Here
argv[1]
,
argv[2]
and
argv[3]
are string type. We have to convert the string to integer type before perform arithmetic operation.
Example:
j = atoi(argv[1]) + atoi(argv[2]) + atoi(argv[3]);",Command Line Arguments,C Programming,2
865,"What will be the output of the program (sample.c) given below if it is executed from the command line (turbo c under DOS)?
cmd> sample Good Morning
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    printf(""%d %s"", argc, argv[1]);
    return 0;
}",3 Good,2 Good,Good Morning,3 Morning,3 Good,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2
866,"What will be the output of the program
#include<stdio.h>
void fun(int);

int main(int argc)
{
    printf(""%d "", argc);
    fun(argc);
    return 0;
}
void fun(int i)
{
    if(i!=4)
        main(++i);
}",1 2 3,1 2 3 4,2 3 4,1,1 2 3 4,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.6
867,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample ""*.c""
/* sample.c */
#include<stdio.h>

int main(int argc, int *argv)
{
    int i;
    for(i=1; i<argc; i++)
        printf(""%s\n"", argv[i]);
    return 0;
}",*.c,"""*.c""",sample *.c,List of all files and folders in the current directory,*.c,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.9
868,"What will be the output of the program if it is executed like below?
cmd> sample
/* sample.c */
#include<stdio.h>

int main(int argc, char **argv)
{
    printf(""%s\n"", argv[argc-1]);
    return 0;
}",0,sample,samp,No output,sample,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.7
869,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample friday tuesday sunday
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    printf(""%c"", **++argv);
    return 0;
}",s,f,sample,friday,f,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.6
870,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog friday tuesday sunday
/* myprog.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    printf(""%c"", *++argv[1]);
    return 0;
}",r,f,m,y,r,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.8
871,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample one two three
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    int i=0;
    i+=strlen(argv[1]);
    while(i>0)
    {
        printf(""%c"", argv[1][--i]);
    }
    return 0;
}",three two one,owt,eno,eerht,eno,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2
872,"What will be the output of the program in Turbo C?
#include<stdio.h>

int main(int argc, char *argv, char *env[])
{
    int i;
    for(i=1; i<argc; i++)
        printf(""%s\n"", env[i]);
    return 0;
}",List of all environment variables,List of all command-line arguments,count of command-line arguments,Error: cannot have more than two arguments in main(),List of all environment variables,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.1
873,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample Jan Feb Mar
/* sample.c */
#include<stdio.h>
#include<dos.h>

int main(int arc, char *arv[])
{
    int i;
    for(i=1; i<_argc; i++)
        printf(""%s "", _argv[i]);
    return 0;
}",No output,sample Jan Feb Mar,Jan Feb Mar,Error,Jan Feb Mar,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.1
874,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample monday tuesday wednesday thursday
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    while(--argc>0)
        printf(""%s"", *++argv);
    return 0;
}",sample monday tuesday wednesday thursday,monday tuesday wednesday thursday,monday tuesday thursday,tuesday,monday tuesday wednesday thursday,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.8
875,"If the following program (myproc.c) is present in the directory ""C:\TC"" then what will be output of the program if run it from DOS shell?
/* myproc.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    printf(""%s"", argv[0]);
    return 0;
}",SAMPLE.C,C:\TC\MYPROC.EXE,C:\TC,Error,C:\TC\MYPROC.EXE,"In order to execute it from DOS shell, we have to run the created EXE file by entering the exe file name as
C:\TC>myproc <enter>.",Command Line Arguments,C Programming,2.7
876,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog one two three
/* myprog.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    int i;
    for(i=1; i<argc; i++)
        printf(""%c"", argv[i][0]);
    return 0;
}",oot,ott,nwh,eoe,ott,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.6
877,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample 1 2 3
cmd> sample 2 2 3
cmd> sample 3 2 3
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    printf(""%s\n"", argv[0]);
    return 0;
}",sample 3 2 3,sample 1 2 3,sample,Error,sample,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.6
878,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog 1 2 3
/* myprog.c */
#include<stdio.h>
#include<stdlib.h>

int main(int argc, char **argv)
{
    int i, j=0;
    for(i=0; i<argc; i++)
        j = j+atoi(argv[i]);
    printf(""%d\n"", j);
    return 0;
}",123,6,Error,"""123""",6,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.4
879,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample friday tuesday sunday
/* sample.c */
#include<stdio.h>

int main(int sizeofargv, char *argv[])
{
    while(sizeofargv)
        printf(""%s"", argv[--sizeofargv]);
    return 0;
}",sample friday tuesday sunday,sample friday tuesday,sunday tuesday friday sample,sunday tuesday friday,sunday tuesday friday sample,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.7
880,"What will be the output of the program (sample.c) given below if it is executed from the command line?
cmd> sample friday tuesday sunday
/* sample.c */
#include<stdio.h>

int main(int argc, char *argv[])
{
    printf(""%c"", *++argv[2] );
    return 0;
}",s,f,u,r,u,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.8
881,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog 10 20 30
/* myprog.c */
#include<stdio.h>

int main(int argc, char **argv)
{
    int i;
    for(i=0; i<argc; i++)
        printf(""%s\n"", argv[i]);
    return 0;
}",10 20 30,myprog 10 20,myprog 10 20 30,10 20,myprog 10 20 30,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.3
882,"What will be the output of the program (myprog.c) given below if it is executed from the command line?
cmd> myprog one two three
/* myprog.c */
#include<stdio.h>
#include<stdlib.h>

int main(int argc, char **argv)
{
    int i;
    for(i=1; i<=3; i++)
        printf(""%u\n"", &argv[i]);
    return 0;
}
If the first value printed by the above program is 65517, what will be the rest of output?",65525 65531,65519 65521,65517 65517,65521 65525,65519 65521,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.2
883,Which of the following is TRUE about argv?,It is an array of character pointers,It is a pointer to an array of character pointers,It is an array of strings,None of above,It is an array of character pointers,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,-1.6
884,"Which of the following statements are FALSE about the below code?
int main(int ac, char *av[])
{
}",ac contains count of arguments supplied at command-line,av[] contains addresses of arguments supplied at a command line,"In place of ac and av, argc and argv should be used.",The variables ac and av are always local to main(),"In place of ac and av, argc and argv should be used.","No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,-1.3
885,"Every time we supply new set of values to the program at command prompt, we need to recompile the program.",TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.4
886,Even if integer/float arguments are supplied at command prompt they are treated as strings.,TRUE,FALSE,Not Available,Not Available,TRUE,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.2
887,The first argument to be supplied at command-line must always be count of total arguments.,TRUE,FALSE,Not Available,Not Available,FALSE,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,2.1
888,"In Turbo C/C++ under DOS if we want that any wild card characters in the command-line arguments should be appropriately expanded, are we required to make any special provision?",Yes,No,Not Available,Not Available,Yes,"Yes you have to compile a program like
tcc myprog wildargs.obj",Command Line Arguments,C Programming,1.9
889,"If the different command line arguments are supplied at different times would the output of the following program change?
#include<stdio.h>

int main(int argc, char **argv)
{
    printf(""%d\n"", argv[argc]);
    return 0;
}",Yes,No,Not Available,Not Available,No,"No answer description is available.
Let's discuss.",Command Line Arguments,C Programming,1.2
890,Does there exist any way to make the command-line arguments available to other functions without passing them as arguments to the function?,Yes,No,Not Available,Not Available,Yes,"Using the predefined variables
_argc, _argv
. This is a compiler dependent feature. It works in TC/TC++ but not in gcc and visual studio.",Command Line Arguments,C Programming,1.8
